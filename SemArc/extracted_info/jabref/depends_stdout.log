Start parsing files...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\module-info.java...
line 1:0 mismatched input 'open' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'import', 'interface', 'package', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\architecture\AllowedToUseAwt.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\architecture\AllowedToUseLogic.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\architecture\AllowedToUseStandardStreams.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\architecture\AllowedToUseSwing.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\architecture\ApacheCommonsLang3Allowed.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\cli\ArgumentProcessor.java...
line 387:23 no viable alternative at input 'case 3 ->'
line 387:23 mismatched input '->' expecting {'instanceof', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 388:16 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 388:23 mismatched input '->' expecting {'instanceof', '[', ']', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 391:16 extraneous input 'default' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 424:10 extraneous input 'else' expecting {'abstract', 'boolean', 'byte', 'char', 'class', 'double', 'enum', 'final', 'float', 'int', 'interface', 'long', 'native', 'private', 'protected', 'public', 'short', 'static', 'strictfp', 'synchronized', 'transient', 'void', 'volatile', '{', '}', ';', '<', '@', IDENTIFIER}
line 427:8 extraneous input 'return' expecting {'abstract', 'boolean', 'byte', 'char', 'class', 'double', 'enum', 'final', 'float', 'int', 'interface', 'long', 'native', 'private', 'protected', 'public', 'short', 'static', 'strictfp', 'synchronized', 'transient', 'void', 'volatile', '{', '}', ';', '<', '@', IDENTIFIER}
line 430:12 extraneous input 'void' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 433:8 extraneous input 'if' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 435:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 437:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 441:12 extraneous input 'System' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 442:12 extraneous input 'System' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 443:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 446:12 extraneous input 'List' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 448:8 extraneous input 'List' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 449:8 extraneous input 'if' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 456:16 extraneous input 'ParserResult' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 457:16 extraneous input 'if' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 463:20 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 465:24 extraneous input 'LOGGER' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 466:20 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 478:20 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 480:20 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 483:16 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 489:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 493:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 497:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 501:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 504:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 506:12 extraneous input 'boolean' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 509:12 extraneous input 'AuxCommandLine' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 510:12 extraneous input 'BibDatabase' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 512:12 extraneous input 'boolean' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 515:12 extraneous input 'if' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 517:16 extraneous input 'saveDatabase' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 518:16 extraneous input 'notSavedMsg' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 519:12 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 523:12 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 525:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 527:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 530:12 extraneous input 'void' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 533:12 extraneous input 'try' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 535:16 extraneous input 'SaveConfiguration' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 538:16 extraneous input 'BibDatabaseWriter' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 544:16 extraneous input 'databaseWriter' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 547:16 extraneous input 'if' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 550:16 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 554:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 557:12 extraneous input 'void' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 563:16 extraneous input 'if' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 565:16 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 568:12 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 574:12 extraneous input 'Path' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 575:12 extraneous input 'BibDatabaseContext' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 576:12 extraneous input 'databaseContext' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 577:12 extraneous input 'List' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 579:12 extraneous input 'System' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 580:12 extraneous input 'ExporterFactory' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 584:12 extraneous input 'Optional' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 585:12 extraneous input 'if' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 587:12 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 595:16 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 598:16 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 603:12 extraneous input 'void' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 606:12 extraneous input 'Globals' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 607:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 609:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 612:12 extraneous input 'void' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 616:16 extraneous input 'preferencesService' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 617:16 extraneous input 'new' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 618:12 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 620:16 extraneous input 'LOGGER' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 621:12 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 624:12 extraneous input 'for' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 627:20 extraneous input 'System' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 628:16 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 630:16 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 635:12 extraneous input 'void' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 638:12 extraneous input 'LOGGER' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 639:12 extraneous input 'AutoSetFileLinksUtil' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 643:12 extraneous input 'util' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 644:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 647:12 extraneous input 'void' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 651:12 extraneous input 'LOGGER' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 653:12 extraneous input 'CitationKeyGenerator' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 656:12 extraneous input 'for' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 658:12 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 668:12 extraneous input 'Optional' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 671:12 extraneous input 'System' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 672:12 extraneous input 'return' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 673:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 676:8 extraneous input 'String' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 677:8 extraneous input 'String' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 679:8 extraneous input 'Set' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 682:8 extraneous input 'Optional' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 685:8 extraneous input 'if' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 688:12 extraneous input 'System' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 689:12 extraneous input 'fetchers' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 691:12 extraneous input 'return' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 692:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 694:12 extraneous input 'System' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 695:12 extraneous input 'try' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 697:16 extraneous input 'if' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 699:20 extraneous input 'return' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 700:16 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 702:20 extraneous input 'return' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 703:16 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 706:16 extraneous input 'return' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 707:12 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 711:11 extraneous input 'boolean' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 713:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 715:11 extraneous input 'boolean' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 717:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 722:0 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\cli\AuxCommandLine.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\cli\JabRefCLI.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\cli\Launcher.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\cli\SystemOutputPrinter.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\AbstractViewModel.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\actions\Action.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\actions\ActionFactory.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\actions\ActionHelper.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\actions\JabRefAction.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\actions\SimpleCommand.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\actions\Sources.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\actions\StandardActions.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\autocompleter\AppendPersonNamesStrategy.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\autocompleter\AppendWordsStrategy.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\autocompleter\AutoCompleteFirstNameMode.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\autocompleter\AutoCompletePreferences.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\autocompleter\AutoCompletionInput.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\autocompleter\AutoCompletionStrategy.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\autocompleter\AutoCompletionTextInputBinding.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\autocompleter\BibEntrySuggestionProvider.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\autocompleter\ContentSelectorSuggestionProvider.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\autocompleter\EmptySuggestionProvider.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\autocompleter\FieldValueSuggestionProvider.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\autocompleter\JournalsSuggestionProvider.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\autocompleter\PersonNameStringConverter.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\autocompleter\PersonNameSuggestionProvider.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\autocompleter\ReplaceStrategy.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\autocompleter\StringSuggestionProvider.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\autocompleter\SuggestionProvider.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\autocompleter\SuggestionProviders.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\autocompleter\WordSuggestionProvider.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\auximport\AuxParserResultViewModel.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\auximport\FromAuxDialog.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\auximport\NewSubLibraryAction.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\backup\BackupResolverDialog.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\BasePanelMode.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\bibtexextractor\BibtexExtractor.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\bibtexextractor\BibtexExtractorViewModel.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\bibtexextractor\ExtractBibtexAction.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\bibtexextractor\ExtractBibtexDialog.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\citationkeypattern\GenerateCitationKeyAction.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\citationkeypattern\GenerateCitationKeySingleAction.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\cleanup\CleanupAction.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\cleanup\CleanupDialog.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\cleanup\CleanupPresetPanel.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\cleanup\CleanupSingleAction.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\ClipBoardManager.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\collab\ChangeScanner.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\collab\DatabaseChange.java...
line 24:7 extraneous input 'sealed' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 24:44 mismatched input 'permits' expecting {'extends', 'implements', '{', '<'}
line 25:20 extraneous input 'BibDatabaseContext' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 26:20 extraneous input 'OptionalObjectProperty' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 27:18 extraneous input 'BooleanProperty' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 28:18 extraneous input 'StringProperty' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 30:14 extraneous input 'DatabaseChange' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 32:8 extraneous input 'setChangeName' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 34:8 extraneous input 'if' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 36:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 39:11 extraneous input 'boolean' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 41:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 43:11 extraneous input 'BooleanProperty' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 45:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 47:11 extraneous input 'void' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 49:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 54:11 extraneous input 'void' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 56:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 58:11 extraneous input 'String' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 60:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 62:14 extraneous input 'void' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 64:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 66:11 extraneous input 'Optional' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 68:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 70:20 extraneous input 'void' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 71:0 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\collab\DatabaseChangeDetailsView.java...
line 15:7 extraneous input 'sealed' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 15:74 mismatched input 'permits' expecting {'implements', '{'}
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\collab\DatabaseChangeDetailsViewFactory.java...
line 51:50 extraneous input 'entryChange' expecting ')'
line 53:54 extraneous input 'entryAdd' expecting ')'
line 55:57 extraneous input 'entryDelete' expecting ')'
line 57:61 extraneous input 'stringAdd' expecting ')'
line 59:64 extraneous input 'stringDelete' expecting ')'
line 61:64 extraneous input 'stringChange' expecting ')'
line 63:64 extraneous input 'stringRename' expecting ')'
line 65:60 extraneous input 'metadataChange' expecting ')'
line 67:57 extraneous input 'groupChange' expecting ')'
line 69:60 extraneous input 'preambleChange' expecting ')'
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\collab\DatabaseChangeList.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\collab\DatabaseChangeListener.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\collab\DatabaseChangeMonitor.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\collab\DatabaseChangeResolver.java...
line 8:7 extraneous input 'sealed' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 8:52 mismatched input 'permits' expecting {'extends', 'implements', '{', '<'}
line 9:20 extraneous input 'DialogService' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 11:14 extraneous input 'DatabaseChangeResolver' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 13:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 15:20 extraneous input 'Optional' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 16:0 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\collab\DatabaseChangeResolverFactory.java...
line 23:42 extraneous input 'entryChange' expecting ')'
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\collab\DatabaseChangesResolverDialog.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\collab\entryadd\EntryAdd.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\collab\entrychange\EntryChange.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\collab\entrychange\EntryChangeDetailsView.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\collab\entrychange\EntryChangeResolver.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\collab\entrychange\EntryWithPreviewAndSourceDetailsView.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\collab\entrychange\PreviewWithSourceTab.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\collab\entrydelete\EntryDelete.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\collab\ExternalChangesResolverViewModel.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\collab\groupchange\GroupChange.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\collab\groupchange\GroupChangeDetailsView.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\collab\metedatachange\MetadataChange.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\collab\metedatachange\MetadataChangeDetailsView.java...
line 33:15 extraneous input 'switch' expecting {'boolean', 'byte', 'char', 'double', 'float', 'int', 'long', 'new', 'short', 'super', 'this', 'void', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 33:31 missing ';' at '{'
line 34:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 36:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 38:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 40:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 42:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 44:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 46:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 48:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 50:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 52:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 54:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 56:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\collab\preamblechange\PreambleChange.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\collab\preamblechange\PreambleChangeDetailsView.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\collab\stringadd\BibTexStringAdd.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\collab\stringadd\BibTexStringAddDetailsView.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\collab\stringchange\BibTexStringChange.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\collab\stringchange\BibTexStringChangeDetailsView.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\collab\stringdelete\BibTexStringDelete.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\collab\stringdelete\BibTexStringDeleteDetailsView.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\collab\stringrename\BibTexStringRename.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\collab\stringrename\BibTexStringRenameDetailsView.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\commonfxcontrols\CitationKeyPatternPanel.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\commonfxcontrols\CitationKeyPatternPanelItemModel.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\commonfxcontrols\CitationKeyPatternPanelViewModel.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\commonfxcontrols\FieldFormatterCleanupsPanel.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\commonfxcontrols\FieldFormatterCleanupsPanelViewModel.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\commonfxcontrols\SaveOrderConfigPanel.java...
line 78:55 extraneous input 'label' expecting ')'
line 138:55 extraneous input 'label' expecting ')'
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\commonfxcontrols\SaveOrderConfigPanelViewModel.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\commonfxcontrols\SortCriterionViewModel.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\copyfiles\CopyFilesAction.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\copyfiles\CopyFilesDialogView.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\copyfiles\CopyFilesDialogViewModel.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\copyfiles\CopyFilesResultItemViewModel.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\copyfiles\CopyFilesResultListDependency.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\copyfiles\CopyFilesTask.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\copyfiles\CopySingleFileAction.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\DefaultInjector.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\desktop\JabRefDesktop.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\desktop\os\DefaultDesktop.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\desktop\os\Linux.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\desktop\os\NativeDesktop.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\desktop\os\OSX.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\desktop\os\Windows.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\Dialog.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\dialogs\AutosaveUiManager.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\dialogs\BackupUIManager.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\DialogService.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\documentviewer\DocumentPageViewModel.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\documentviewer\DocumentViewerControl.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\documentviewer\DocumentViewerView.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\documentviewer\DocumentViewerViewModel.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\documentviewer\DocumentViewModel.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\documentviewer\PageDimension.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\documentviewer\PdfDocumentPageViewModel.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\documentviewer\PdfDocumentViewModel.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\documentviewer\ShowDocumentViewerAction.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\DragAndDropDataFormats.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\DragAndDropHelper.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\duplicationFinder\DuplicateResolverDialog.java...
line 82:12 no viable alternative at input 'case DUPLICATE_SEARCH -> {\n                first = new ButtonType(Localization.lang("Keep left"), ButtonData.LEFT);\n                second = new ButtonType(Localization.lang("Keep right"), ButtonData.LEFT);\n                both = new ButtonType(Localization.lang("Keep both"), ButtonData.LEFT);\n                threeWayMerge = new ThreeWayMergeView(one, two, preferencesService.getBibEntryPreferences());\n            }\n            case'
line 82:12 mismatched input 'case' expecting {'instanceof', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 89:12 mismatched input 'case' expecting {'instanceof', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 96:12 mismatched input 'default' expecting {'instanceof', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 99:8 extraneous input 'this' expecting {'abstract', 'boolean', 'byte', 'char', 'class', 'double', 'enum', 'final', 'float', 'int', 'interface', 'long', 'native', 'private', 'protected', 'public', 'short', 'static', 'strictfp', 'synchronized', 'transient', 'void', 'volatile', '{', '}', ';', '<', '@', IDENTIFIER}
line 99:28 mismatched input '.' expecting {'throws', '{'}
line 99:45 mismatched input '.' expecting {'throws', '{'}
line 99:58 no viable alternative at input 'first,'
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\duplicationFinder\DuplicateSearch.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\edit\automaticfiededitor\AbstractAutomaticFieldEditorTabView.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\edit\automaticfiededitor\AbstractAutomaticFieldEditorTabViewModel.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\edit\automaticfiededitor\AutomaticFieldEditorAction.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\edit\automaticfiededitor\AutomaticFieldEditorDialog.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\edit\automaticfiededitor\AutomaticFieldEditorTab.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\edit\automaticfiededitor\AutomaticFieldEditorViewModel.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\edit\automaticfiededitor\copyormovecontent\CopyOrMoveFieldContentTabView.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\edit\automaticfiededitor\copyormovecontent\CopyOrMoveFieldContentTabViewModel.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\edit\automaticfiededitor\editfieldcontent\EditFieldContentTabView.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\edit\automaticfiededitor\editfieldcontent\EditFieldContentViewModel.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\edit\automaticfiededitor\LastAutomaticFieldEditorEdit.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\edit\automaticfiededitor\MoveFieldValueAction.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\edit\automaticfiededitor\NotificationPaneAdapter.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\edit\automaticfiededitor\renamefield\RenameFieldTabView.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\edit\automaticfiededitor\renamefield\RenameFieldViewModel.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\edit\CopyDoiUrlAction.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\edit\CopyMoreAction.java...
line 58:42 no viable alternative at input 'case COPY_TITLE -> copyTitle();'
line 59:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 60:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 61:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 62:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 63:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 64:12 extraneous input 'default' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 68:12 extraneous input 'void' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 71:8 extraneous input 'List' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 76:8 extraneous input 'if' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 78:12 extraneous input 'return' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 79:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 81:14 extraneous input 'String' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 82:8 extraneous input 'clipBoardManager' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 84:8 extraneous input 'if' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 88:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 91:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 94:12 extraneous input 'void' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 98:8 extraneous input 'List' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 103:8 extraneous input 'if' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 105:12 extraneous input 'return' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 106:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 108:14 extraneous input 'String' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 109:8 extraneous input 'clipBoardManager' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 111:8 extraneous input 'if' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 115:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 118:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 121:12 extraneous input 'void' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 125:8 extraneous input 'if' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 130:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 135:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 138:12 extraneous input 'void' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 141:12 extraneous input 'return' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 142:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 144:14 extraneous input 'String' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 145:8 extraneous input 'clipBoardManager' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 147:8 extraneous input 'if' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 151:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 154:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 157:12 extraneous input 'void' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 161:8 extraneous input 'List' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 166:8 extraneous input 'if' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 168:12 extraneous input 'return' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 169:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 175:14 extraneous input 'String' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 176:8 extraneous input 'clipBoardManager' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 178:8 extraneous input 'if' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 182:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 185:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 188:12 extraneous input 'void' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 192:8 extraneous input 'StringReader' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 193:8 extraneous input 'Layout' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 194:8 extraneous input 'try' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 196:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 198:12 extraneous input 'return' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 199:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 203:8 extraneous input 'int' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 205:8 extraneous input 'for' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 208:16 extraneous input 'keyAndTitle' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 209:12 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 214:12 extraneous input 'return' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 215:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 219:8 extraneous input 'if' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 223:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 226:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 234:12 extraneous input 'void' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 237:8 extraneous input 'StringBuilder' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 238:8 extraneous input 'StringBuilder' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 240:8 extraneous input 'List' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 244:8 extraneous input 'if' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 246:12 extraneous input 'return' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 247:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 251:12 extraneous input 'String' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 252:12 extraneous input 'keyAndLink' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 253:12 extraneous input 'keyAndLink' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 254:12 extraneous input 'fallbackString' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 255:12 extraneous input 'fallbackString' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 256:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 260:8 extraneous input 'if' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 264:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 267:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\edit\EditAction.java...
line 56:49 no viable alternative at input 'case COPY -> textInput.copy();'
line 57:20 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 58:20 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 59:20 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 60:20 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 61:20 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 62:20 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 63:20 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 64:20 extraneous input 'default' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 66:14 mismatched input 'else' expecting {'instanceof', ')', '[', ',', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 74:68 no viable alternative at input 'case COPY -> frame.getCurrentLibraryTab().copy();'
line 75:20 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 76:20 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 77:20 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 78:20 extraneous input 'default' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 81:9 extraneous input ')' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 82:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\edit\ManageKeywordsAction.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\edit\ManageKeywordsDialog.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\edit\ManageKeywordsDisplayType.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\edit\ManageKeywordsViewModel.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\edit\OpenBrowserAction.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\edit\ReplaceStringAction.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\edit\ReplaceStringView.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\edit\ReplaceStringViewModel.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\entryeditor\DeprecatedFieldsTab.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\entryeditor\EntryEditor.java...
line 155:20 no viable alternative at input 'case COPY -> {\n                        LOGGER.debug("Mode COPY");\n                        fileLinker.copyFilesToFileDirAndAddToEntry(entry, files, libraryTab.getIndexingTaskManager());\n                    }\n                    case'
line 155:20 mismatched input 'case' expecting {'instanceof', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 159:20 mismatched input 'case' expecting {'instanceof', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 163:16 missing ';' at '}'
line 167:12 mismatched input 'event' expecting {'instanceof', ')', '[', ',', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 169:9 extraneous input ')' expecting {'abstract', 'boolean', 'byte', 'char', 'class', 'double', 'enum', 'final', 'float', 'int', 'interface', 'long', 'native', 'private', 'protected', 'public', 'short', 'static', 'strictfp', 'synchronized', 'transient', 'void', 'volatile', '{', '}', ';', '<', '@', IDENTIFIER}
line 175:12 extraneous input 'void' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 178:12 extraneous input 'if' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 183:24 extraneous input 'event' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 184:24 extraneous input 'break' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 185:20 extraneous input 'case' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 188:24 extraneous input 'event' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 189:24 extraneous input 'break' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 190:20 extraneous input 'case' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 192:24 extraneous input 'event' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 193:24 extraneous input 'break' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 194:20 extraneous input 'case' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 196:24 extraneous input 'event' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 197:24 extraneous input 'break' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 198:20 extraneous input 'case' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 200:24 extraneous input 'event' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 201:24 extraneous input 'break' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 202:20 extraneous input 'case' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 205:24 extraneous input 'event' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 206:24 extraneous input 'break' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 207:20 extraneous input 'default' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 212:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 215:11 extraneous input 'void' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 217:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 220:12 extraneous input 'void' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 222:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 225:4 extraneous input 'void' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 228:8 extraneous input 'action' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 229:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 232:4 extraneous input 'void' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 234:8 extraneous input 'action' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 235:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 238:12 extraneous input 'void' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 240:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 243:12 extraneous input 'void' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 245:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 247:12 extraneous input 'List' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 252:8 extraneous input 'entryEditorTabs' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 255:8 extraneous input 'entryEditorTabs' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 256:8 extraneous input 'entryEditorTabs' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 257:8 extraneous input 'entryEditorTabs' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 260:8 extraneous input 'entryEditorTabs' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 263:8 extraneous input 'for' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 265:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 269:8 extraneous input 'entryEditorTabs' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 270:8 extraneous input 'entryEditorTabs' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 273:8 extraneous input 'sourceTab' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 282:8 extraneous input 'entryEditorTabs' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 285:8 extraneous input 'entryEditorTabs' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 287:8 extraneous input 'entryEditorTabs' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 289:8 extraneous input 'return' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 290:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 292:12 extraneous input 'void' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 302:8 extraneous input 'List' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 303:8 extraneous input 'tabbed' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 306:8 extraneous input 'for' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 306:24 extraneous input 'i' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 306:48 extraneous input 'i' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 308:12 extraneous input 'Tab' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 310:12 extraneous input 'if' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 312:12 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 316:12 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 323:11 extraneous input 'BibEntry' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 325:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 330:11 extraneous input 'void' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 334:8 extraneous input 'if' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 336:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 340:8 extraneous input 'recalculateVisibleTabs' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 341:8 extraneous input 'EasyBind' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 344:8 extraneous input 'if' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 346:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 351:8 extraneous input 'setupToolBar' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 354:8 extraneous input 'typeSubscription' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 356:12 extraneous input 'recalculateVisibleTabs' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 357:12 extraneous input 'getSelectedTab' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 358:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 359:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 361:12 extraneous input 'EntryEditorTab' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 363:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 365:12 extraneous input 'void' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 368:8 extraneous input 'typeLabel' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 371:8 extraneous input 'ContextMenu' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 372:8 extraneous input 'typeLabel' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 373:8 extraneous input 'typeChangeButton' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 376:8 extraneous input 'ContextMenu' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 377:8 extraneous input 'SortedSet' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 382:8 extraneous input 'for' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 384:12 extraneous input 'if' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 388:20 extraneous input 'PdfMergeMetadataImporter' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 393:20 extraneous input 'fetchAndMerge' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 394:16 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 395:12 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 397:12 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 399:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 402:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 404:12 extraneous input 'void' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 406:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 408:11 extraneous input 'void' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 414:20 extraneous input 'fieldsEditorTab' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 415:16 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 418:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 420:11 extraneous input 'void' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 422:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 424:11 extraneous input 'void' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 426:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\entryeditor\EntryEditorPreferences.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\entryeditor\EntryEditorTab.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\entryeditor\FieldsEditorTab.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\entryeditor\fileannotationtab\FileAnnotationTab.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\entryeditor\fileannotationtab\FileAnnotationTabView.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\entryeditor\fileannotationtab\FileAnnotationTabViewModel.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\entryeditor\fileannotationtab\FileAnnotationViewModel.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\entryeditor\fileannotationtab\FulltextSearchResultsTab.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\entryeditor\LatexCitationsTab.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\entryeditor\LatexCitationsTabViewModel.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\entryeditor\MathSciNetTab.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\entryeditor\OpenEntryEditorAction.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\entryeditor\OptionalFields2Tab.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\entryeditor\OptionalFieldsTab.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\entryeditor\OptionalFieldsTabBase.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\entryeditor\OtherFieldsTab.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\entryeditor\PreviewSwitchAction.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\entryeditor\PreviewTab.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\entryeditor\RelatedArticlesTab.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\entryeditor\RequiredFieldsTab.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\entryeditor\SourceTab.java...
line 92:44 no viable alternative at input 'case COPY -> codeArea.copy();'
line 93:16 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 94:16 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 95:16 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 97:33 no viable alternative at input 'codeArea.requestFocus('
line 97:35 mismatched input ';' expecting {'throws', '{'}
line 101:11 extraneous input 'SourceTab' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 103:8 extraneous input 'this' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 104:8 extraneous input 'this' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 105:8 extraneous input 'this' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 106:8 extraneous input 'this' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 107:8 extraneous input 'this' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 108:8 extraneous input 'this' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 109:8 extraneous input 'this' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 110:8 extraneous input 'this' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 111:8 extraneous input 'this' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 112:8 extraneous input 'this' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 114:8 extraneous input 'stateManager' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 116:12 extraneous input 'highlightSearchPattern' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 117:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 118:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 120:12 extraneous input 'void' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 123:12 extraneous input 'Matcher' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 124:12 extraneous input 'while' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 125:32 extraneous input 'i' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 125:59 extraneous input 'i' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 127:16 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 132:12 extraneous input 'String' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 134:8 extraneous input 'BibWriter' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 135:8 extraneous input 'FieldWriter' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 136:8 extraneous input 'new' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 137:8 extraneous input 'return' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 138:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 166:12 extraneous input 'void' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 168:8 extraneous input 'codeArea' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 169:8 extraneous input 'codeArea' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 170:8 extraneous input 'codeArea' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 172:12 extraneous input 'if' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 174:12 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 176:8 extraneous input 'codeArea' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 177:8 extraneous input 'codeArea' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 178:8 extraneous input 'codeArea' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 180:8 extraneous input 'ActionFactory' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 181:8 extraneous input 'ContextMenu' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 182:8 extraneous input 'contextMenu' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 189:8 extraneous input 'contextMenu' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 190:8 extraneous input 'codeArea' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 192:8 extraneous input 'sourceValidator' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 194:8 extraneous input 'sourceValidator' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 196:12 extraneous input 'if' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 201:20 extraneous input 'dialogService' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 202:16 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 203:12 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 206:8 extraneous input 'codeArea' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 209:12 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 211:8 extraneous input 'VirtualizedScrollPane' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 212:8 extraneous input 'this' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 213:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 216:11 extraneous input 'boolean' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 218:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 220:12 extraneous input 'void' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 224:12 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 227:12 extraneous input 'try' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 229:16 extraneous input 'codeArea' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 230:16 extraneous input 'highlightSearchPattern' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 231:12 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 233:16 extraneous input 'codeArea' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 235:16 extraneous input 'LOGGER' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 236:12 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 238:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 241:14 extraneous input 'void' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 244:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 247:8 extraneous input 'updateCodeArea' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 249:8 extraneous input 'entry' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 250:8 extraneous input 'entry' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 251:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 253:12 extraneous input 'void' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 256:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 259:8 extraneous input 'try' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 261:12 extraneous input 'BibDatabase' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 263:12 extraneous input 'if' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 265:12 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 271:16 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 273:16 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 280:12 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 283:12 extraneous input 'BibEntry' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 284:12 extraneous input 'String' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 286:12 extraneous input 'if' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 288:12 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 290:12 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 295:16 extraneous input 'String' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 297:16 extraneous input 'if' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 299:20 extraneous input 'outOfFocusEntry' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 300:16 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 306:16 extraneous input 'String' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 307:16 extraneous input 'String' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 308:16 extraneous input 'if' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 312:20 extraneous input 'compound' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 313:20 extraneous input 'outOfFocusEntry' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 314:16 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 320:16 extraneous input 'outOfFocusEntry' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 321:12 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 323:12 extraneous input 'undoManager' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 325:12 extraneous input 'sourceIsValid' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 326:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 328:12 extraneous input 'LOGGER' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 329:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 332:12 extraneous input 'void' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 338:16 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 341:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\entryeditor\UserDefinedFieldsTab.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\EntryTypeView.java...
line 221:16 no viable alternative at input 'case Article -> {\n                    return Localization.lang("An article in a journal, magazine, newspaper, or other periodical which forms a self-contained unit with its own title.");\n                }\n                case'
line 221:16 mismatched input 'case' expecting {'instanceof', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 224:16 mismatched input 'case' expecting {'instanceof', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 227:16 mismatched input 'case' expecting {'instanceof', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 230:16 mismatched input 'case' expecting {'instanceof', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 233:16 mismatched input 'case' expecting {'instanceof', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 236:16 mismatched input 'case' expecting {'instanceof', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 239:16 mismatched input 'case' expecting {'instanceof', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 242:16 mismatched input 'case' expecting {'instanceof', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 245:16 mismatched input 'case' expecting {'instanceof', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 248:16 mismatched input 'case' expecting {'instanceof', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 251:16 mismatched input 'case' expecting {'instanceof', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 254:16 mismatched input 'case' expecting {'instanceof', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 257:16 mismatched input 'case' expecting {'instanceof', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 260:16 mismatched input 'case' expecting {'instanceof', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 263:16 mismatched input 'case' expecting {'instanceof', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 266:16 mismatched input 'case' expecting {'instanceof', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 269:16 mismatched input 'case' expecting {'instanceof', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 272:16 mismatched input 'case' expecting {'instanceof', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 275:16 mismatched input 'case' expecting {'instanceof', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 278:16 mismatched input 'case' expecting {'instanceof', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 281:16 mismatched input 'case' expecting {'instanceof', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 284:16 mismatched input 'case' expecting {'instanceof', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 287:16 mismatched input 'case' expecting {'instanceof', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 290:16 mismatched input 'case' expecting {'instanceof', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 293:16 mismatched input 'case' expecting {'instanceof', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 296:16 mismatched input 'case' expecting {'instanceof', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 299:16 mismatched input 'case' expecting {'instanceof', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 302:16 mismatched input 'case' expecting {'instanceof', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 305:16 mismatched input 'case' expecting {'instanceof', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 308:16 mismatched input 'case' expecting {'instanceof', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 311:16 mismatched input 'case' expecting {'instanceof', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 314:16 mismatched input 'default' expecting {'instanceof', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 318:10 extraneous input 'else' expecting {'abstract', 'boolean', 'byte', 'char', 'class', 'double', 'enum', 'final', 'float', 'int', 'interface', 'long', 'native', 'private', 'protected', 'public', 'short', 'static', 'strictfp', 'synchronized', 'transient', 'void', 'volatile', '{', '}', ';', '<', '@', IDENTIFIER}
line 322:0 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\EntryTypeViewModel.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\errorconsole\ErrorConsoleView.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\errorconsole\ErrorConsoleViewModel.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\errorconsole\LogEventViewModel.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\exporter\CreateModifyExporterDialogView.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\exporter\CreateModifyExporterDialogViewModel.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\exporter\ExportCommand.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\exporter\ExporterViewModel.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\exporter\ExportToClipboardAction.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\exporter\SaveAction.java...
line 41:50 no viable alternative at input 'case SAVE -> saveDatabaseAction.save();'
line 42:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 43:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 46:0 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\exporter\SaveAllAction.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\exporter\SaveDatabaseAction.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\exporter\WriteMetadataToPdfAction.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\externalfiles\AutoLinkFilesAction.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\externalfiles\AutoSetFileLinksUtil.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\externalfiles\ChainedFilters.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\externalfiles\DateRange.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\externalfiles\DownloadFullTextAction.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\externalfiles\ExternalFilesEntryLinker.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\externalfiles\ExternalFileSorter.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\externalfiles\FileDownloadTask.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\externalfiles\FileExtensionViewModel.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\externalfiles\FileFilterUtils.java...
line 68:32 extraneous input 'switch' expecting {'boolean', 'byte', 'char', 'double', 'float', 'int', 'long', 'new', 'short', 'super', 'this', 'void', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 68:48 missing ';' at '{'
line 69:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 70:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 71:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 72:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 73:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 110:33 no viable alternative at input 'List<Path> sortedFiles = switch'
line 110:31 mismatched input '=' expecting '('
line 110:33 extraneous input 'switch' expecting {'boolean', 'byte', 'char', 'double', 'float', 'int', 'long', 'new', 'short', 'super', 'this', 'void', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 110:51 missing ';' at '{'
line 111:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 112:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 113:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\externalfiles\FindUnlinkedFilesAction.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\externalfiles\GitIgnoreFileFilter.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\externalfiles\ImportFilesResultItemViewModel.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\externalfiles\ImportHandler.java...
line 249:61 extraneous input 'entryChanger' expecting ')'
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\externalfiles\UnlinkedFilesCrawler.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\externalfiles\UnlinkedFilesDialogView.java...
line 283:79 no viable alternative at input 'case SELECT_ALL -> unlinkedFilesList.getCheckModel().checkAll();'
line 284:16 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 285:16 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 286:16 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 290:0 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\externalfiles\UnlinkedFilesDialogViewModel.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\externalfiles\UnlinkedPDFFileFilter.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\externalfiletype\CustomExternalFileType.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\externalfiletype\ExternalFileType.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\externalfiletype\ExternalFileTypes.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\externalfiletype\StandardExternalFileType.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\externalfiletype\UnknownExternalFileType.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\FallbackExceptionHandler.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\fieldeditors\AbstractEditorViewModel.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\fieldeditors\CitationKeyEditor.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\fieldeditors\CitationKeyEditorViewModel.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\fieldeditors\contextmenu\DefaultMenu.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\fieldeditors\contextmenu\EditorContextAction.java...
line 41:16 extraneous input 'switch' expecting {'boolean', 'byte', 'char', 'double', 'float', 'int', 'long', 'new', 'short', 'super', 'this', 'void', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', ')', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 41:33 mismatched input '{' expecting {'instanceof', ')', '[', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 42:20 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 43:20 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 44:20 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 45:20 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 46:20 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 48:48 mismatched input '.' expecting {'[', '.', '<', IDENTIFIER}
line 49:26 extraneous input 'else' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 50:48 mismatched input '.' expecting {'[', '.', '<', IDENTIFIER}
line 53:20 extraneous input 'default' expecting {'abstract', 'boolean', 'byte', 'char', 'class', 'double', 'enum', 'final', 'float', 'int', 'interface', 'long', 'native', 'private', 'protected', 'public', 'short', 'static', 'strictfp', 'synchronized', 'transient', 'void', 'volatile', '{', '}', ';', '<', '@', IDENTIFIER}
line 53:57 extraneous input 'true' expecting {'boolean', 'byte', 'char', 'double', 'final', 'float', 'int', 'long', 'short', ')', '@', IDENTIFIER}
line 53:62 mismatched input ';' expecting {'throws', '{'}
line 54:17 extraneous input ')' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 55:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 58:11 extraneous input 'void' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 61:12 extraneous input 'case' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 62:12 extraneous input 'case' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 63:12 extraneous input 'case' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 64:12 extraneous input 'case' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 65:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 67:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 72:18 extraneous input 'List' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 76:8 extraneous input 'MenuItem' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 78:8 extraneous input 'if' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 80:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 88:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\fieldeditors\contextmenu\EditorMenus.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\fieldeditors\contextmenu\ProtectedTermsMenu.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\fieldeditors\ContextMenuAddable.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\fieldeditors\DateEditor.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\fieldeditors\DateEditorViewModel.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\fieldeditors\EditorTextArea.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\fieldeditors\EditorTextField.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\fieldeditors\EditorTypeEditorViewModel.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\fieldeditors\EditorValidator.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\fieldeditors\FieldEditorFX.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\fieldeditors\FieldEditors.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\fieldeditors\FieldNameLabel.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\fieldeditors\GenderEditorViewModel.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\fieldeditors\identifier\BaseIdentifierEditorViewModel.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\fieldeditors\identifier\DoiIdentifierEditorViewModel.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\fieldeditors\identifier\EprintIdentifierEditorViewModel.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\fieldeditors\identifier\IdentifierEditor.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\fieldeditors\identifier\ISBNIdentifierEditorViewModel.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\fieldeditors\JournalEditor.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\fieldeditors\JournalEditorViewModel.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\fieldeditors\KeywordsEditor.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\fieldeditors\LinkedEntriesEditor.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\fieldeditors\LinkedEntriesEditorViewModel.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\fieldeditors\LinkedFilesEditor.java...
line 307:20 extraneous input 'switch' expecting {'boolean', 'byte', 'char', 'double', 'float', 'int', 'long', 'new', 'short', 'super', 'this', 'void', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', ')', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 307:37 mismatched input '{' expecting {'instanceof', ')', '[', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 308:24 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 313:24 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 318:24 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 321:24 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 325:24 extraneous input 'default' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 326:21 extraneous input ')' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 332:56 no viable alternative at input 'case EDIT_FILE_LINK -> linkedFile.edit();'
line 333:16 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 334:16 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 335:16 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 336:16 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 337:16 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 338:16 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 339:16 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 340:16 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 341:16 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 345:0 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\fieldeditors\LinkedFilesEditorViewModel.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\fieldeditors\LinkedFileViewModel.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\fieldeditors\MapBasedEditorViewModel.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\fieldeditors\MonthEditorViewModel.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\fieldeditors\OptionEditor.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\fieldeditors\OptionEditorViewModel.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\fieldeditors\OwnerEditor.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\fieldeditors\OwnerEditorViewModel.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\fieldeditors\PaginationEditorViewModel.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\fieldeditors\PatentTypeEditorViewModel.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\fieldeditors\PersonsEditor.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\fieldeditors\PersonsEditorViewModel.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\fieldeditors\SimpleEditor.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\fieldeditors\SimpleEditorViewModel.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\fieldeditors\TextInputControlBehavior.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\fieldeditors\TypeEditorViewModel.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\fieldeditors\UrlEditor.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\fieldeditors\UrlEditorViewModel.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\fieldeditors\URLUtil.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\fieldeditors\WriteMetadataToPdfCommand.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\fieldeditors\YesNoEditorViewModel.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\FXDialog.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\Globals.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\groups\GroupDescriptions.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\groups\GroupDialogHeader.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\groups\GroupDialogView.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\groups\GroupDialogViewModel.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\groups\GroupModeViewModel.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\groups\GroupNodeViewModel.java...
line 74:59 extraneous input 'automaticGroup' expecting ')'
line 358:79 no viable alternative at input 'case BOTTOM -> this.moveTo(targetParent.get(), targetIndex + 1);'
line 359:16 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 360:16 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 362:10 extraneous input 'else' expecting {'abstract', 'boolean', 'byte', 'char', 'class', 'double', 'enum', 'final', 'float', 'int', 'interface', 'long', 'native', 'private', 'protected', 'public', 'short', 'static', 'strictfp', 'synchronized', 'transient', 'void', 'volatile', '{', '}', ';', '<', '@', IDENTIFIER}
line 368:12 extraneous input 'int' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 370:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\groups\GroupsPreferences.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\groups\GroupTreeNodeViewModel.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\groups\GroupTreeView.java...
line 228:63 extraneous input 'pane' expecting ')'
line 461:42 missing ')' at 'scrollbar'
line 462:78 mismatched input ')' expecting {'instanceof', ')', '[', ',', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 568:20 extraneous input 'switch' expecting {'boolean', 'byte', 'char', 'double', 'float', 'int', 'long', 'new', 'short', 'super', 'this', 'void', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', ')', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 568:37 mismatched input '{' expecting {'instanceof', ')', '[', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 571:24 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 573:24 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 576:24 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 579:24 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 581:24 extraneous input 'default' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 583:21 extraneous input ')' expecting {'abstract', 'boolean', 'byte', 'char', 'class', 'double', 'enum', 'final', 'float', 'int', 'interface', 'long', 'native', 'private', 'protected', 'public', 'short', 'static', 'strictfp', 'synchronized', 'transient', 'void', 'volatile', '{', '}', ';', '<', '@', IDENTIFIER}
line 590:63 no viable alternative at input 'case GROUP_REMOVE ->\n                        viewModel.removeGroupNoSubgroups(group);'
line 591:16 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 593:16 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 595:16 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 599:16 mismatched input 'case' expecting {'instanceof', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 601:16 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 603:16 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 605:16 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 607:16 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 611:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\groups\GroupTreeViewModel.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\groups\GroupViewMode.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\groups\MoveGroupChange.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\groups\UndoableAddOrRemoveGroup.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\groups\UndoableChangeEntriesOfGroup.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\groups\UndoableModifySubtree.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\groups\UndoableMoveGroup.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\help\AboutAction.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\help\AboutDialogView.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\help\AboutDialogViewModel.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\help\ErrorConsoleAction.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\help\HelpAction.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\help\NewVersionDialog.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\help\SearchForUpdateAction.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\help\VersionWorker.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\icon\IconTheme.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\icon\InternalMaterialDesignIcon.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\icon\JabRefIcon.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\icon\JabrefIconProvider.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\icon\JabRefIconView.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\icon\JabRefIkonHandler.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\icon\JabRefMaterialDesignIcon.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\importer\actions\CheckForNewEntryTypesAction.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\importer\actions\GUIPostOpenAction.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\importer\actions\MergeReviewIntoCommentAction.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\importer\actions\MergeReviewIntoCommentConfirmationDialog.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\importer\actions\OpenDatabaseAction.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\importer\fetcher\LookupIdentifierAction.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\importer\fetcher\WebSearchPaneView.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\importer\fetcher\WebSearchPaneViewModel.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\importer\GenerateEntryFromIdAction.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\importer\GenerateEntryFromIdDialog.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\importer\GrobidOptInDialogHelper.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\importer\ImportAction.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\importer\ImportCommand.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\importer\ImportCustomEntryTypesDialog.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\importer\ImportCustomEntryTypesDialogViewModel.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\importer\ImportEntriesDialog.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\importer\ImportEntriesViewModel.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\importer\ImporterViewModel.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\importer\NewDatabaseAction.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\importer\NewEntryAction.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\importer\ParserResultWarningDialog.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\integrity\IntegrityCheckAction.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\integrity\IntegrityCheckDialog.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\integrity\IntegrityCheckDialogViewModel.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\JabRefDialogService.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\JabRefExecutorService.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\JabRefFrame.java...
line 688:50 extraneous input 'libraryTab' expecting ')'
line 702:44 extraneous input 'libraryTab' expecting ')'
line 1118:42 missing ')' at 'libraryTab'
line 1118:90 mismatched input ')' expecting {'instanceof', ')', '[', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 1118:92 missing ';' at '{'
line 1121:9 extraneous input ')' expecting {'abstract', 'boolean', 'byte', 'char', 'class', 'double', 'enum', 'final', 'float', 'int', 'interface', 'long', 'native', 'private', 'protected', 'public', 'short', 'static', 'strictfp', 'synchronized', 'transient', 'void', 'volatile', '{', '}', ';', '<', '@', IDENTIFIER}
line 1124:12 extraneous input 'ContextMenu' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 1126:8 extraneous input 'ActionFactory' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1128:8 extraneous input 'contextMenu' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1137:8 extraneous input 'return' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1138:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1140:11 extraneous input 'void' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 1143:8 extraneous input 'libraryTab' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1145:12 extraneous input 'closeTab' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1146:12 extraneous input 'event' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1147:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1149:8 extraneous input 'libraryTab' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1151:8 extraneous input 'if' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1153:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1156:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1162:11 extraneous input 'LibraryTab' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 1165:8 extraneous input 'LibraryTab' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1166:8 extraneous input 'addTab' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1167:8 extraneous input 'return' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1168:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1176:12 extraneous input 'void' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 1176:42 extraneous input 'LibraryTab' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 1176:66 extraneous input 'ParserResult' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 1178:8 extraneous input 'ImportCleanup' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1179:8 extraneous input 'cleanup' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1180:8 extraneous input 'ImportEntriesDialog' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1181:8 extraneous input 'dialog' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1182:8 extraneous input 'dialogService' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1183:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1185:11 extraneous input 'FileHistoryMenu' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 1187:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1195:12 extraneous input 'boolean' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 1202:8 extraneous input 'ButtonType' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1203:8 extraneous input 'ButtonType' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1204:8 extraneous input 'ButtonType' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1206:8 extraneous input 'Optional' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1211:8 extraneous input 'if' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1213:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1217:8 extraneous input 'if' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1219:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1224:16 extraneous input 'if' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1226:16 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1229:12 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1231:16 extraneous input 'dialogService' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1232:12 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1235:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1239:12 extraneous input 'return' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1240:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1243:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1248:12 extraneous input 'Boolean' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 1255:8 extraneous input 'ButtonType' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1256:8 extraneous input 'ButtonType' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1257:8 extraneous input 'ButtonType' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1259:8 extraneous input 'Optional' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1263:8 extraneous input 'if' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1269:20 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1272:16 extraneous input 'if' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1274:16 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1277:12 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1279:16 extraneous input 'dialogService' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1280:12 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1283:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1285:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1287:12 extraneous input 'void' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 1291:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1293:14 extraneous input 'BibDatabaseContext' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 1294:8 extraneous input 'if' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1297:12 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1303:12 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1305:12 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1308:12 extraneous input 'context' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1309:12 extraneous input 'context' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1310:12 extraneous input 'removeTab' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1311:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1313:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1315:8 extraneous input 'BackupManager' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1316:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1318:12 extraneous input 'void' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 1321:12 extraneous input 'tabbedPane' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1322:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1323:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1325:11 extraneous input 'void' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 1327:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1329:11 extraneous input 'OpenDatabaseAction' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 1331:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1333:11 extraneous input 'GlobalSearchBar' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 1335:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1337:11 extraneous input 'CountingUndoManager' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 1339:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1341:11 extraneous input 'DialogService' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 1343:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1345:12 extraneous input 'void' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 1350:8 extraneous input 'GroupTreeNode' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1352:8 extraneous input 'destinationLibraryTab' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1354:8 extraneous input 'List' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1356:8 extraneous input 'if' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1360:12 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1364:12 extraneous input 'void' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 1367:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1376:8 extraneous input 'destinationLibraryTab' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1379:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1488:0 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\JabRefGUI.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\journals\AbbreviateAction.java...
line 56:82 no viable alternative at input 'case ABBREVIATE_DEFAULT -> abbreviationType = AbbreviationType.DEFAULT;'
line 57:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 58:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 59:12 extraneous input 'default' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 62:8 extraneous input 'this' expecting {'abstract', 'boolean', 'byte', 'char', 'class', 'double', 'enum', 'final', 'float', 'int', 'interface', 'long', 'native', 'private', 'protected', 'public', 'short', 'static', 'strictfp', 'synchronized', 'transient', 'void', 'volatile', '{', '}', ';', '<', '@', IDENTIFIER}
line 62:62 no viable alternative at input 'ActionHelper.needsEntriesSelected('
line 62:76 extraneous input ')' expecting ';'
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\journals\AbbreviationType.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\journals\UndoableAbbreviator.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\journals\UndoableUnabbreviator.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\keyboard\CodeAreaKeyBindings.java...
line 20:16 no viable alternative at input 'case EDITOR_DELETE -> {\n                    codeArea.deleteNextChar();\n                    event.consume();\n                }\n                case'
line 20:16 mismatched input 'case' expecting {'instanceof', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 24:16 mismatched input 'case' expecting {'instanceof', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 28:16 mismatched input 'case' expecting {'instanceof', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 32:16 mismatched input 'case' expecting {'instanceof', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 36:16 mismatched input 'case' expecting {'instanceof', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 40:16 mismatched input 'case' expecting {'instanceof', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 44:16 mismatched input 'case' expecting {'instanceof', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 48:16 mismatched input 'case' expecting {'instanceof', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 52:16 mismatched input 'case' expecting {'instanceof', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 56:16 mismatched input 'case' expecting {'instanceof', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 60:16 mismatched input 'case' expecting {'instanceof', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 68:16 mismatched input 'case' expecting {'instanceof', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 76:16 mismatched input 'case' expecting {'instanceof', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 85:16 mismatched input 'case' expecting {'instanceof', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 91:16 mismatched input 'case' expecting {'instanceof', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 99:16 mismatched input 'case' expecting {'instanceof', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 107:12 missing ';' at '}'
line 108:8 extraneous input '}' expecting ')'
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\keyboard\KeyBinding.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\keyboard\KeyBindingCategory.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\keyboard\KeyBindingRepository.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\keyboard\TextInputKeyBindings.java...
line 23:20 no viable alternative at input 'case EDITOR_DELETE -> {\n                        focusedTextField.deleteNextChar();\n                        event.consume();\n                    }\n                    case'
line 23:20 mismatched input 'case' expecting {'instanceof', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 27:20 mismatched input 'case' expecting {'instanceof', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 31:20 mismatched input 'case' expecting {'instanceof', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 35:20 mismatched input 'case' expecting {'instanceof', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 39:20 mismatched input 'case' expecting {'instanceof', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 43:20 mismatched input 'case' expecting {'instanceof', ')', '[', ',', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 47:20 mismatched input 'case' expecting {'instanceof', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 55:20 mismatched input 'case' expecting {'instanceof', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 63:20 mismatched input 'case' expecting {'instanceof', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 71:20 mismatched input 'case' expecting {'instanceof', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 77:20 mismatched input 'case' expecting {'instanceof', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 85:20 mismatched input 'case' expecting {'instanceof', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 93:20 mismatched input 'case' expecting {'instanceof', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 97:16 missing ';' at '}'
line 98:13 extraneous input ')' expecting {'abstract', 'boolean', 'byte', 'char', 'class', 'double', 'enum', 'final', 'float', 'int', 'interface', 'long', 'native', 'private', 'protected', 'public', 'short', 'static', 'strictfp', 'synchronized', 'transient', 'void', 'volatile', '{', '}', ';', '<', '@', IDENTIFIER}
line 100:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\libraryproperties\AbstractPropertiesTabView.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\libraryproperties\constants\ConstantsItemModel.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\libraryproperties\constants\ConstantsPropertiesView.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\libraryproperties\constants\ConstantsPropertiesViewModel.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\libraryproperties\contentselectors\ContentSelectorView.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\libraryproperties\contentselectors\ContentSelectorViewModel.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\libraryproperties\general\GeneralPropertiesView.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\libraryproperties\general\GeneralPropertiesViewModel.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\libraryproperties\keypattern\KeyPatternPropertiesView.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\libraryproperties\keypattern\KeyPatternPropertiesViewModel.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\libraryproperties\LibraryPropertiesAction.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\libraryproperties\LibraryPropertiesView.java...
line 55:61 extraneous input 'propertiesTab' expecting ')'
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\libraryproperties\LibraryPropertiesViewModel.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\libraryproperties\PropertiesTab.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\libraryproperties\PropertiesTabViewModel.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\libraryproperties\saving\SavingPropertiesView.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\libraryproperties\saving\SavingPropertiesViewModel.java...
line 63:73 no viable alternative at input 'case SPECIFIED -> saveInSpecifiedOrderProperty.setValue(true);'
line 64:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 65:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 69:22 no viable alternative at input 'fieldNames.add('
line 69:48 no viable alternative at input 'InternalField.TYPE_HEADER)'
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\LibraryTab.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\linkedfile\AttachFileAction.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\linkedfile\AttachFileFromURLAction.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\linkedfile\DeleteFileAction.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\linkedfile\LinkedFileEditDialogView.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\linkedfile\LinkedFilesEditDialogViewModel.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\logging\ApplicationInsightsLogEvent.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\logging\ApplicationInsightsWriter.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\logging\GuiWriter.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\MainApplication.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\maintable\BibEntryTableViewModel.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\maintable\CellFactory.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\maintable\ColumnPreferences.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\maintable\columns\FieldColumn.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\maintable\columns\FileColumn.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\maintable\columns\LibraryColumn.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\maintable\columns\LinkedIdentifierColumn.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\maintable\columns\MainTableColumn.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\maintable\columns\SpecialFieldColumn.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\maintable\MainTable.java...
line 423:24 no viable alternative at input 'case TOP,'
line 424:16 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 431:24 no viable alternative at input 'case LINK -> {\n                            LOGGER.debug("Mode LINK"); // shift on win or no modifier\n                            importHandler.getLinker().addFilesToEntry(entry, files);\n                        }\n                        case'
line 431:24 mismatched input 'case' expecting {'instanceof', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 435:24 mismatched input 'case' expecting {'instanceof', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 439:20 missing ';' at '}'
line 440:16 missing ';' at '}'
line 443:20 no viable alternative at input 'success ='
line 446:8 extraneous input 'event' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 447:8 extraneous input 'event' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 448:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 450:12 extraneous input 'void' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 453:8 extraneous input 'if' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 455:12 extraneous input 'importHandler' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 457:12 extraneous input 'success' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 458:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 461:8 extraneous input 'event' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 462:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 464:11 extraneous input 'void' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 466:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 468:11 extraneous input 'MainTableDataModel' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 470:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 472:11 extraneous input 'BibEntry' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 474:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 476:11 extraneous input 'List' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 482:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 484:12 extraneous input 'Optional' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 489:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\maintable\MainTableColumnFactory.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\maintable\MainTableColumnModel.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\maintable\MainTableDataModel.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\maintable\MainTableFieldValueFormatter.java...
line 74:15 extraneous input 'switch' expecting {'boolean', 'byte', 'char', 'double', 'float', 'int', 'long', 'new', 'short', 'super', 'this', 'void', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 74:37 missing ';' at '{'
line 75:12 mismatched input 'default' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 76:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 79:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 82:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 85:0 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\maintable\MainTableHeaderContextMenu.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\maintable\MainTablePreferences.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\maintable\NameDisplayPreferences.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\maintable\OpenExternalFileAction.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\maintable\OpenFolderAction.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\maintable\OpenUrlAction.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\maintable\PersistenceVisualStateTable.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\maintable\RightClickMenu.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\maintable\SearchShortScienceAction.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\maintable\SmartConstrainedResizePolicy.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\menus\ChangeEntryTypeAction.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\menus\ChangeEntryTypeMenu.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\menus\FileHistoryMenu.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\mergeentries\DiffHighlighting.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\mergeentries\DiffHighlightingEllipsingTextFlow.java...
line 127:47 extraneous input 'switch' expecting {'boolean', 'byte', 'char', 'double', 'float', 'int', 'long', 'new', 'short', 'super', 'this', 'void', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 127:76 missing ';' at '{'
line 128:16 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 131:30 mismatched input '.' expecting {'[', '.', '<', IDENTIFIER}
line 133:16 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 134:16 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 135:16 extraneous input 'default' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 138:10 extraneous input 'else' expecting {'abstract', 'boolean', 'byte', 'char', 'class', 'double', 'enum', 'final', 'float', 'int', 'interface', 'long', 'native', 'private', 'protected', 'public', 'short', 'static', 'strictfp', 'synchronized', 'transient', 'void', 'volatile', '{', '}', ';', '<', '@', IDENTIFIER}
line 143:8 extraneous input 'super' expecting {'abstract', 'boolean', 'byte', 'char', 'class', 'double', 'enum', 'final', 'float', 'int', 'interface', 'long', 'native', 'private', 'protected', 'public', 'short', 'static', 'strictfp', 'synchronized', 'transient', 'void', 'volatile', '{', '}', ';', '<', '@', IDENTIFIER}
line 143:24 mismatched input ';' expecting {'throws', '{'}
line 144:20 mismatched input ';' expecting {'throws', '{'}
line 147:12 extraneous input 'String' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 149:8 extraneous input 'if' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 151:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 153:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 155:17 extraneous input 'void' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 157:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 159:11 extraneous input 'String' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 161:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 163:17 extraneous input 'StringProperty' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 165:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 167:11 extraneous input 'String' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 169:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\mergeentries\DiffMode.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\mergeentries\EntriesMergeResult.java...
line 5:7 extraneous input 'record' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\mergeentries\FetchAndMergeEntry.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\mergeentries\MergeEntriesAction.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\mergeentries\MergeEntriesDialog.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\mergeentries\MergeResult.java...
line 5:7 extraneous input 'record' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\mergeentries\MergeTwoEntriesAction.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\mergeentries\MergeWithFetchedEntryAction.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\mergeentries\MultiMergeEntriesView.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\mergeentries\MultiMergeEntriesViewModel.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\mergeentries\newmergedialog\cell\CopyFieldValueCommand.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\mergeentries\newmergedialog\cell\FieldNameCell.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\mergeentries\newmergedialog\cell\FieldValueCell.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\mergeentries\newmergedialog\cell\FieldValueCellViewModel.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\mergeentries\newmergedialog\cell\HeaderCell.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\mergeentries\newmergedialog\cell\MergedFieldCell.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\mergeentries\newmergedialog\cell\OpenExternalLinkAction.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\mergeentries\newmergedialog\cell\sidebuttons\InfoButton.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\mergeentries\newmergedialog\cell\sidebuttons\ToggleMergeUnmergeButton.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\mergeentries\newmergedialog\cell\ThreeWayMergeCell.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\mergeentries\newmergedialog\cell\ThreeWayMergeCellViewModel.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\mergeentries\newmergedialog\diffhighlighter\DiffHighlighter.java...
line 11:16 extraneous input 'sealed' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 11:45 mismatched input 'permits' expecting {'extends', 'implements', '{', '<'}
line 12:20 extraneous input 'StyleClassedTextArea' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 13:20 extraneous input 'StyleClassedTextArea' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 15:14 extraneous input 'DiffMethod' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 17:11 extraneous input 'DiffHighlighter' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 19:8 extraneous input 'Objects' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 21:8 extraneous input 'this' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 22:8 extraneous input 'this' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 23:8 extraneous input 'this' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 24:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 26:13 extraneous input 'void' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 28:14 extraneous input 'List' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 30:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 32:12 extraneous input 'void' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 34:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 36:11 extraneous input 'DiffMethod' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 38:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 40:11 extraneous input 'String' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 42:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 59:14 extraneous input 'String' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 61:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 67:4 extraneous input 'record' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\mergeentries\newmergedialog\diffhighlighter\SplitDiffHighlighter.java...
line 58:16 no viable alternative at input 'case CHANGE -> {\n                    sourceTextview.setStyleClass(affectedSourceTokensPositionInText, affectedSourceTokensPositionInText + joinedSourceTokensLength, "deletion");\n                    targetTextview.setStyleClass(affectedTargetTokensPositionInText, affectedTargetTokensPositionInText + joinedTargetTokensLength, "updated");\n                }\n                case'
line 58:16 mismatched input 'case' expecting {'instanceof', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 60:16 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 66:11 extraneous input 'int' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 69:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 74:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\mergeentries\newmergedialog\diffhighlighter\UnifiedDiffHighlighter.java...
line 56:16 no viable alternative at input 'case CHANGE -> {\n                    int changePosition = delta.getTarget().getPosition();\n                    int deletionPoint = changePosition + deletionCount;\n                    int insertionPoint = deletionPoint + 1;\n                    List<String> deltaSourceWords = delta.getSource().getLines();\n                    List<String> deltaTargetWords = delta.getTarget().getLines();\n\n                    unifiedWords.add(deletionPoint, join(deltaSourceWords));\n\n                    changeList.add(new Change(deletionPoint, 1, ChangeType.CHANGE_DELETION));\n                    changeList.add(new Change(insertionPoint, deltaTargetWords.size(), ChangeType.ADDITION));\n                    deletionCount++;\n                }\n                case'
line 56:16 mismatched input 'case' expecting {'instanceof', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 63:16 mismatched input 'case' expecting {'instanceof', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 67:12 missing ';' at '}'
line 69:28 no viable alternative at input 'targetTextview.clear('
line 69:30 mismatched input ';' expecting {'throws', '{'}
line 72:8 extraneous input 'for' expecting {'abstract', 'boolean', 'byte', 'char', 'class', 'double', 'enum', 'final', 'float', 'int', 'interface', 'long', 'native', 'private', 'protected', 'public', 'short', 'static', 'strictfp', 'synchronized', 'transient', 'void', 'volatile', '{', '}', ';', '<', '@', IDENTIFIER}
line 72:59 no viable alternative at input 'position < unifiedWords.size('
line 72:61 mismatched input ';' expecting {'throws', '{'}
line 72:71 no viable alternative at input 'position++'
line 97:8 extraneous input 'if' expecting {'abstract', 'boolean', 'byte', 'char', 'class', 'double', 'enum', 'final', 'float', 'int', 'interface', 'long', 'native', 'private', 'protected', 'public', 'short', 'static', 'strictfp', 'synchronized', 'transient', 'void', 'volatile', '{', '}', ';', '<', '@', IDENTIFIER}
line 97:39 mismatched input '>=' expecting {'throws', '{'}
line 97:56 mismatched input '.' expecting {'throws', '{'}
line 97:65 extraneous input ')' expecting {'throws', '{'}
line 103:12 extraneous input 'void' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 106:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 110:12 extraneous input 'textArea' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 111:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 113:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 116:12 extraneous input 'Optional' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 118:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\mergeentries\newmergedialog\DiffMethod.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\mergeentries\newmergedialog\FieldRowView.java...
line 56:62 extraneous input 'grid' expecting ')'
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\mergeentries\newmergedialog\FieldRowViewModel.java...
line 104:100 no viable alternative at input 'case LEFT -> EasyBind.subscribe(leftFieldValueProperty(), this::setMergedFieldValue);'
line 105:16 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 107:8 extraneous input '}' expecting ')'
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\mergeentries\newmergedialog\fieldsmerger\CommentMerger.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\mergeentries\newmergedialog\fieldsmerger\FieldMerger.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\mergeentries\newmergedialog\fieldsmerger\FieldMergerFactory.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\mergeentries\newmergedialog\fieldsmerger\FileMerger.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\mergeentries\newmergedialog\fieldsmerger\GroupMerger.java...
line 15:73 token recognition error at: '"\s'
line 15:76 mismatched input '*' expecting {'boolean', 'byte', 'char', 'double', 'float', 'int', 'long', 'new', 'short', 'super', 'this', 'void', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', ')', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 15:78 token recognition error at: '\'
line 15:77 extraneous input ',' expecting {'boolean', 'byte', 'char', 'double', 'float', 'int', 'long', 'new', 'short', 'super', 'this', 'void', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 15:81 token recognition error at: '");\n'
line 18:4 no viable alternative at input '@Override\n    public'
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\mergeentries\newmergedialog\fieldsmerger\KeywordMerger.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\mergeentries\newmergedialog\GroupDiffMode.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\mergeentries\newmergedialog\PersonsNameFieldRowView.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\mergeentries\newmergedialog\ShowDiffConfig.java...
line 5:7 extraneous input 'record' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\mergeentries\newmergedialog\ThreeWayMergeHeaderView.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\mergeentries\newmergedialog\ThreeWayMergeView.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\mergeentries\newmergedialog\ThreeWayMergeViewModel.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\mergeentries\newmergedialog\toolbar\ThreeWayMergeToolbar.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\OpenConsoleAction.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\openoffice\AdvancedCiteDialogView.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\openoffice\AdvancedCiteDialogViewModel.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\openoffice\Bootstrap.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\openoffice\CitationEntryViewModel.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\openoffice\DetectOpenOfficeInstallation.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\openoffice\ManageCitationsDialogView.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\openoffice\ManageCitationsDialogViewModel.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\openoffice\OOBibBase.java...
line 350:20 extraneous input 'switch' expecting {'boolean', 'byte', 'char', 'double', 'float', 'int', 'long', 'new', 'short', 'super', 'this', 'void', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 350:40 missing ';' at '{'
line 351:24 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 351:55 no viable alternative at input 'UnoStyle.PARAGRAPH_STYLES ->'
line 354:24 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 357:24 extraneous input 'default' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 370:20 extraneous input 'switch' expecting {'boolean', 'byte', 'char', 'double', 'float', 'int', 'long', 'new', 'short', 'super', 'this', 'void', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 370:40 missing ';' at '{'
line 371:24 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 371:55 no viable alternative at input 'UnoStyle.PARAGRAPH_STYLES ->'
line 375:24 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 379:24 extraneous input 'default' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\openoffice\OOBibBaseConnect.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\openoffice\OOError.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\openoffice\OpenOfficePanel.java...
line 395:56 extraneous input 'bootstrapEx' expecting ')'
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\openoffice\StyleSelectDialogView.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\openoffice\StyleSelectDialogViewModel.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\openoffice\StyleSelectItemViewModel.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\preferences\AbstractPreferenceTabView.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\preferences\appearance\AppearanceTab.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\preferences\appearance\AppearanceTabViewModel.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\preferences\citationkeypattern\CitationKeyPatternTab.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\preferences\citationkeypattern\CitationKeyPatternTabViewModel.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\preferences\customentrytypes\CustomEntryTypesTab.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\preferences\customentrytypes\CustomEntryTypesTabViewModel.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\preferences\customentrytypes\CustomEntryTypeViewModel.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\preferences\customentrytypes\EntryTypeViewModel.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\preferences\customentrytypes\FieldViewModel.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\preferences\customexporter\CustomExporterTab.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\preferences\customexporter\CustomExporterTabViewModel.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\preferences\customimporter\CustomImporterTab.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\preferences\customimporter\CustomImporterTabViewModel.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\preferences\entry\EntryTab.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\preferences\entry\EntryTabViewModel.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\preferences\entryeditor\EntryEditorTab.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\preferences\entryeditor\EntryEditorTabViewModel.java...
line 71:84 no viable alternative at input 'case ONLY_ABBREVIATED -> firstNameModeAbbreviatedProperty.setValue(true);'
line 72:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 73:12 extraneous input 'default' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 78:11 extraneous input 'void' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 81:8 extraneous input 'entryEditorPreferences' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 82:8 extraneous input 'entryEditorPreferences' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 83:8 extraneous input 'entryEditorPreferences' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 84:8 extraneous input 'entryEditorPreferences' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 85:8 extraneous input 'entryEditorPreferences' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 86:8 extraneous input 'entryEditorPreferences' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 89:8 extraneous input 'autoCompletePreferences' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 91:8 extraneous input 'if' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 93:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 95:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 97:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 101:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 103:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 105:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 110:12 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 112:12 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 116:8 extraneous input 'autoCompletePreferences' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 117:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 120:11 extraneous input 'List' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 122:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 124:11 extraneous input 'BooleanProperty' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 126:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 128:11 extraneous input 'BooleanProperty' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 130:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 132:11 extraneous input 'BooleanProperty' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 134:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 136:11 extraneous input 'BooleanProperty' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 138:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 140:11 extraneous input 'BooleanProperty' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 142:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 144:11 extraneous input 'BooleanProperty' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 146:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 148:11 extraneous input 'BooleanProperty' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 150:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 152:11 extraneous input 'BooleanProperty' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 154:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 156:11 extraneous input 'StringProperty' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 158:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 160:11 extraneous input 'BooleanProperty' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 162:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 164:11 extraneous input 'BooleanProperty' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 166:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 168:11 extraneous input 'BooleanProperty' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 170:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 172:11 extraneous input 'BooleanProperty' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 174:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 176:11 extraneous input 'BooleanProperty' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 178:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 180:11 extraneous input 'BooleanProperty' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 182:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\preferences\entryeditortabs\CustomEditorFieldsTab.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\preferences\entryeditortabs\CustomEditorFieldsTabViewModel.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\preferences\external\ExternalTab.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\preferences\external\ExternalTabViewModel.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\preferences\externalfiletypes\EditExternalFileTypeEntryDialog.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\preferences\externalfiletypes\EditExternalFileTypeViewModel.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\preferences\externalfiletypes\ExternalFileTypeItemViewModel.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\preferences\externalfiletypes\ExternalFileTypesTab.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\preferences\externalfiletypes\ExternalFileTypesTabViewModel.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\preferences\file\FileTab.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\preferences\file\FileTabViewModel.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\preferences\general\GeneralTab.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\preferences\general\GeneralTabViewModel.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\preferences\groups\GroupsTab.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\preferences\groups\GroupsTabViewModel.java...
line 30:12 no viable alternative at input 'case INTERSECTION -> {\n                groupViewModeIntersectionProperty.setValue(true);\n                groupViewModeUnionProperty.setValue(false);\n            }\n            case'
line 30:12 mismatched input 'case' expecting {'instanceof', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 34:8 missing ';' at '}'
line 35:40 no viable alternative at input 'autoAssignGroupProperty.setValue('
line 35:80 no viable alternative at input 'groupsPreferences.shouldAutoAssignGroup('
line 35:82 extraneous input ')' expecting ';'
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\preferences\importexport\ImportExportTab.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\preferences\importexport\ImportExportTabViewModel.java...
line 93:75 no viable alternative at input 'case SPECIFIED -> exportInSpecifiedOrderProperty.setValue(true);'
line 94:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 95:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 97:35 no viable alternative at input 'sortCriteriaProperty.addAll('
line 97:67 no viable alternative at input 'exportSaveOrder.getSortCriteria('
line 99:60 extraneous input ')' expecting ';'
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\preferences\journals\AbbreviationsFileViewModel.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\preferences\journals\AbbreviationViewModel.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\preferences\journals\JournalAbbreviationsTab.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\preferences\journals\JournalAbbreviationsTabViewModel.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\preferences\keybindings\KeyBindingsTab.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\preferences\keybindings\KeyBindingsTabViewModel.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\preferences\keybindings\KeyBindingViewModel.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\preferences\keybindings\presets\BashKeyBindingPreset.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\preferences\keybindings\presets\KeyBindingPreset.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\preferences\keybindings\presets\NewEntryBindingPreset.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\preferences\linkedfiles\LinkedFilesTab.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\preferences\linkedfiles\LinkedFilesTabViewModel.java...
line 86:73 no viable alternative at input 'case START -> autolinkFileStartsBibtexProperty.setValue(true);'
line 87:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 88:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 91:41 no viable alternative at input 'autolinkRegexKeyProperty.setValue('
line 91:82 no viable alternative at input 'autoLinkPreferences.getRegularExpression('
line 91:84 extraneous input ')' expecting ';'
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\preferences\nameformatter\NameFormatterItemModel.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\preferences\nameformatter\NameFormatterTab.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\preferences\nameformatter\NameFormatterTabViewModel.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\preferences\network\CustomCertificateViewModel.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\preferences\network\NetworkTab.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\preferences\network\NetworkTabViewModel.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\preferences\PreferencesDialogView.java...
line 94:60 extraneous input 'preferencesTab' expecting ')'
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\preferences\PreferencesDialogViewModel.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\preferences\PreferencesFilterDialog.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\preferences\PreferencesSearchHandler.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\preferences\PreferencesTab.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\preferences\PreferenceTabViewModel.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\preferences\preview\PreviewTab.java...
line 91:48 no viable alternative at input 'case COPY -> editArea.copy();'
line 92:20 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 93:20 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 94:20 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 102:11 extraneous input 'String' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 104:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 106:11 extraneous input 'void' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 108:8 extraneous input 'lastKeyPressTime' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 110:8 extraneous input 'showAsTabCheckBox' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 112:8 extraneous input 'searchBox' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 113:8 extraneous input 'searchBox' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 115:8 extraneous input 'ActionFactory' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 116:8 extraneous input 'contextMenu' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 122:8 extraneous input 'contextMenu' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 123:8 extraneous input 'contextMenu' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 125:8 extraneous input 'availableListView' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 126:8 extraneous input 'viewModel' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 127:8 extraneous input 'new' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 130:8 extraneous input 'availableListView' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 131:8 extraneous input 'availableListView' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 132:8 extraneous input 'availableListView' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 133:8 extraneous input 'availableListView' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 134:8 extraneous input 'availableListView' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 135:8 extraneous input 'availableListView' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 136:8 extraneous input 'availableListView' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 139:8 extraneous input 'chosenListView' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 140:8 extraneous input 'viewModel' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 141:8 extraneous input 'new' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 145:8 extraneous input 'chosenListView' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 146:8 extraneous input 'chosenListView' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 147:8 extraneous input 'chosenListView' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 148:8 extraneous input 'chosenListView' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 149:8 extraneous input 'chosenListView' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 150:8 extraneous input 'chosenListView' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 151:8 extraneous input 'chosenListView' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 154:8 extraneous input 'toRightButton' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 155:8 extraneous input 'toLeftButton' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 156:8 extraneous input 'sortUpButton' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 157:8 extraneous input 'sortDownButton' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 159:8 extraneous input 'PreviewViewer' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 160:8 extraneous input 'previewViewer' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 161:8 extraneous input 'EasyBind' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 162:8 extraneous input 'previewViewer' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 164:8 extraneous input 'previewTab' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 166:8 extraneous input 'editArea' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 167:8 extraneous input 'editArea' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 168:8 extraneous input 'editArea' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 169:8 extraneous input 'editArea' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 172:8 extraneous input 'BindingsHelper' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 178:20 extraneous input 'viewModel' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 179:16 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 181:8 extraneous input 'editArea' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 184:8 extraneous input 'editArea' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 187:12 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 190:8 extraneous input 'searchBox' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 192:8 extraneous input 'readOnlyLabel' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 193:8 extraneous input 'resetDefaultButton' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 194:8 extraneous input 'contextMenu' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 195:8 extraneous input 'contextMenu' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 196:8 extraneous input 'editArea' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 198:8 extraneous input 'validationVisualizer' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 199:8 extraneous input 'Platform' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 200:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 210:12 extraneous input 'void' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 213:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 217:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 219:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 223:8 extraneous input 'list' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 225:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 227:12 extraneous input 'void' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 229:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 231:12 extraneous input 'void' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 233:8 extraneous input 'if' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 235:12 extraneous input 'viewModel' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 236:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 238:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 240:12 extraneous input 'void' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 242:8 extraneous input 'if' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 244:12 extraneous input 'viewModel' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 245:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 247:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 249:12 extraneous input 'void' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 251:8 extraneous input 'event' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 252:8 extraneous input 'event' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 253:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 255:12 extraneous input 'void' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 257:8 extraneous input 'event' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 258:8 extraneous input 'event' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 259:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 261:11 extraneous input 'void' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 263:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 265:11 extraneous input 'void' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 267:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 269:11 extraneous input 'void' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 271:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 273:11 extraneous input 'void' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 275:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 277:11 extraneous input 'void' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 279:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 281:12 extraneous input 'void' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 284:12 extraneous input 'event' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 285:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 288:12 extraneous input 'void' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 291:12 extraneous input 'event' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 292:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\preferences\preview\PreviewTabViewModel.java...
line 96:84 extraneous input 'layout' expecting ')'
line 154:61 extraneous input 'layout' expecting ')'
line 278:60 extraneous input 'layout' expecting ')'
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\preferences\protectedterms\NewProtectedTermsFileDialog.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\preferences\protectedterms\ProtectedTermsListItemModel.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\preferences\protectedterms\ProtectedTermsTab.java...
line 124:20 extraneous input 'switch' expecting {'boolean', 'byte', 'char', 'double', 'float', 'int', 'long', 'new', 'short', 'super', 'this', 'void', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', ')', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 124:37 mismatched input '{' expecting {'instanceof', ')', '[', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 126:24 extraneous input 'default' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 127:21 extraneous input ')' expecting {'abstract', 'boolean', 'byte', 'char', 'class', 'double', 'enum', 'final', 'float', 'int', 'interface', 'long', 'native', 'private', 'protected', 'public', 'short', 'static', 'strictfp', 'synchronized', 'transient', 'void', 'volatile', '{', '}', ';', '<', '@', IDENTIFIER}
line 133:59 no viable alternative at input 'case EDIT_LIST -> viewModel.edit(itemModel);'
line 134:16 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 135:16 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 136:16 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 139:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\preferences\protectedterms\ProtectedTermsTabViewModel.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\preferences\ShowPreferencesAction.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\preferences\table\TableTab.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\preferences\table\TableTabViewModel.java...
line 151:61 no viable alternative at input 'case NATBIB -> namesNatbibProperty.setValue(true);'
line 152:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 153:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 154:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 157:8 extraneous input 'switch' expecting {'abstract', 'boolean', 'byte', 'char', 'class', 'double', 'enum', 'final', 'float', 'int', 'interface', 'long', 'native', 'private', 'protected', 'public', 'short', 'static', 'strictfp', 'synchronized', 'transient', 'void', 'volatile', '{', '}', ';', '<', '@', IDENTIFIER}
line 157:61 extraneous input ')' expecting {'throws', '{'}
line 158:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 159:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 160:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 164:11 extraneous input 'void' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 166:8 extraneous input 'if' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 168:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 171:12 extraneous input 'void' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 172:40 mismatched input ')' expecting IDENTIFIER
line 176:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 178:12 extraneous input 'void' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 180:8 extraneous input 'availableColumnsProperty' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 181:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 183:12 extraneous input 'void' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 188:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 190:12 extraneous input 'void' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 192:8 extraneous input 'availableColumnsProperty' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 193:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 195:11 extraneous input 'void' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 198:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 202:12 extraneous input 'addColumnProperty' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 203:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 206:11 extraneous input 'void' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 208:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 210:11 extraneous input 'void' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 212:8 extraneous input 'int' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 213:8 extraneous input 'if' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 215:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 218:8 extraneous input 'columnsListProperty' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 219:8 extraneous input 'selectedColumnModelProperty' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 220:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 222:11 extraneous input 'void' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 224:8 extraneous input 'int' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 225:8 extraneous input 'if' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 227:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 230:8 extraneous input 'columnsListProperty' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 231:8 extraneous input 'selectedColumnModelProperty' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 232:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 235:11 extraneous input 'void' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 237:8 extraneous input 'mainTablePreferences' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 238:8 extraneous input 'mainTablePreferences' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 240:8 extraneous input 'specialFieldsPreferences' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 242:8 extraneous input 'if' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 244:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 246:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 248:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 250:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 254:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 256:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 258:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 263:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 266:11 extraneous input 'boolean' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 268:8 extraneous input 'if' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 271:12 extraneous input 'return' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 272:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 274:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 276:11 extraneous input 'ListProperty' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 278:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 280:11 extraneous input 'ObjectProperty' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 282:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 284:11 extraneous input 'ListProperty' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 286:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 288:11 extraneous input 'ObjectProperty' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 290:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 292:11 extraneous input 'BooleanProperty' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 294:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 296:11 extraneous input 'BooleanProperty' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 298:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 300:11 extraneous input 'BooleanProperty' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 302:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 304:11 extraneous input 'BooleanProperty' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 306:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 308:11 extraneous input 'BooleanProperty' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 310:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 312:11 extraneous input 'BooleanProperty' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 314:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 316:11 extraneous input 'BooleanProperty' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 318:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 320:11 extraneous input 'BooleanProperty' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 322:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 324:11 extraneous input 'BooleanProperty' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 326:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 328:11 extraneous input 'BooleanProperty' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 330:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\preferences\xmp\XmpPrivacyTab.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\preferences\xmp\XmpPrivacyTabViewModel.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\preview\CopyCitationAction.java...
line 83:64 extraneous input 'citationStyleLayout' expecting ')'
line 159:61 no viable alternative at input 'case HTML -> content = processHtml(citations);'
line 160:16 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 161:16 extraneous input 'default' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 169:28 no viable alternative at input 'dialogService.notify('
line 169:46 no viable alternative at input 'Localization.lang('
line 169:110 extraneous input ')' expecting ';'
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\preview\PreviewPanel.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\preview\PreviewViewer.java...
line 50:65 token recognition error at: '"\n'
line 51:67 missing ';' at 'function'
line 53:78 missing ')' at 'window'
line 53:112 mismatched input ')' expecting {'instanceof', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 62:69 extraneous input 'else' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 62:85 missing ')' at 'document'
line 62:118 mismatched input ')' expecting {'instanceof', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 69:81 mismatched input ';' expecting {'throws', '{'}
line 70:63 extraneous input '""' expecting {'abstract', 'boolean', 'byte', 'char', 'class', 'double', 'enum', 'final', 'float', 'int', 'interface', 'long', 'native', 'private', 'protected', 'public', 'short', 'static', 'strictfp', 'synchronized', 'transient', 'void', 'volatile', '{', '}', ';', '<', '@', IDENTIFIER}
line 70:65 token recognition error at: '";\n'
line 72:14 token recognition error at: '"\n'
line 74:29 missing '>' at 'charset'
line 74:36 mismatched input '=' expecting {'[', ',', '.', '>', '<'}
line 97:1022 token recognition error at: '\'
line 97:1023 token recognition error at: '\'
line 97:1025 token recognition error at: '\'
line 97:1026 token recognition error at: '\'
line 97:1028 token recognition error at: '\'
line 97:1029 token recognition error at: '\'
line 97:1031 token recognition error at: '\'
line 97:1032 token recognition error at: '\'
line 97:1034 token recognition error at: '\'
line 97:1035 token recognition error at: '\'
line 97:1037 token recognition error at: '\'
line 97:1038 token recognition error at: '\'
line 97:1040 token recognition error at: '\'
line 97:1041 token recognition error at: '\'
line 97:1043 token recognition error at: '\'
line 97:1044 token recognition error at: '\'
line 97:1046 token recognition error at: '\'
line 97:1047 token recognition error at: '\'
line 97:1049 token recognition error at: '\'
line 97:1050 token recognition error at: '\'
line 97:1052 token recognition error at: '\'
line 97:1053 token recognition error at: '\'
line 97:1055 token recognition error at: '\'
line 97:1056 token recognition error at: '\'
line 97:1058 token recognition error at: '\'
line 97:1059 token recognition error at: '\'
line 97:1060 token recognition error at: '\'
line 97:1061 token recognition error at: '\'
line 97:1062 token recognition error at: '\'
line 97:1063 token recognition error at: '\'
line 97:1065 token recognition error at: '\'
line 97:1066 token recognition error at: '\'
line 97:1068 token recognition error at: '\'
line 97:1069 token recognition error at: '\'
line 97:1942 token recognition error at: '\'
line 97:1943 token recognition error at: '\'
line 97:1944 token recognition error at: '\'
line 97:1945 token recognition error at: '\'
line 97:1948 token recognition error at: '\'
line 97:1949 token recognition error at: '\'
line 97:2021 token recognition error at: '\'
line 97:2022 token recognition error at: '\'
line 97:2023 token recognition error at: '\'
line 97:2024 token recognition error at: '\'
line 97:2027 token recognition error at: '\'
line 97:2028 token recognition error at: '\'
line 97:2194 token recognition error at: '\'
line 97:2195 token recognition error at: '\'
line 97:2241 token recognition error at: '\'
line 97:2242 token recognition error at: '\'
line 97:2355 token recognition error at: '\'
line 97:2356 token recognition error at: '\'
line 97:2357 token recognition error at: '\'
line 97:2358 token recognition error at: '\'
line 97:2410 token recognition error at: '\'
line 97:2411 token recognition error at: '\'
line 97:2412 token recognition error at: '\'
line 97:2413 token recognition error at: '\'
line 97:2689 token recognition error at: '\'
line 97:2690 token recognition error at: '\'
line 97:3739 token recognition error at: '\'
line 97:3740 token recognition error at: '\'
line 97:4086 token recognition error at: '#'
line 97:4090 token recognition error at: ''()'
line 97:4107 token recognition error at: '\'
line 97:4108 token recognition error at: '\'
line 97:4109 token recognition error at: '\'
line 97:4110 token recognition error at: '\'
line 97:4114 token recognition error at: '`'
line 97:4203 token recognition error at: '\'
line 97:4204 token recognition error at: '\'
line 97:4205 token recognition error at: '\'
line 97:4206 token recognition error at: '\'
line 97:4241 token recognition error at: '\'
line 97:4242 token recognition error at: '\'
line 97:4243 token recognition error at: '\'
line 97:4244 token recognition error at: '\'
line 97:4260 token recognition error at: '")}}}]),e}(),s=\n'
line 101:1968 token recognition error at: '\'
line 101:1969 token recognition error at: '\'
line 101:5311 token recognition error at: ''Se'
line 101:5352 token recognition error at: ''))'
line 101:5884 token recognition error at: ''Se'
line 101:5925 token recognition error at: ''))'
line 101:6625 token recognition error at: ''Re'
line 101:6657 token recognition error at: ''))'
line 105:29 token recognition error at: '";\n'
line 108:14 token recognition error at: '"\n'
line 111:15 token recognition error at: '";\n'
line 115:14 token recognition error at: '"\n'
line 117:38 token recognition error at: '";\n'
line 266:40 token recognition error at: '"\n'
line 273:18 token recognition error at: '", JS_HIGHLIGHT_FUNCTION, text);\n'
line 76:31 no viable alternative at input '>\n                       <style>\n                           mark{'
line 76:31 mismatched input '{' expecting '('
line 80:24 no viable alternative at input '</'
line 89:34 missing ';' at '{'
line 89:52 missing ';' at 'exports'
line 89:81 no viable alternative at input '!=typeof module'
line 89:81 missing ';' at 'module'
line 89:126 no viable alternative at input '==typeof define'
line 89:126 missing ';' at 'define'
line 89:165 missing ';' at '}'
line 89:166 extraneous input '(' expecting {'abstract', 'boolean', 'byte', 'char', 'class', 'double', 'enum', 'final', 'float', 'int', 'interface', 'long', 'native', 'private', 'protected', 'public', 'short', 'static', 'strictfp', 'synchronized', 'transient', 'void', 'volatile', '{', '}', ';', '<', '@', IDENTIFIER}
line 89:206 missing ';' at '('
line 89:209 missing ';' at '{'
line 89:238 no viable alternative at input '==typeof Symbol'
line 89:238 mismatched input 'Symbol' expecting {'instanceof', ')', '[', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 89:263 no viable alternative at input '==typeof Symbol'
line 89:263 missing ';' at 'Symbol'
line 89:290 mismatched input '{' expecting {'instanceof', ')', '[', ',', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 89:305 missing ';' at 'e'
line 89:307 extraneous input ':' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 89:319 missing ';' at '{'
line 89:349 no viable alternative at input '==typeof Symbol'
line 89:349 missing ';' at 'Symbol'
line 89:372 no viable alternative at input '==='
line 89:372 extraneous input '=' expecting {'boolean', 'byte', 'char', 'double', 'float', 'int', 'long', 'new', 'short', 'super', 'this', 'void', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 89:384 no viable alternative at input '!=='
line 89:384 extraneous input '=' expecting {'boolean', 'byte', 'char', 'double', 'float', 'int', 'long', 'new', 'short', 'super', 'this', 'void', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 89:418 missing ';' at 'e'
line 89:420 extraneous input ')' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 89:424 missing ';' at '}'
line 89:435 missing ';' at '('
line 89:440 missing '->' at '{'
line 89:518 missing ';' at '}'
line 89:519 missing ';' at 'function'
line 89:529 missing ';' at '('
line 89:534 missing '->' at '{'
line 89:603 mismatched input ',' expecting {'instanceof', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 89:621 mismatched input ',' expecting {'instanceof', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 89:629 missing ';' at 'in'
line 89:633 mismatched input '&&' expecting {'instanceof', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 89:650 mismatched input ',' expecting {'instanceof', ')', '[', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 89:683 missing ';' at '}'
line 89:685 extraneous input 'function' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 89:803 extraneous input 't' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 89:822 extraneous input 't' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 89:846 extraneous input 'for' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 93:231 extraneous input 't' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 93:361 extraneous input 'return' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 93:693 extraneous input '-' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 93:852 extraneous input 'try' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 93:878 extraneous input 'if' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 93:1053 extraneous input 'return' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 93:1219 extraneous input 'try' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 93:1320 extraneous input 'e' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 93:1668 extraneous input 'this' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 93:1983 extraneous input 'a' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 93:2015 extraneous input 'var' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 93:2046 extraneous input 's' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 93:2487 extraneous input 'if' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 93:2636 extraneous input 'return' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 93:2774 extraneous input 'return' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 93:3039 extraneous input 'e' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 93:3276 extraneous input 's' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 93:3330 extraneous input ')' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 93:3514 extraneous input 'h' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 93:3749 extraneous input 'a' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 93:3851 extraneous input 'r' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 93:4078 extraneous input 'if' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 93:4093 extraneous input 'return' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 97:1265 extraneous input 'for' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 97:1342 extraneous input 'a' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 97:2176 extraneous input 'return' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 97:2399 extraneous input 'return' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 97:2530 extraneous input 'return' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 97:3458 extraneous input 'return' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 97:3567 extraneous input 'e' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 97:3911 extraneous input 'switch' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 97:4025 extraneous input 'case' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 97:4101 extraneous input '<=' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 101:77 extraneous input 'var' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 101:110 extraneous input '(' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 101:297 extraneous input 'this' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 101:447 extraneous input 'return' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 101:810 extraneous input 'if' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 101:981 extraneous input 'var' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 101:994 extraneous input 'return' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 101:1125 extraneous input 'o' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 101:1246 extraneous input 'return' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 101:1711 extraneous input 'return' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 101:2155 extraneous input 'this' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 101:2702 extraneous input 'return' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 101:2942 extraneous input 'e' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 101:2989 extraneous input 'if' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 101:3038 extraneous input 'var' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 101:3138 extraneous input 'if' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 101:3360 extraneous input 't' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 101:3562 extraneous input 'a' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 101:3566 extraneous input 'a' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 101:3605 extraneous input 't' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 101:3748 extraneous input 'this' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 101:3812 extraneous input 'for' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 101:3825 extraneous input 'null' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 101:3869 extraneous input ')' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 101:3925 extraneous input 'else' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 101:3953 extraneous input 'var' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 101:3967 extraneous input 'if' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 101:3988 extraneous input 'c' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 101:3992 extraneous input 'c' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 101:4011 extraneous input 't' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 101:4154 extraneous input 'this' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 101:4194 extraneous input 'null' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 101:4232 extraneous input ')' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 101:4248 extraneous input 'if' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 101:4269 extraneous input 'u' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 101:4273 extraneous input 'u' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 101:4292 extraneous input 'var' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 101:4312 extraneous input 'i' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 101:4480 extraneous input 'this' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 101:4531 extraneous input 'e' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 101:4616 extraneous input 's' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 101:4840 extraneous input 'e' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 101:4853 extraneous input ')' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 101:4897 extraneous input 't' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 101:5039 extraneous input 'e' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 101:5081 extraneous input ')' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 101:5159 extraneous input 'else' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 101:5201 extraneous input 'this' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 101:5291 extraneous input 'this' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 101:5356 extraneous input 'var' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 101:5380 extraneous input 'this' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 101:5638 extraneous input 'this' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 101:5649 extraneous input 'var' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 101:5751 extraneous input 'this' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 101:5878 extraneous input 'n' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 101:6158 extraneous input 'this' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 101:6169 extraneous input 'var' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 101:6199 extraneous input 'o' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 101:6486 extraneous input 'this' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 101:6497 extraneous input 'var' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 101:6541 extraneous input 'n' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 101:6798 extraneous input 'return' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 101:7314 extraneous input 'return' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 101:7355 extraneous input 'return' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 103:23 extraneous input '<' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 107:25 extraneous input 'String' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 110:44 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 114:25 extraneous input 'String' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 117:12 extraneous input 'markInstance' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 117:36 extraneous input '""' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 118:25 extraneous input 'Pattern' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 120:18 extraneous input 'ClipBoardManager' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 121:18 extraneous input 'DialogService' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 123:18 extraneous input 'TaskExecutor' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 124:18 extraneous input 'WebView' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 125:12 extraneous input 'PreviewLayout' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 130:12 extraneous input 'Optional' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 131:12 extraneous input 'Optional' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 133:18 extraneous input 'BibDatabaseContext' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 134:12 extraneous input 'boolean' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 136:18 extraneous input 'ChangeListener' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 138:8 extraneous input 'highlightSearchPattern' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 139:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 144:11 extraneous input 'PreviewViewer' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 149:8 extraneous input 'this' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 150:8 extraneous input 'this' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 152:8 extraneous input 'setFitToHeight' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 153:8 extraneous input 'setFitToWidth' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 154:8 extraneous input 'previewView' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 155:8 extraneous input 'setContent' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 156:8 extraneous input 'previewView' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 158:8 extraneous input 'previewView' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 162:12 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 165:16 extraneous input 'registered' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 166:12 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 170:12 extraneous input 'NodeList' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 171:12 extraneous input 'for' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 171:28 extraneous input 'i' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 171:56 extraneous input 'i' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 173:16 extraneous input 'EventTarget' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 174:16 extraneous input 'eventTarget' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 176:20 extraneous input 'HTMLAnchorElement' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 177:20 extraneous input 'String' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 178:20 extraneous input 'if' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 181:24 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 183:24 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 185:24 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 188:16 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 189:12 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 192:8 extraneous input 'themeManager' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 193:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 195:12 extraneous input 'void' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 197:8 extraneous input 'if' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 199:12 extraneous input 'callbackForUnmark' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 200:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 202:8 extraneous input 'previewView' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 203:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 211:19 extraneous input 'String' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 215:8 extraneous input 'pattern' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 216:8 extraneous input 'return' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 217:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 219:11 extraneous input 'void' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 223:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 225:8 extraneous input 'update' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 226:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 228:11 extraneous input 'void' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 233:12 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 236:8 extraneous input 'entry' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 239:8 extraneous input 'for' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 241:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 243:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 245:12 extraneous input 'void' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 249:12 extraneous input 'return' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 250:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 254:8 extraneous input 'BackgroundTask' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 260:20 extraneous input 'setPreviewText' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 261:16 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 263:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 265:12 extraneous input 'void' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 275:8 extraneous input 'previewView' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 277:8 extraneous input 'this' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 278:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 280:11 extraneous input 'void' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 282:8 extraneous input 'boolean' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 283:8 extraneous input 'if' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 285:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 290:20 extraneous input 'previewView' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 291:20 extraneous input 'job' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 292:16 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 295:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 297:11 extraneous input 'void' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 300:8 extraneous input 'ClipboardContent' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 301:8 extraneous input 'content' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 302:8 extraneous input 'content' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 304:8 extraneous input 'clipBoardManager' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 305:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 307:11 extraneous input 'void' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 309:8 extraneous input 'content' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 310:8 extraneous input 'content' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 312:8 extraneous input 'clipBoardManager' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 313:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 316:11 extraneous input 'void' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 318:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 320:11 extraneous input 'String' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 322:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 324:11 extraneous input 'String' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 326:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\push\AbstractPushToApplication.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\push\PushToApplication.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\push\PushToApplicationCommand.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\push\PushToApplications.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\push\PushToApplicationSettings.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\push\PushToEmacs.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\push\PushToEmacsSettings.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\push\PushToLyx.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\push\PushToLyxSettings.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\push\PushToTexmaker.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\push\PushToTeXstudio.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\push\PushToVim.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\push\PushToVimSettings.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\push\PushToWinEdt.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\remote\CLIMessageHandler.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\search\GlobalSearchBar.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\search\GlobalSearchResultDialog.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\search\GlobalSearchResultDialogViewModel.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\search\RebuildFulltextSearchIndexAction.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\search\rules\describer\ContainsAndRegexBasedSearchRuleDescriber.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\search\rules\describer\GrammarBasedSearchRuleDescriber.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\search\rules\describer\SearchDescriber.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\search\rules\describer\SearchDescribers.java...
line 20:68 extraneous input 'grammarBasedSearchRule' expecting ')'
line 22:76 extraneous input 'containBasedSearchRule' expecting ')'
line 24:73 extraneous input 'regexBasedSearchRule' expecting ')'
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\search\SearchDisplayMode.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\search\SearchFieldRightClickMenu.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\search\SearchResultsTable.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\search\SearchResultsTableDataModel.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\search\SearchTextField.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\SendAsEMailAction.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\shared\ConnectToSharedDatabaseCommand.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\shared\PullChangesFromSharedAction.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\shared\SharedDatabaseLoginDialogView.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\shared\SharedDatabaseLoginDialogViewModel.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\shared\SharedDatabaseUIManager.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\sidepane\GroupsSidePaneComponent.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\sidepane\SidePane.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\sidepane\SidePaneComponent.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\sidepane\SidePaneContentFactory.java...
line 35:15 extraneous input 'switch' expecting {'boolean', 'byte', 'char', 'double', 'float', 'int', 'long', 'new', 'short', 'super', 'this', 'void', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 35:37 missing ';' at '{'
line 36:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 41:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 49:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\sidepane\SidePaneType.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\sidepane\SidePaneViewModel.java...
line 67:32 extraneous input 'switch' expecting {'boolean', 'byte', 'char', 'double', 'float', 'int', 'long', 'new', 'short', 'super', 'this', 'void', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 67:46 missing ';' at '{'
line 68:16 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 75:16 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\sidepane\TogglePaneAction.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\slr\EditExistingStudyAction.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\slr\ExistingStudySearchAction.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\slr\ManageStudyDefinitionView.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\slr\ManageStudyDefinitionViewModel.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\slr\SlrStudyAndDirectory.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\slr\StartNewStudyAction.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\slr\StudyDatabaseItem.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\specialfields\SpecialFieldAction.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\specialfields\SpecialFieldMenuItemFactory.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\specialfields\SpecialFieldsPreferences.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\specialfields\SpecialFieldValueViewModel.java...
line 34:15 extraneous input 'switch' expecting {'boolean', 'byte', 'char', 'double', 'float', 'int', 'long', 'new', 'short', 'super', 'this', 'void', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 34:30 missing ';' at '{'
line 35:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 36:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 37:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 38:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 39:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 40:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 41:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 42:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 43:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 44:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 45:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 46:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 47:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 48:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 49:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 50:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 55:15 extraneous input 'switch' expecting {'boolean', 'byte', 'char', 'double', 'float', 'int', 'long', 'new', 'short', 'super', 'this', 'void', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 55:30 missing ';' at '{'
line 56:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 57:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 58:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 59:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 60:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 61:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 62:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 63:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 64:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 65:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 66:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 67:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 68:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 69:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 70:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 71:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\specialfields\SpecialFieldViewModel.java...
line 66:15 extraneous input 'switch' expecting {'boolean', 'byte', 'char', 'double', 'float', 'int', 'long', 'new', 'short', 'super', 'this', 'void', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 66:30 missing ';' at '{'
line 67:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 68:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 69:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 70:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 71:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 72:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\StateManager.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\texparser\CitationsDisplay.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\texparser\ParseLatexAction.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\texparser\ParseLatexDialogView.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\texparser\ParseLatexDialogViewModel.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\texparser\ParseLatexResultView.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\texparser\ParseLatexResultViewModel.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\texparser\ReferenceViewModel.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\theme\StyleSheet.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\theme\StyleSheetDataUrl.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\theme\StyleSheetFile.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\theme\StyleSheetResource.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\theme\Theme.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\theme\ThemeManager.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\undo\AbstractUndoableJabRefEdit.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\undo\CountingUndoManager.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\undo\NamedCompound.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\undo\UndoableChangeType.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\undo\UndoableFieldChange.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\undo\UndoableInsertEntries.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\undo\UndoableInsertString.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\undo\UndoableKeyChange.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\undo\UndoablePreambleChange.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\undo\UndoableRemoveEntries.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\undo\UndoableRemoveString.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\undo\UndoableStringChange.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\undo\UndoRedoAction.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\UpdateTimestampListener.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\util\BackgroundTask.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\util\BaseDialog.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\util\BindingsHelper.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\util\ColorUtil.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\util\comparator\NumericFieldComparator.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\util\comparator\RankingFieldComparator.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\util\comparator\SpecialFieldComparator.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\util\component\DiffHighlightingTextPane.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\util\component\Tag.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\util\component\TagBar.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\util\component\TemporalAccessorPicker.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\util\ControlHelper.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\util\CurrentThreadTaskExecutor.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\util\CustomLocalDragboard.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\util\CustomRatingSkin.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\util\CustomTitledPaneSkin.java...
line 125:22 no viable alternative at input '.createDoubleBinding(\n                () -> switch'
line 125:22 extraneous input 'switch' expecting {'boolean', 'byte', 'char', 'double', 'float', 'int', 'long', 'new', 'short', 'super', 'this', 'void', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 125:61 mismatched input '{' expecting {'instanceof', ')', '[', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 126:20 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 126:35 no viable alternative at input 'TOP_CENTER,'
line 127:20 extraneous input 'default' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 128:17 extraneous input ',' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 128:53 mismatched input ',' expecting {'instanceof', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 128:82 extraneous input ')' expecting ';'
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\util\DefaultFileUpdateMonitor.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\util\DefaultTaskExecutor.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\util\DialogWindowState.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\util\DirectoryDialogConfiguration.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\util\DroppingMouseLocation.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\util\FieldsUtil.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\util\FileDialogConfiguration.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\util\FileFilterConverter.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\util\FileNodeViewModel.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\util\IconValidationDecorator.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\util\JabRefResourceLocator.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\util\NoSelectionModel.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\util\OnlyIntegerFormatter.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\util\OpenHyperlinksInExternalBrowser.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\util\OptionalObjectProperty.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\util\OptionalValueTableCellFactory.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\util\RadioButtonCell.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\util\RecursiveTreeItem.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\util\StreamGobbler.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\util\TaskExecutor.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\util\TextFlowLimited.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\util\TooltipTextUtil.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\util\uithreadaware\UiThreadBinding.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\util\uithreadaware\UiThreadChangeListener.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\util\uithreadaware\UiThreadHelper.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\util\uithreadaware\UiThreadInvalidationListener.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\util\uithreadaware\UiThreadListChangeListener.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\util\uithreadaware\UiThreadObservableList.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\util\uithreadaware\UiThreadStringProperty.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\util\UiThreadList.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\util\ValueTableCellFactory.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\util\ViewModelListCellFactory.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\util\ViewModelTableRowFactory.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\util\ViewModelTextFieldTableCellVisualizationFactory.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\util\ViewModelTreeCellFactory.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\util\ViewModelTreeTableCellFactory.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\util\ViewModelTreeTableRowFactory.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\util\ZipFileChooser.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\gui\WaitForSaveFinishedDialog.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\autosaveandbackup\AutosaveManager.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\autosaveandbackup\BackupManager.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\auxparser\AuxParser.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\auxparser\AuxParserResult.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\auxparser\DefaultAuxParser.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\bibtex\BibEntryWriter.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\bibtex\comparator\BibDatabaseDiff.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\bibtex\comparator\BibEntryDiff.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\bibtex\comparator\BibStringDiff.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\bibtex\comparator\BibtexStringComparator.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\bibtex\comparator\CrossRefEntryComparator.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\bibtex\comparator\EntryComparator.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\bibtex\comparator\FieldComparator.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\bibtex\comparator\FieldComparatorStack.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\bibtex\comparator\GroupDiff.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\bibtex\comparator\IdComparator.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\bibtex\comparator\MetaDataDiff.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\bibtex\comparator\PreambleDiff.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\bibtex\FieldContentFormatter.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\bibtex\FieldPreferences.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\bibtex\FieldWriter.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\bibtex\FileFieldWriter.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\bibtex\InvalidFieldValueException.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\bst\BstEntry.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\bst\BstFunctions.java...
line 247:56 extraneous input 'identifier' expecting ')'
line 252:37 extraneous input 'value' expecting ')'
line 261:45 extraneous input 'value' expecting ')'
line 287:35 extraneous input 's' expecting ')'
line 358:36 extraneous input 'format' expecting ')'
line 363:35 extraneous input 'toChange' expecting ')'
line 381:36 extraneous input 's' expecting ')'
line 438:35 extraneous input 's' expecting ')'
line 516:35 extraneous input 'tree' expecting ')'
line 518:56 extraneous input 'identifier' expecting ')'
line 536:36 extraneous input 'i' expecting ')'
line 607:35 extraneous input 's' expecting ')'
line 695:37 extraneous input 'len' expecting ')'
line 695:68 extraneous input 'start' expecting ')'
line 695:100 extraneous input 's' expecting ')'
line 757:35 extraneous input 's' expecting ')'
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\bst\BstPreviewLayout.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\bst\BstVM.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\bst\BstVMContext.java...
line 12:7 extraneous input 'record' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 19:11 extraneous input 'BstVMContext' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 21:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\bst\BstVMException.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\bst\BstVMVisitor.java...
line 238:54 extraneous input 'token' expecting ')'
line 240:46 no viable alternative at input 'case BstParser.STRING ->'
line 244:24 mismatched input 'case' expecting {'instanceof', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 246:24 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 249:18 mismatched input 'else' expecting {'catch', 'finally'}
line 254:14 extraneous input 'catch' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 254:39 missing '->' at '{'
line 260:8 missing ';' at '}'
line 261:8 extraneous input 'return' expecting {'abstract', 'boolean', 'byte', 'char', 'class', 'double', 'enum', 'final', 'float', 'int', 'interface', 'long', 'native', 'private', 'protected', 'public', 'short', 'static', 'strictfp', 'synchronized', 'transient', 'void', 'volatile', '{', '}', ';', '<', '@', IDENTIFIER}
line 263:0 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\bst\util\BstCaseChanger.java...
line 216:29 no viable alternative at input 'case TITLE_LOWERS,'
line 220:12 mismatched input 'case' expecting {'instanceof', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 224:12 mismatched input 'default' expecting {'instanceof', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 227:8 extraneous input 'return' expecting {'abstract', 'boolean', 'byte', 'char', 'class', 'double', 'enum', 'final', 'float', 'int', 'interface', 'long', 'native', 'private', 'protected', 'public', 'short', 'static', 'strictfp', 'synchronized', 'transient', 'void', 'volatile', '{', '}', ';', '<', '@', IDENTIFIER}
line 230:12 extraneous input 'int' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 232:8 extraneous input 'switch' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 236:16 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 238:16 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 241:16 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 243:16 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 247:12 extraneous input 'case' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 249:12 extraneous input 'default' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 251:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 253:8 extraneous input 'return' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 254:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 267:18 extraneous input 'Optional' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 271:12 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 274:12 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 277:12 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 280:12 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 283:12 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 286:12 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 289:12 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 293:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 295:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\bst\util\BstNameFormatter.java...
line 104:42 no viable alternative at input 'Optional<String> tokenS = switch'
line 104:40 mismatched input '=' expecting '('
line 104:42 extraneous input 'switch' expecting {'boolean', 'byte', 'char', 'double', 'float', 'int', 'long', 'new', 'short', 'super', 'this', 'void', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 104:56 missing ';' at '{'
line 105:20 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 105:29 mismatched input '->' expecting {'instanceof', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 107:20 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 107:29 mismatched input '->' expecting {'instanceof', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 109:20 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 109:29 mismatched input '->' expecting {'instanceof', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 111:20 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 111:29 mismatched input '->' expecting {'instanceof', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 113:20 extraneous input 'default' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\bst\util\BstPurifier.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\bst\util\BstTextPrefixer.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\bst\util\BstWidthCalculator.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\citationkeypattern\AbstractCitationKeyPattern.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\citationkeypattern\BracketedPattern.java...
line 237:26 no viable alternative at input 'case "\"" ->'
line 237:26 mismatched input '->' expecting {'instanceof', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 238:16 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 238:25 mismatched input '->' expecting {'instanceof', ')', '[', ',', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 242:16 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 242:26 mismatched input '->' expecting {'instanceof', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 249:16 extraneous input 'default' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 253:8 extraneous input 'return' expecting {'abstract', 'boolean', 'byte', 'char', 'class', 'double', 'enum', 'final', 'float', 'int', 'interface', 'long', 'native', 'private', 'protected', 'public', 'short', 'static', 'strictfp', 'synchronized', 'transient', 'void', 'volatile', '{', '}', ';', '<', '@', IDENTIFIER}
line 253:41 mismatched input ';' expecting {'throws', '{'}
line 266:19 extraneous input 'String' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 266:82 extraneous input 'String' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 268:8 extraneous input 'boolean' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 269:8 extraneous input 'int' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 271:8 extraneous input 'while' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 274:12 extraneous input 'switch' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 276:16 extraneous input 'case' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 279:20 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 281:24 extraneous input 'bracketContent' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 282:20 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 286:20 extraneous input 'bracketContent' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 287:16 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 289:12 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 294:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 296:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 298:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 308:19 extraneous input 'void' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 310:8 extraneous input 'String' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 311:8 extraneous input 'while' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 313:12 extraneous input 'stringBuilder' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 314:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 326:18 extraneous input 'String' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 332:16 extraneous input 'if' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 338:16 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 341:16 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 347:16 extraneous input 'switch' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 350:20 extraneous input 'case' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 352:20 extraneous input 'case' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 354:20 extraneous input 'case' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 356:20 extraneous input 'case' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 358:20 extraneous input 'case' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 360:20 extraneous input 'case' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 362:20 extraneous input 'case' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 364:20 extraneous input 'case' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 366:20 extraneous input 'case' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 368:20 extraneous input 'case' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 370:20 extraneous input 'case' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 372:16 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 376:20 extraneous input 'return' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 377:16 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 379:20 extraneous input 'return' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 381:16 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 384:20 extraneous input 'return' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 385:16 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 387:16 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 391:16 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 396:16 extraneous input 'AuthorList' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 398:16 extraneous input 'switch' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 401:20 extraneous input 'case' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 403:20 extraneous input 'case' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 405:20 extraneous input 'case' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 407:20 extraneous input 'case' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 409:20 extraneous input 'case' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 411:20 extraneous input 'case' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 413:20 extraneous input 'case' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 415:16 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 419:20 extraneous input 'return' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 420:16 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 422:20 extraneous input 'return' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 425:16 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 427:20 extraneous input 'int' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 428:20 extraneous input 'if' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 430:20 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 432:16 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 436:16 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 439:12 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 441:12 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 443:12 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 445:12 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 447:12 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 450:12 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 454:12 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 457:12 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 459:12 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 461:16 extraneous input 'if' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 464:16 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 466:16 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 468:16 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 470:16 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 473:12 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 476:16 extraneous input 'KeywordList' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 477:16 extraneous input 'if' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 480:16 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 483:16 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 487:16 extraneous input 'if' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 489:16 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 491:16 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 493:16 extraneous input 'StringBuilder' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 494:16 extraneous input 'int' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 495:16 extraneous input 'for' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 499:20 extraneous input 'i' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 500:20 extraneous input 'if' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 502:20 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 505:12 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 508:12 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 511:12 extraneous input 'return' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 512:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 522:19 extraneous input 'AuthorList' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 531:29 extraneous input 'return' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 537:25 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 539:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 547:19 extraneous input 'boolean' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 551:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 562:11 extraneous input 'String' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 562:39 extraneous input 'String' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 562:59 extraneous input 'List' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 562:85 extraneous input 'int' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 564:8 extraneous input 'for' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 564:29 extraneous input 'j' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 564:47 extraneous input 'j' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 567:12 extraneous input 'if' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 570:16 extraneous input 'String' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 572:16 extraneous input 'for' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 575:20 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 578:12 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 580:16 extraneous input 'if' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 582:16 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 586:20 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 589:16 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 594:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 599:18 extraneous input 'String' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 601:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 606:19 extraneous input 'String' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 608:8 extraneous input 'StringBuilder' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 609:8 extraneous input 'StringBuilder' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 610:8 extraneous input 'int' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 612:8 extraneous input 'while' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 615:12 extraneous input 'while' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 618:16 extraneous input 'piv' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 619:12 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 622:12 extraneous input 'String' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 623:12 extraneous input 'if' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 625:12 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 630:12 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 632:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 635:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 640:18 extraneous input 'String' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 642:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 644:19 extraneous input 'String' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 646:8 extraneous input 'String' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 648:8 extraneous input 'try' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 653:16 extraneous input 'word' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 655:16 extraneous input 'if' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 657:16 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 659:12 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 663:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 668:18 extraneous input 'String' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 670:8 extraneous input 'String' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 672:8 extraneous input 'try' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 677:16 extraneous input 'boolean' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 680:16 extraneous input 'if' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 682:16 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 684:16 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 687:12 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 691:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 693:18 extraneous input 'String' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 696:8 extraneous input 'try' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 701:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 704:19 extraneous input 'String' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 707:8 extraneous input 'try' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 711:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 714:19 extraneous input 'String' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 719:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 728:19 extraneous input 'String' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 733:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 742:19 extraneous input 'String' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 748:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 757:19 extraneous input 'String' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 760:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 768:19 extraneous input 'String' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 771:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 773:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 782:19 extraneous input 'String' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 785:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 788:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 800:11 extraneous input 'String' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 802:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 810:11 extraneous input 'String' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 812:8 extraneous input 'int' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 813:14 extraneous input 'boolean' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 814:8 extraneous input 'if' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 816:12 extraneous input 'maxAuthorsExceeded' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 817:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 819:12 extraneous input 'maxAuthorsExceeded' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 820:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 826:12 extraneous input 'for' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 826:28 extraneous input 'j' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 826:58 extraneous input 'j' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 828:12 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 832:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 834:12 extraneous input 'if' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 836:12 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 841:12 extraneous input 'for' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 845:16 extraneous input 'for' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 848:16 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 852:12 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 855:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 868:19 extraneous input 'String' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 868:111 extraneous input 'String' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 869:14 extraneous input 'String' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 870:8 extraneous input 'return' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 875:33 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 877:33 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 880:29 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 885:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 894:19 extraneous input 'String' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 896:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 905:11 extraneous input 'String' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 908:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 912:8 extraneous input 'authorSB' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 913:8 extraneous input 'for' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 913:24 extraneous input 'i' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 913:62 extraneous input 'i' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 915:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 917:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 919:11 extraneous input 'String' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 921:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 926:11 extraneous input 'String' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 929:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 935:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 937:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 944:19 extraneous input 'String' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 948:8 extraneous input 'if' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 950:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 953:8 extraneous input 'if' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 955:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 958:8 extraneous input 'return' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 959:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 964:19 extraneous input 'String' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 966:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 971:11 extraneous input 'String' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 973:14 extraneous input 'int' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 975:8 extraneous input 'if' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 977:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 978:28 extraneous input '(' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 978:62 extraneous input 'i' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 980:12 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 983:12 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 987:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 996:11 extraneous input 'String' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 999:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1001:14 extraneous input 'int' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 1002:14 extraneous input 'boolean' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 1003:8 extraneous input 'if' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1004:18 extraneous input 'int' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 1007:12 extraneous input 'AuthorList' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1012:12 extraneous input 'return' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1013:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1017:8 extraneous input 'int' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1018:8 extraneous input 'for' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1018:24 extraneous input 'i' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1018:45 extraneous input 'i' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1021:12 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1023:12 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1028:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1030:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1040:18 extraneous input 'String' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 1050:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1059:18 extraneous input 'String' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 1062:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1064:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1074:18 extraneous input 'String' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 1081:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1090:21 extraneous input 'List' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 1092:8 extraneous input 'StringBuilder' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1093:8 extraneous input 'boolean' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1094:8 extraneous input 'int' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1095:8 extraneous input 'for' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1095:24 extraneous input 'i' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1095:42 extraneous input 'i' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1097:12 extraneous input 'if' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1099:16 extraneous input 'current' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1100:12 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1102:16 extraneous input 'current' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1103:12 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1105:16 extraneous input 'current' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1106:12 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1109:20 extraneous input 'current' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1110:16 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1112:16 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1115:16 extraneous input 'escaped' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1116:12 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1118:12 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1121:8 extraneous input 'return' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1122:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1188:19 extraneous input 'String' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 1191:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1194:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1197:8 extraneous input 'if' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1199:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1202:8 extraneous input 'if' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1204:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1208:8 extraneous input 'result' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1210:8 extraneous input 'String' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1213:8 extraneous input 'String' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1214:8 extraneous input 'String' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1215:8 extraneous input 'String' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1216:8 extraneous input 'String' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1218:8 extraneous input 'for' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1218:28 extraneous input 'index' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1218:66 extraneous input 'index' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1220:12 extraneous input 'EnumSet' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1222:12 extraneous input 'if' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1225:16 extraneous input 'universitySB' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1226:16 extraneous input 'for' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1229:20 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1234:16 extraneous input 'if' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1236:16 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1243:16 extraneous input 'StringBuilder' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1244:16 extraneous input 'for' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1248:24 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1252:24 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1257:16 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1260:16 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1265:26 extraneous input 'int' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 1269:20 extraneous input 'rest' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1270:16 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1272:16 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1281:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1289:19 extraneous input 'boolean' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 1294:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1296:19 extraneous input 'List' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 1298:8 extraneous input 'List' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1301:8 extraneous input 'for' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1308:12 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1311:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\citationkeypattern\CitationKeyGenerator.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\citationkeypattern\CitationKeyPatternPreferences.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\citationkeypattern\DatabaseCitationKeyPattern.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\citationkeypattern\GlobalCitationKeyPattern.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\citationstyle\CitationStyle.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\citationstyle\CitationStyleCache.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\citationstyle\CitationStyleGenerator.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\citationstyle\CitationStyleOutputFormat.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\citationstyle\CitationStylePreviewLayout.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\citationstyle\CSLAdapter.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\citationstyle\JabRefItemDataProvider.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\citationstyle\JabRefLocaleProvider.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\cleanup\CleanupJob.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\cleanup\CleanupWorker.java...
line 55:15 extraneous input 'switch' expecting {'boolean', 'byte', 'char', 'double', 'float', 'int', 'long', 'new', 'short', 'super', 'this', 'void', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 55:31 missing ';' at '{'
line 56:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 58:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 60:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 62:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 64:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 66:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 68:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 70:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 72:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 74:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 76:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 78:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 80:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 82:12 extraneous input 'default' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\cleanup\ConvertToBiblatexCleanup.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\cleanup\ConvertToBibtexCleanup.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\cleanup\DoiCleanup.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\cleanup\EprintCleanup.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\cleanup\FieldFormatterCleanup.java...
line 112:49 extraneous input 'that' expecting ')'
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\cleanup\FieldFormatterCleanups.java...
line 220:50 extraneous input 'other' expecting ')'
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\cleanup\FileLinksCleanup.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\cleanup\Formatter.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\cleanup\ISSNCleanup.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\cleanup\MoveFieldCleanup.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\cleanup\MoveFilesCleanup.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\cleanup\RelativePathsCleanup.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\cleanup\RenamePdfCleanup.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\cleanup\TimeStampToCreationDate.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\cleanup\TimeStampToModificationDate.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\cleanup\UpgradePdfPsToFileCleanup.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\crawler\Crawler.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\crawler\StudyDatabaseToFetcherConverter.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\crawler\StudyFetcher.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\crawler\StudyRepository.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\crawler\StudyYamlParser.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\database\DatabaseMerger.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\database\DuplicateCheck.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\exporter\AtomicFileOutputStream.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\exporter\AtomicFileWriter.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\exporter\BibDatabaseWriter.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\exporter\BibtexDatabaseWriter.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\exporter\BibWriter.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\exporter\BlankLineBehaviour.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\exporter\EmbeddedBibFilePdfExporter.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\exporter\Exporter.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\exporter\ExporterFactory.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\exporter\GroupSerializer.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\exporter\MetaDataSerializer.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\exporter\ModsExporter.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\exporter\MSBibExporter.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\exporter\OOCalcDatabase.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\exporter\OpenDocumentRepresentation.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\exporter\OpenDocumentSpreadsheetCreator.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\exporter\OpenOfficeDocumentCreator.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\exporter\SaveConfiguration.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\exporter\SaveException.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\exporter\TemplateExporter.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\exporter\XmpExporter.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\exporter\XmpPdfExporter.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\externalfiles\ExternalFilesContentImporter.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\externalfiles\LinkedFileHandler.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\formatter\bibtexfields\AddBracesFormatter.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\formatter\bibtexfields\CleanupUrlFormatter.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\formatter\bibtexfields\ClearFormatter.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\formatter\bibtexfields\EscapeAmpersandsFormatter.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\formatter\bibtexfields\EscapeDollarSignFormatter.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\formatter\bibtexfields\EscapeUnderscoresFormatter.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\formatter\bibtexfields\HtmlToLatexFormatter.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\formatter\bibtexfields\HtmlToUnicodeFormatter.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\formatter\bibtexfields\LatexCleanupFormatter.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\formatter\bibtexfields\NormalizeDateFormatter.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\formatter\bibtexfields\NormalizeEnDashesFormatter.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\formatter\bibtexfields\NormalizeMonthFormatter.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\formatter\bibtexfields\NormalizeNamesFormatter.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\formatter\bibtexfields\NormalizePagesFormatter.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\formatter\bibtexfields\OrdinalsToSuperscriptFormatter.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\formatter\bibtexfields\RegexFormatter.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\formatter\bibtexfields\RemoveBracesFormatter.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\formatter\bibtexfields\RemoveDigitsFormatter.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\formatter\bibtexfields\RemoveHyphenatedNewlinesFormatter.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\formatter\bibtexfields\RemoveNewlinesFormatter.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\formatter\bibtexfields\RemoveRedundantSpacesFormatter.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\formatter\bibtexfields\ReplaceTabsBySpaceFormater.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\formatter\bibtexfields\ShortenDOIFormatter.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\formatter\bibtexfields\TrimWhitespaceFormatter.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\formatter\bibtexfields\UnicodeToLatexFormatter.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\formatter\bibtexfields\UnitsToLatexFormatter.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\formatter\casechanger\CapitalizeFormatter.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\formatter\casechanger\LowerCaseFormatter.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\formatter\casechanger\ProtectTermsFormatter.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\formatter\casechanger\SentenceCaseFormatter.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\formatter\casechanger\Title.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\formatter\casechanger\TitleCaseFormatter.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\formatter\casechanger\TitleParser.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\formatter\casechanger\UnprotectTermsFormatter.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\formatter\casechanger\UpperCaseFormatter.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\formatter\casechanger\Word.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\formatter\Formatters.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\formatter\IdentityFormatter.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\formatter\minifier\MinifyNameListFormatter.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\formatter\minifier\TruncateFormatter.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\git\GitHandler.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\git\SlrGitHandler.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\groups\DefaultGroupsFactory.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\help\HelpFile.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\importer\AuthorListParser.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\importer\CompositeIdFetcher.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\importer\EntryBasedFetcher.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\importer\EntryBasedParserFetcher.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\importer\fetcher\AbstractIsbnFetcher.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\importer\fetcher\ACMPortalFetcher.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\importer\fetcher\ACS.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\importer\fetcher\ApsFetcher.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\importer\fetcher\ArXivFetcher.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\importer\fetcher\AstrophysicsDataSystem.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\importer\fetcher\BibsonomyScraper.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\importer\fetcher\BiodiversityLibrary.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\importer\fetcher\BvbFetcher.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\importer\fetcher\CiteSeer.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\importer\fetcher\CollectionOfComputerScienceBibliographiesFetcher.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\importer\fetcher\CollectionOfComputerScienceBibliographiesParser.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\importer\fetcher\ComplexSearchQuery.java...
line 44:30 no viable alternative at input 'case "author" ->'
line 44:30 mismatched input '->' expecting {'instanceof', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 45:16 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 45:29 mismatched input '->' expecting {'instanceof', ')', '[', ',', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 46:16 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 46:32 mismatched input '->' expecting {'instanceof', ')', '[', ',', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 47:16 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 47:31 mismatched input '->' expecting {'instanceof', ')', '[', ',', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 48:16 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 48:28 mismatched input '->' expecting {'instanceof', ')', '[', ',', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 49:16 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 49:34 mismatched input '->' expecting {'instanceof', ')', '[', ',', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 50:16 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 50:27 mismatched input '->' expecting {'instanceof', ')', '[', ',', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 51:16 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 51:31 mismatched input '->' expecting {'instanceof', ')', '[', ',', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 53:16 extraneous input 'default' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 55:8 extraneous input '}' expecting ')'
line 256:34 no viable alternative at input 'case "author" ->'
line 256:34 mismatched input '->' expecting {'instanceof', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 257:20 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 257:33 mismatched input '->' expecting {'instanceof', ')', '[', ',', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 258:20 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 258:36 mismatched input '->' expecting {'instanceof', ')', '[', ',', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 259:20 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 259:35 mismatched input '->' expecting {'instanceof', ')', '[', ',', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 260:20 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 260:31 mismatched input '->' expecting {'instanceof', ')', '[', ',', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 261:20 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 261:32 mismatched input '->' expecting {'instanceof', ')', '[', ',', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 262:20 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 262:38 mismatched input '->' expecting {'instanceof', ')', '[', ',', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 263:20 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 263:35 mismatched input '->' expecting {'instanceof', ')', '[', ',', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 265:12 extraneous input '}' expecting ')'
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\importer\fetcher\CompositeSearchBasedFetcher.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\importer\fetcher\CrossRef.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\importer\fetcher\CustomizableKeyFetcher.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\importer\fetcher\DBLPFetcher.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\importer\fetcher\DiVA.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\importer\fetcher\DOABFetcher.java...
line 112:45 no viable alternative at input 'case "dc.contributor.author" ->'
line 112:45 mismatched input '->' expecting {'instanceof', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 119:16 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 119:31 mismatched input '->' expecting {'instanceof', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 120:16 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 120:38 mismatched input '->' expecting {'instanceof', ')', '[', ',', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 122:16 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 122:44 mismatched input '->' expecting {'instanceof', ')', '[', ',', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 124:16 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 124:32 mismatched input '->' expecting {'instanceof', ')', '[', ',', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 126:16 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 126:35 mismatched input '->' expecting {'instanceof', ')', '[', ',', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 133:16 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 133:47 mismatched input '->' expecting {'instanceof', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 135:16 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 135:35 mismatched input '->' expecting {'instanceof', ')', '[', ',', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 137:16 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 137:38 mismatched input '->' expecting {'instanceof', ')', '[', ',', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 139:16 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 139:41 mismatched input '->' expecting {'instanceof', ')', '[', ',', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 141:16 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 141:37 mismatched input '->' expecting {'instanceof', ')', '[', ',', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 146:16 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 146:40 mismatched input '->' expecting {'instanceof', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 147:16 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 147:45 mismatched input '->' expecting {'instanceof', ')', '[', ',', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 148:16 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 148:36 mismatched input '->' expecting {'instanceof', ')', '[', ',', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 150:16 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 150:42 mismatched input ',' expecting {'instanceof', ')', '[', ',', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 150:65 mismatched input '->' expecting {'instanceof', ')', '[', ',', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 152:16 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 152:44 mismatched input '->' expecting {'instanceof', ')', '[', ',', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 154:16 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 154:37 mismatched input '->' expecting {'instanceof', ')', '[', ',', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 158:22 no viable alternative at input 'entry.setField('
line 158:43 no viable alternative at input 'StandardField.AUTHOR,'
line 158:100 extraneous input ')' expecting ';'
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\importer\fetcher\DOAJFetcher.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\importer\fetcher\DoiFetcher.java...
line 139:65 extraneous input 'fe' expecting ')'
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\importer\fetcher\DoiResolution.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\importer\fetcher\GoogleScholar.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\importer\fetcher\GrobidCitationFetcher.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\importer\fetcher\GrobidPreferences.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\importer\fetcher\GvkFetcher.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\importer\fetcher\IacrEprintFetcher.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\importer\fetcher\IEEE.java...
line 82:25 no viable alternative at input 'case "Books" ->'
line 82:25 mismatched input '->' expecting {'instanceof', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 83:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 83:31 mismatched input '->' expecting {'instanceof', ')', '[', ',', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 84:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 84:27 mismatched input '->' expecting {'instanceof', ')', '[', ',', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 85:12 extraneous input 'default' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 88:22 no viable alternative at input 'entry.setField('
line 88:45 no viable alternative at input 'StandardField.ABSTRACT,'
line 88:78 extraneous input ')' expecting ';'
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\importer\fetcher\INSPIREFetcher.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\DoiToBibtexConverterComIsbnFetcher.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\EbookDeIsbnFetcher.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\IsbnFetcher.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\importer\fetcher\isbntobibtex\OpenLibraryIsbnFetcher.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\importer\fetcher\JstorFetcher.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\importer\fetcher\LibraryOfCongress.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\importer\fetcher\MathSciNet.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\importer\fetcher\MedlineFetcher.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\importer\fetcher\Medra.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\importer\fetcher\MrDLibFetcher.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\importer\fetcher\OpenAccessDoi.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\importer\fetcher\ResearchGate.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\importer\fetcher\RfcFetcher.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\importer\fetcher\ScienceDirect.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\importer\fetcher\SemanticScholar.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\importer\fetcher\SpringerFetcher.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\importer\fetcher\SpringerLink.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\importer\fetcher\TitleFetcher.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\importer\fetcher\transformers\AbstractQueryTransformer.java...
line 79:26 no viable alternative at input 'case "author" ->'
line 79:26 mismatched input '->' expecting {'instanceof', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 82:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 82:25 mismatched input '->' expecting {'instanceof', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 85:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 85:27 mismatched input '->' expecting {'instanceof', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 88:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 88:24 mismatched input '->' expecting {'instanceof', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 92:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 92:30 mismatched input '->' expecting {'instanceof', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 96:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 96:23 mismatched input '->' expecting {'instanceof', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 100:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 103:12 mismatched input 'default' expecting {'instanceof', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 110:14 extraneous input 'String' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 112:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 117:12 extraneous input 'Optional' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 119:8 extraneous input 'if' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 121:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 123:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 129:23 extraneous input 'String' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 134:23 extraneous input 'String' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 139:23 extraneous input 'String' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 144:23 extraneous input 'String' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 150:14 extraneous input 'void' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 152:8 extraneous input 'int' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 153:8 extraneous input 'startYear' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 154:8 extraneous input 'if' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 156:12 extraneous input 'if' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 158:12 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 160:16 extraneous input 'endYear' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 161:12 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 171:14 extraneous input 'String' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 173:8 extraneous input 'if' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 176:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 178:8 extraneous input 'for' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 178:32 extraneous input 'i' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 178:46 extraneous input 'i' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 180:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 182:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 189:14 extraneous input 'Optional' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 191:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 193:14 extraneous input 'String' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 195:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 197:14 extraneous input 'String' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 199:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 205:14 extraneous input 'Optional' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 207:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 209:12 extraneous input 'Optional' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 212:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 214:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 216:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 218:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 220:12 extraneous input 'return' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 221:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 233:11 extraneous input 'Optional' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 235:8 extraneous input 'transformedQuery' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 236:8 extraneous input 'return' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 237:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 242:12 extraneous input 'String' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 245:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 247:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\importer\fetcher\transformers\ArXivQueryTransformer.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\importer\fetcher\transformers\BiodiversityLibraryTransformer.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\importer\fetcher\transformers\CollectionOfComputerScienceBibliographiesQueryTransformer.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\importer\fetcher\transformers\DBLPQueryTransformer.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\importer\fetcher\transformers\DefaultLuceneQueryTransformer.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\importer\fetcher\transformers\DefaultQueryTransformer.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\importer\fetcher\transformers\GVKQueryTransformer.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\importer\fetcher\transformers\IEEEQueryTransformer.java...
line 64:15 extraneous input 'switch' expecting {'boolean', 'byte', 'char', 'double', 'float', 'int', 'long', 'new', 'short', 'super', 'this', 'void', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 64:38 missing ';' at '{'
line 65:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 65:34 mismatched input '->' expecting {'instanceof', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 66:12 extraneous input 'default' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\importer\fetcher\transformers\JstorQueryTransformer.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\importer\fetcher\transformers\MedlineQueryTransformer.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\importer\fetcher\transformers\ResearchGateQueryTransformer.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\importer\fetcher\transformers\ScholarQueryTransformer.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\importer\fetcher\transformers\SpringerQueryTransformer.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\importer\fetcher\transformers\YearAndYearRangeByFilteringQueryTransformer.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\importer\fetcher\transformers\YearRangeByFilteringQueryTransformer.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\importer\fetcher\transformers\ZbMathQueryTransformer.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\importer\fetcher\TrustLevel.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\importer\fetcher\ZbMATH.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\importer\FetcherClientException.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\importer\FetcherException.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\importer\FetcherResult.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\importer\FetcherServerException.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\importer\fileformat\ACMPortalParser.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\importer\fileformat\BiblioscapeImporter.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\importer\fileformat\BibtexImporter.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\importer\fileformat\BibtexParser.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\importer\fileformat\CffImporter.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\importer\fileformat\CitaviXmlImporter.java...
line 229:15 extraneous input 'switch' expecting {'boolean', 'byte', 'char', 'double', 'float', 'int', 'long', 'new', 'short', 'super', 'this', 'void', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 229:53 missing ';' at '{'
line 230:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 230:26 mismatched input ',' expecting {'instanceof', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 230:37 mismatched input ',' expecting {'instanceof', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 230:51 mismatched input ',' expecting {'instanceof', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 230:75 mismatched input ',' expecting {'instanceof', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 230:85 mismatched input '->' expecting {'instanceof', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 231:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 231:38 mismatched input '->' expecting {'instanceof', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 232:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 232:32 mismatched input '->' expecting {'instanceof', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 233:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 233:23 mismatched input ',' expecting {'instanceof', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 233:37 mismatched input ',' expecting {'instanceof', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 233:51 mismatched input '->' expecting {'instanceof', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 234:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 234:26 mismatched input '->' expecting {'instanceof', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 236:12 extraneous input 'default' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\importer\fileformat\CoinsParser.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\importer\fileformat\CopacImporter.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\importer\fileformat\CustomImporter.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\importer\fileformat\EndnoteImporter.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\importer\fileformat\EndnoteXmlImporter.java...
line 166:15 extraneous input 'switch' expecting {'boolean', 'byte', 'char', 'double', 'float', 'int', 'long', 'new', 'short', 'super', 'this', 'void', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 166:53 missing ';' at '{'
line 167:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 167:26 mismatched input ',' expecting {'instanceof', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 167:38 mismatched input '->' expecting {'instanceof', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 168:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 168:38 mismatched input '->' expecting {'instanceof', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 169:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 169:32 mismatched input '->' expecting {'instanceof', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 170:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 170:24 mismatched input '->' expecting {'instanceof', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 171:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 171:26 mismatched input '->' expecting {'instanceof', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 173:12 extraneous input 'default' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\importer\fileformat\InspecImporter.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\importer\fileformat\IsiImporter.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\importer\fileformat\MarcXmlParser.java...
line 173:20 no viable alternative at input 'Optional<StandardField> field = Optional.ofNullable(\n                    switch'
line 172:42 mismatched input '=' expecting '('
line 173:20 no viable alternative at input '.ofNullable(\n                    switch'
line 173:20 extraneous input 'switch' expecting {'boolean', 'byte', 'char', 'double', 'float', 'int', 'long', 'new', 'short', 'super', 'this', 'void', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', ')', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 173:38 mismatched input '{' expecting {'instanceof', ')', '[', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 174:24 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 174:35 mismatched input '->' expecting {'instanceof', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 176:24 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 176:35 mismatched input '->' expecting {'instanceof', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 178:24 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 178:35 mismatched input '->' expecting {'instanceof', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 180:24 extraneous input 'default' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 182:21 extraneous input ')' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\importer\fileformat\medline\ArticleId.java...
line 3:7 extraneous input 'record' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\importer\fileformat\medline\Investigator.java...
line 5:7 extraneous input 'record' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\importer\fileformat\medline\MeshHeading.java...
line 5:7 extraneous input 'record' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\importer\fileformat\medline\OtherId.java...
line 3:7 extraneous input 'record' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\importer\fileformat\medline\PersonalNameSubject.java...
line 3:7 extraneous input 'record' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\importer\fileformat\MedlineImporter.java...
line 119:45 no viable alternative at input 'case "PubmedArticle" ->'
line 119:45 mismatched input '->' expecting {'instanceof', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 122:24 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 122:49 mismatched input '->' expecting {'instanceof', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 128:8 extraneous input '}' expecting {'catch', 'finally'}
line 145:40 no viable alternative at input 'case "BookDocument" ->'
line 145:40 mismatched input '->' expecting {'instanceof', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 148:20 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 148:45 mismatched input '->' expecting {'instanceof', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 163:22 no viable alternative at input 'entry.setField('
line 163:29 no viable alternative at input 'fields)'
line 163:30 mismatched input ';' expecting {'throws', '{'}
line 165:20 no viable alternative at input 'bibItems.add('
line 165:26 no viable alternative at input 'entry)'
line 165:27 mismatched input ';' expecting {'throws', '{'}
line 168:12 extraneous input 'void' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 172:8 extraneous input 'List' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 173:8 extraneous input 'List' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 174:8 extraneous input 'List' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 176:8 extraneous input 'while' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 178:12 extraneous input 'if' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 180:16 extraneous input 'switch' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 183:24 extraneous input 'if' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 185:24 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 189:20 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 192:20 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 195:20 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 198:20 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 201:24 extraneous input 'if' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 203:24 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 207:24 extraneous input 'if' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 209:24 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 213:24 extraneous input 'if' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 215:24 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 219:20 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 225:12 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 231:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 233:8 extraneous input 'if' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 235:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 238:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 241:12 extraneous input 'void' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 244:8 extraneous input 'List' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 246:8 extraneous input 'while' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 248:12 extraneous input 'if' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 250:16 extraneous input 'switch' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 253:24 extraneous input 'if' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 255:24 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 259:24 extraneous input 'if' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 261:24 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 265:20 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 268:20 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 271:20 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 274:24 extraneous input 'if' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 276:24 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 280:24 extraneous input 'if' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 282:24 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 286:24 extraneous input 'if' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 288:24 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 292:24 extraneous input 'if' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 294:24 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 298:24 extraneous input 'reader' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 299:24 extraneous input 'if' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 301:24 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 305:24 extraneous input 'if' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 307:24 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 314:12 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 319:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 323:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 326:12 extraneous input 'void' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 329:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 332:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 335:12 extraneous input 'void' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 338:8 extraneous input 'while' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 340:12 extraneous input 'if' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 342:16 extraneous input 'switch' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 345:24 extraneous input 'if' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 348:24 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 352:20 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 359:16 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 361:16 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 366:12 extraneous input 'void' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 370:8 extraneous input 'while' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 372:12 extraneous input 'if' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 374:16 extraneous input 'switch' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 377:20 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 380:20 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 386:12 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 390:8 extraneous input 'entry' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 392:8 extraneous input 'bibItems' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 393:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 395:12 extraneous input 'void' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 398:8 extraneous input 'List' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 400:8 extraneous input 'while' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 402:12 extraneous input 'if' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 404:16 extraneous input 'switch' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 407:24 extraneous input 'if' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 409:24 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 413:24 extraneous input 'reader' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 414:24 extraneous input 'if' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 416:24 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 423:12 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 428:12 extraneous input 'if' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 430:12 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 434:12 extraneous input 'void' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 438:8 extraneous input 'List' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 439:8 extraneous input 'List' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 440:8 extraneous input 'List' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 441:8 extraneous input 'List' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 442:8 extraneous input 'List' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 443:8 extraneous input 'List' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 444:8 extraneous input 'List' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 446:8 extraneous input 'String' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 447:8 extraneous input 'String' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 448:8 extraneous input 'int' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 449:8 extraneous input 'fields' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 450:8 extraneous input 'fields' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 452:8 extraneous input 'while' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 454:12 extraneous input 'if' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 456:16 extraneous input 'switch' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 459:20 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 462:20 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 465:24 extraneous input 'reader' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 466:24 extraneous input 'if' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 468:28 extraneous input 'if' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 470:32 extraneous input 'fields' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 471:28 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 476:20 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 479:20 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 482:24 extraneous input 'if' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 484:24 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 488:20 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 491:20 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 494:24 extraneous input 'if' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 496:24 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 500:20 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 503:24 extraneous input 'reader' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 504:24 extraneous input 'if' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 506:28 extraneous input 'otherIdList' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 507:24 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 511:24 extraneous input 'if' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 513:24 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 517:24 extraneous input 'if' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 519:24 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 523:20 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 526:24 extraneous input 'if' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 528:24 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 535:12 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 541:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 543:8 extraneous input 'addPersonalNames' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 544:8 extraneous input 'addOtherId' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 545:8 extraneous input 'addKeywords' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 546:8 extraneous input 'if' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 548:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 550:8 extraneous input 'addNotes' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 551:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 553:12 extraneous input 'void' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 556:8 extraneous input 'String' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 557:8 extraneous input 'List' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 559:8 extraneous input 'while' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 561:12 extraneous input 'if' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 563:16 extraneous input 'switch' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 566:24 extraneous input 'if' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 568:24 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 572:24 extraneous input 'if' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 574:24 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 578:24 extraneous input 'if' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 580:24 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 587:12 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 591:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 593:12 extraneous input 'void' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 596:8 extraneous input 'String' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 598:8 extraneous input 'while' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 600:12 extraneous input 'if' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 602:16 extraneous input 'switch' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 605:24 extraneous input 'if' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 607:24 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 611:24 extraneous input 'if' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 613:24 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 620:12 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 624:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 626:12 extraneous input 'void' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 629:8 extraneous input 'List' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 631:8 extraneous input 'while' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 633:12 extraneous input 'if' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 635:16 extraneous input 'switch' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 638:24 extraneous input 'if' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 640:24 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 644:24 extraneous input 'if' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 646:24 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 653:12 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 657:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 659:12 extraneous input 'void' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 663:8 extraneous input 'while' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 665:12 extraneous input 'if' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 667:16 extraneous input 'if' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 669:20 extraneous input 'if' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 671:20 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 677:12 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 682:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 685:12 extraneous input 'void' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 689:8 extraneous input 'while' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 691:12 extraneous input 'if' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 693:16 extraneous input 'if' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 695:20 extraneous input 'if' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 697:20 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 703:12 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 707:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 709:12 extraneous input 'void' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 713:12 extraneous input 'if' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 715:16 extraneous input 'switch' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 718:24 extraneous input 'if' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 720:24 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 724:24 extraneous input 'if' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 726:24 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 730:24 extraneous input 'if' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 732:24 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 736:24 extraneous input 'if' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 738:24 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 745:12 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 749:12 extraneous input 'void' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 751:8 extraneous input 'String' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 752:8 extraneous input 'fields' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 754:8 extraneous input 'while' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 756:12 extraneous input 'if' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 758:16 extraneous input 'switch' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 761:20 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 764:20 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 767:20 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 770:24 extraneous input 'String' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 771:24 extraneous input 'reader' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 772:24 extraneous input 'if' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 774:24 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 778:20 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 781:20 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 787:12 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 792:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 795:12 extraneous input 'void' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 798:12 extraneous input 'if' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 800:16 extraneous input 'switch' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 803:24 extraneous input 'if' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 805:24 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 809:24 extraneous input 'if' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 811:24 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 815:24 extraneous input 'if' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 817:24 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 821:24 extraneous input 'if' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 823:24 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 827:20 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 833:12 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 837:12 extraneous input 'void' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 840:8 extraneous input 'Optional' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 841:8 extraneous input 'Optional' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 844:8 extraneous input 'Map' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 852:8 extraneous input 'while' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 854:12 extraneous input 'if' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 856:16 extraneous input 'switch' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 859:24 extraneous input 'if' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 861:24 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 865:24 extraneous input 'if' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 867:24 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 871:24 extraneous input 'if' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 873:24 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 880:12 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 884:8 extraneous input 'date' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 886:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 888:12 extraneous input 'void' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 893:16 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 895:16 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 900:12 extraneous input 'void' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 903:8 extraneous input 'for' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 906:12 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 911:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 914:12 extraneous input 'void' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 916:8 extraneous input 'List' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 919:8 extraneous input 'if' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 922:16 extraneous input 'if' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 924:16 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 928:16 extraneous input 'if' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 930:16 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 935:12 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 938:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 941:12 extraneous input 'void' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 945:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 949:16 extraneous input 'result' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 950:16 extraneous input 'fields' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 951:12 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 955:12 extraneous input 'void' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 959:12 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 963:12 extraneous input 'void' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 968:12 extraneous input 'if' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 971:20 extraneous input 'if' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 973:20 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 975:16 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 978:12 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 982:12 extraneous input 'void' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 985:8 extraneous input 'if' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 988:16 extraneous input 'if' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 991:20 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 994:12 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 997:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1000:12 extraneous input 'void' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 1003:12 extraneous input 'if' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1005:16 extraneous input 'switch' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1008:24 extraneous input 'if' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1010:24 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1014:24 extraneous input 'if' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1016:24 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1020:24 extraneous input 'if' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1022:28 extraneous input 'month' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1023:24 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1027:24 extraneous input 'if' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1029:24 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1036:12 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1040:12 extraneous input 'void' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 1044:8 extraneous input 'while' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1046:12 extraneous input 'if' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1048:16 extraneous input 'switch' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1051:24 extraneous input 'if' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1053:24 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1057:20 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1063:12 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1068:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1076:12 extraneous input 'void' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 1080:8 extraneous input 'while' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1082:12 extraneous input 'if' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1084:16 extraneous input 'switch' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1087:24 extraneous input 'if' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1089:24 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1094:12 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1098:12 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1102:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1104:12 extraneous input 'void' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 1107:8 extraneous input 'String' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1109:8 extraneous input 'while' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1111:12 extraneous input 'if' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1113:16 extraneous input 'switch' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1116:24 extraneous input 'if' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1118:24 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1122:24 extraneous input 'if' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1125:28 extraneous input 'putIfValueNotNull' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1126:24 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1130:24 extraneous input 'if' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1133:28 extraneous input 'fields' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1134:24 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1141:12 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1145:12 extraneous input 'String' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 1148:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1150:12 extraneous input 'void' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 1153:8 extraneous input 'while' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1155:12 extraneous input 'if' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1157:16 extraneous input 'switch' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1160:20 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1166:12 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1170:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1172:12 extraneous input 'void' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 1174:8 extraneous input 'List' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1176:8 extraneous input 'while' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1178:12 extraneous input 'if' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1180:16 extraneous input 'switch' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1183:24 extraneous input 'if' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1185:24 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1189:24 extraneous input 'if' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1191:24 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1195:24 extraneous input 'if' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1197:24 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1204:12 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1209:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1212:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1215:12 extraneous input 'void' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 1218:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1225:12 extraneous input 'String' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 1227:8 extraneous input 'if' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1229:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1231:8 extraneous input 'String' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1232:8 extraneous input 'int' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1233:8 extraneous input 'int' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1234:8 extraneous input 'if' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1236:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1238:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1240:12 extraneous input 'boolean' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 1242:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1244:12 extraneous input 'boolean' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 1246:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1248:12 extraneous input 'boolean' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 1250:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1253:11 extraneous input 'List' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 1257:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1259:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1261:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\importer\fileformat\MedlinePlainImporter.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\importer\fileformat\mods\Identifier.java...
line 3:7 extraneous input 'record' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\importer\fileformat\mods\Name.java...
line 3:7 extraneous input 'record' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\importer\fileformat\mods\package-info.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\importer\fileformat\mods\RecordInfo.java...
line 7:7 extraneous input 'record' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 11:18 extraneous input 'Set' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 21:11 extraneous input 'RecordInfo' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 23:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\importer\fileformat\ModsImporter.java...
line 125:36 no viable alternative at input 'case "abstract" ->'
line 125:36 mismatched input '->' expecting {'instanceof', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 131:20 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 131:33 mismatched input '->' expecting {'instanceof', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 137:20 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 137:36 mismatched input '->' expecting {'instanceof', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 140:20 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 140:36 mismatched input '->' expecting {'instanceof', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 143:20 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 143:38 mismatched input '->' expecting {'instanceof', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 150:20 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 150:32 mismatched input '->' expecting {'instanceof', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 156:20 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 156:38 mismatched input '->' expecting {'instanceof', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 159:20 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 159:37 mismatched input '->' expecting {'instanceof', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 162:20 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 162:35 mismatched input '->' expecting {'instanceof', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 165:20 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 165:38 mismatched input '->' expecting {'instanceof', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 168:20 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 168:32 mismatched input '->' expecting {'instanceof', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 171:20 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 171:39 mismatched input '->' expecting {'instanceof', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 182:34 no viable alternative at input 'fields,'
line 182:67 extraneous input ')' expecting ';'
line 198:33 no viable alternative at input 'case "title" ->'
line 198:33 mismatched input '->' expecting {'instanceof', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 204:20 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 204:34 mismatched input '->' expecting {'instanceof', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 207:20 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 207:34 mismatched input '->' expecting {'instanceof', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 219:12 extraneous input 'void' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 221:8 extraneous input 'String' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 222:8 extraneous input 'String' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 224:8 extraneous input 'while' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 227:12 extraneous input 'if' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 229:16 extraneous input 'reader' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 230:16 extraneous input 'switch' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 234:24 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 239:24 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 244:24 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 251:12 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 256:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 258:12 extraneous input 'if' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 262:12 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 266:12 extraneous input 'void' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 268:8 extraneous input 'Set' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 270:8 extraneous input 'while' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 273:12 extraneous input 'if' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 276:20 extraneous input 'if' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 278:20 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 284:12 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 288:12 extraneous input 'void' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 291:8 extraneous input 'while' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 294:12 extraneous input 'if' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 297:20 extraneous input 'if' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 299:20 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 302:20 extraneous input 'reader' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 303:20 extraneous input 'if' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 305:20 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 311:12 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 315:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 317:12 extraneous input 'void' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 320:8 extraneous input 'while' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 323:12 extraneous input 'if' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 325:16 extraneous input 'switch' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 328:24 extraneous input 'if' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 330:24 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 334:24 extraneous input 'if' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 336:24 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 340:24 extraneous input 'if' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 342:24 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 346:24 extraneous input 'if' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 348:24 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 352:24 extraneous input 'if' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 354:24 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 361:12 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 365:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 367:12 extraneous input 'void' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 371:12 extraneous input 'if' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 375:24 extraneous input 'if' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 377:24 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 381:24 extraneous input 'if' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 383:24 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 387:24 extraneous input 'if' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 389:24 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 396:12 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 400:12 extraneous input 'void' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 402:8 extraneous input 'List' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 403:8 extraneous input 'List' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 405:8 extraneous input 'while' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 408:12 extraneous input 'if' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 411:20 extraneous input 'if' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 413:20 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 416:20 extraneous input 'if' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 418:20 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 424:12 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 429:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 431:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 433:12 extraneous input 'void' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 437:12 extraneous input 'if' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 439:16 extraneous input 'if' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 441:16 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 446:12 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 450:12 extraneous input 'void' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 454:12 extraneous input 'if' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 456:16 extraneous input 'if' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 458:16 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 463:12 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 467:12 extraneous input 'void' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 469:8 extraneous input 'List' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 471:8 extraneous input 'while' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 474:12 extraneous input 'if' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 477:20 extraneous input 'if' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 479:20 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 482:20 extraneous input 'if' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 484:20 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 490:12 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 494:8 extraneous input 'putIfListIsNotEmpty' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 495:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 497:12 extraneous input 'String' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 500:12 extraneous input 'case' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 501:12 extraneous input 'case' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 502:12 extraneous input 'case' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 503:12 extraneous input 'default' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 504:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 505:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 507:12 extraneous input 'void' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 509:8 extraneous input 'if' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 511:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 514:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 517:12 extraneous input 'void' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 520:12 extraneous input 'switch' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 525:20 extraneous input 'optionalParsedDate' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 528:20 extraneous input 'optionalParsedDate' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 530:16 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 534:20 extraneous input 'fields' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 535:16 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 539:16 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 543:16 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 548:12 extraneous input 'void' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 551:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 554:12 extraneous input 'void' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 556:8 extraneous input 'String' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 557:8 extraneous input 'String' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 559:8 extraneous input 'for' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 562:12 extraneous input 'if' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 564:16 extraneous input 'namePartValue' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 565:16 extraneous input 'authors' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 566:12 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 572:20 extraneous input 'authors' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 574:20 extraneous input 'foreName' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 575:16 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 577:16 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 579:12 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 581:12 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 587:12 extraneous input 'authors' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 588:12 extraneous input 'foreName' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 589:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 591:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 594:12 extraneous input 'void' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 597:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 600:12 extraneous input 'void' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 603:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 606:12 extraneous input 'boolean' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 608:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 610:12 extraneous input 'boolean' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 612:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 614:12 extraneous input 'boolean' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 616:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 619:11 extraneous input 'String' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 621:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 624:11 extraneous input 'StandardFileType' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 626:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 629:11 extraneous input 'String' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 631:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 634:11 extraneous input 'List' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 637:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 639:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 641:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\importer\fileformat\MrDLibImporter.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\importer\fileformat\MsBibImporter.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\importer\fileformat\OvidImporter.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\importer\fileformat\PdfContentImporter.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\importer\fileformat\PdfEmbeddedBibFileImporter.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\importer\fileformat\PdfGrobidImporter.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\importer\fileformat\PdfMergeMetadataImporter.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\importer\fileformat\PdfVerbatimBibTextImporter.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\importer\fileformat\PdfXmpImporter.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\importer\fileformat\PicaXmlParser.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\importer\fileformat\RepecNepImporter.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\importer\fileformat\RisImporter.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\importer\fileformat\SilverPlatterImporter.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\importer\FulltextFetcher.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\importer\FulltextFetchers.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\importer\IdBasedFetcher.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\importer\IdBasedParserFetcher.java...
line 85:57 extraneous input 'fe' expecting ')'
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\importer\IdFetcher.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\importer\IdParserFetcher.java...
line 92:57 extraneous input 'fe' expecting ')'
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\importer\ImportCleanup.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\importer\Importer.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\importer\ImporterPreferences.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\importer\ImportException.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\importer\ImportFormatPreferences.java...
line 10:7 extraneous input 'record' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\importer\ImportFormatReader.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\importer\OpenDatabase.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\importer\OutputPrinter.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\importer\PagedSearchBasedFetcher.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\importer\PagedSearchBasedParserFetcher.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\importer\ParseException.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\importer\Parser.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\importer\ParserResult.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\importer\QueryParser.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\importer\SearchBasedFetcher.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\importer\SearchBasedParserFetcher.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\importer\util\FileFieldParser.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\importer\util\GrobidService.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\importer\util\GroupsParser.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\importer\util\IdentifierParser.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\importer\util\INSPIREBibtexFilterReader.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\importer\util\JsonReader.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\importer\util\MediaTypes.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\importer\util\MetaDataParser.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\importer\util\ShortDOIService.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\importer\util\ShortDOIServiceException.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\importer\WebFetcher.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\importer\WebFetchers.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\integrity\AbbreviationChecker.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\integrity\AmpersandChecker.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\integrity\ASCIICharacterChecker.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\integrity\BibStringChecker.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\integrity\BibTeXEntryTypeChecker.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\integrity\BooktitleChecker.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\integrity\BracesCorrector.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\integrity\BracketChecker.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\integrity\CitationKeyChecker.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\integrity\CitationKeyDeviationChecker.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\integrity\CitationKeyDuplicationChecker.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\integrity\DatabaseChecker.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\integrity\DateChecker.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\integrity\DoiDuplicationChecker.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\integrity\DoiValidityChecker.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\integrity\EditionChecker.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\integrity\EntryChecker.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\integrity\EntryLinkChecker.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\integrity\FieldChecker.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\integrity\FieldCheckers.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\integrity\FileChecker.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\integrity\HowPublishedChecker.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\integrity\HTMLCharacterChecker.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\integrity\IntegrityCheck.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\integrity\IntegrityMessage.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\integrity\ISBNChecker.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\integrity\ISSNChecker.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\integrity\JournalInAbbreviationListChecker.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\integrity\MonthChecker.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\integrity\NoBibtexFieldChecker.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\integrity\NoteChecker.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\integrity\PagesChecker.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\integrity\PersonNamesChecker.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\integrity\TitleChecker.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\integrity\TypeChecker.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\integrity\UrlChecker.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\integrity\UTF8Checker.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\integrity\ValidCitationKeyChecker.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\integrity\ValueChecker.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\integrity\YearChecker.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\JabRefException.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\journals\Abbreviation.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\journals\AbbreviationFormat.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\journals\AbbreviationParser.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\journals\AbbreviationWriter.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\journals\JournalAbbreviationLoader.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\journals\JournalAbbreviationPreferences.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\journals\JournalAbbreviationRepository.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\l10n\Encodings.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\l10n\Language.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\l10n\Localization.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\l10n\LocalizationKey.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\l10n\LocalizationKeyParams.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\l10n\LocalizationLocator.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\layout\AbstractParamLayoutFormatter.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\layout\format\AuthorAbbreviator.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\layout\format\AuthorAndsCommaReplacer.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\layout\format\AuthorAndsReplacer.java...
line 21:19 extraneous input 'switch' expecting {'boolean', 'byte', 'char', 'double', 'float', 'int', 'long', 'new', 'short', 'super', 'this', 'void', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 21:43 missing ';' at '{'
line 22:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 22:19 mismatched input '->' expecting {'instanceof', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 23:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 23:19 mismatched input '->' expecting {'instanceof', '[', ']', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 24:12 extraneous input 'default' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 32:24 mismatched input '.' expecting {'[', '.', '<', IDENTIFIER}
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\layout\format\AuthorAndToSemicolonReplacer.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\layout\format\AuthorFirstAbbrLastCommas.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\layout\format\AuthorFirstAbbrLastOxfordCommas.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\layout\format\AuthorFirstFirst.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\layout\format\AuthorFirstFirstCommas.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\layout\format\AuthorFirstLastCommas.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\layout\format\AuthorFirstLastOxfordCommas.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\layout\format\AuthorLastFirst.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\layout\format\AuthorLastFirstAbbrCommas.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\layout\format\AuthorLastFirstAbbreviator.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\layout\format\AuthorLastFirstAbbrOxfordCommas.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\layout\format\AuthorLastFirstCommas.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\layout\format\AuthorLastFirstOxfordCommas.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\layout\format\AuthorLF_FF.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\layout\format\AuthorLF_FFAbbr.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\layout\format\AuthorNatBib.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\layout\format\AuthorOrgSci.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\layout\format\Authors.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\layout\format\CompositeFormat.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\layout\format\CreateBibORDFAuthors.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\layout\format\CreateDocBook4Authors.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\layout\format\CreateDocBook4Editors.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\layout\format\CreateDocBook5Authors.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\layout\format\CreateDocBook5Editors.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\layout\format\CSLType.java...
line 10:15 extraneous input 'switch' expecting {'boolean', 'byte', 'char', 'double', 'float', 'int', 'long', 'new', 'short', 'super', 'this', 'void', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 10:57 missing ';' at '{'
line 11:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 12:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 13:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 14:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 15:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 16:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 18:12 extraneous input 'default' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\layout\format\CurrentDate.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\layout\format\DateFormatter.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\layout\format\Default.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\layout\format\DocBookAuthorFormatter.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\layout\format\DocBookVersion.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\layout\format\DOICheck.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\layout\format\DOIStrip.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\layout\format\EntryTypeFormatter.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\layout\format\FileLink.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\layout\format\FirstPage.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\layout\format\FormatPagesForHTML.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\layout\format\FormatPagesForXML.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\layout\format\GetOpenOfficeType.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\layout\format\HTMLChars.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\layout\format\HTMLParagraphs.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\layout\format\IfPlural.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\layout\format\Iso690FormatDate.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\layout\format\Iso690NamesAuthors.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\layout\format\JournalAbbreviator.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\layout\format\LastPage.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\layout\format\LatexToUnicodeFormatter.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\layout\format\MarkdownFormatter.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\layout\format\NameFormatter.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\layout\format\NameFormatterPreferences.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\layout\format\NoSpaceBetweenAbbreviations.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\layout\format\NotFoundFormatter.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\layout\format\Number.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\layout\format\Ordinal.java...
line 27:35 extraneous input 'switch' expecting {'boolean', 'byte', 'char', 'double', 'float', 'int', 'long', 'new', 'short', 'super', 'this', 'void', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 27:50 missing ';' at '{'
line 28:16 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 28:23 mismatched input '->' expecting {'instanceof', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 29:16 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 29:23 mismatched input '->' expecting {'instanceof', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 30:16 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 30:23 mismatched input '->' expecting {'instanceof', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 31:16 extraneous input 'default' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\layout\format\RemoveBrackets.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\layout\format\RemoveBracketsAddComma.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\layout\format\RemoveLatexCommandsFormatter.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\layout\format\RemoveTilde.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\layout\format\RemoveWhitespace.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\layout\format\Replace.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\layout\format\ReplaceUnicodeLigaturesFormatter.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\layout\format\ReplaceWithEscapedDoubleQuotes.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\layout\format\RisAuthors.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\layout\format\RisKeywords.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\layout\format\RisMonth.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\layout\format\RTFChars.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\layout\format\ShortMonthFormatter.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\layout\format\ToLowerCase.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\layout\format\ToUpperCase.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\layout\format\WrapContent.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\layout\format\WrapFileLinks.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\layout\format\XMLChars.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\layout\Layout.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\layout\LayoutEntry.java...
line 404:15 extraneous input 'switch' expecting {'boolean', 'byte', 'char', 'double', 'float', 'int', 'long', 'new', 'short', 'super', 'this', 'void', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 404:29 missing ';' at '{'
line 406:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 406:39 mismatched input ',' expecting {'instanceof', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 406:55 mismatched input '->' expecting {'instanceof', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 408:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 408:42 mismatched input ',' expecting {'instanceof', '{', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 408:61 mismatched input '->' expecting {'instanceof', '{', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 409:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 409:34 mismatched input '->' expecting {'instanceof', '{', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 410:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 410:37 mismatched input '->' expecting {'instanceof', '{', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 411:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 411:48 mismatched input '->' expecting {'instanceof', '{', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 412:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 412:43 mismatched input '->' expecting {'instanceof', '{', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 413:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 413:38 mismatched input '->' expecting {'instanceof', '{', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 414:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 414:45 mismatched input '->' expecting {'instanceof', '{', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 415:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 415:51 mismatched input '->' expecting {'instanceof', '{', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 416:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 416:36 mismatched input '->' expecting {'instanceof', '{', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 417:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 417:42 mismatched input '->' expecting {'instanceof', '{', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 418:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 418:41 mismatched input '->' expecting {'instanceof', '{', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 419:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 419:47 mismatched input '->' expecting {'instanceof', '{', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 420:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 420:35 mismatched input '->' expecting {'instanceof', '{', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 421:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 421:45 mismatched input '->' expecting {'instanceof', '{', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 422:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 422:46 mismatched input '->' expecting {'instanceof', '{', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 423:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 423:51 mismatched input '->' expecting {'instanceof', '{', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 424:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 424:41 mismatched input '->' expecting {'instanceof', '{', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 425:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 425:47 mismatched input '->' expecting {'instanceof', '{', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 426:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 426:31 mismatched input '->' expecting {'instanceof', '{', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 427:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 427:35 mismatched input '->' expecting {'instanceof', '{', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 428:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 428:32 mismatched input '->' expecting {'instanceof', '{', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 429:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 429:32 mismatched input '->' expecting {'instanceof', '{', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 430:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 430:35 mismatched input '->' expecting {'instanceof', '{', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 431:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 431:40 mismatched input '->' expecting {'instanceof', '{', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 432:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 432:41 mismatched input '->' expecting {'instanceof', '{', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 433:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 433:41 mismatched input '->' expecting {'instanceof', '{', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 434:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 434:41 mismatched input '->' expecting {'instanceof', '{', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 435:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 435:41 mismatched input '->' expecting {'instanceof', '{', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 436:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 436:31 mismatched input '->' expecting {'instanceof', '{', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 437:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 437:33 mismatched input '->' expecting {'instanceof', '{', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 438:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 438:28 mismatched input '->' expecting {'instanceof', '{', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 439:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 439:28 mismatched input '->' expecting {'instanceof', '{', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 440:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 440:38 mismatched input '->' expecting {'instanceof', '{', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 441:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 441:29 mismatched input '->' expecting {'instanceof', '{', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 442:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 442:38 mismatched input '->' expecting {'instanceof', '{', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 443:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 443:37 mismatched input '->' expecting {'instanceof', '{', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 444:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 444:37 mismatched input '->' expecting {'instanceof', '{', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 445:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 445:29 mismatched input '->' expecting {'instanceof', '{', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 446:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 446:34 mismatched input '->' expecting {'instanceof', '{', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 447:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 447:36 mismatched input '->' expecting {'instanceof', '{', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 448:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 448:38 mismatched input '->' expecting {'instanceof', '{', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 449:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 449:38 mismatched input '->' expecting {'instanceof', '{', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 450:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 450:28 mismatched input '->' expecting {'instanceof', ')', '[', ',', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 452:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 452:30 mismatched input ',' expecting {'instanceof', '{', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 452:49 mismatched input '->' expecting {'instanceof', '{', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 453:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 453:33 mismatched input '->' expecting {'instanceof', '{', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 454:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 454:47 mismatched input '->' expecting {'instanceof', '{', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 455:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 455:27 mismatched input '->' expecting {'instanceof', '{', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 456:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 456:34 mismatched input '->' expecting {'instanceof', '{', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 457:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 457:42 mismatched input '->' expecting {'instanceof', '{', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 458:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 458:39 mismatched input '->' expecting {'instanceof', '{', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 459:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 459:31 mismatched input '->' expecting {'instanceof', '{', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 460:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 460:36 mismatched input '->' expecting {'instanceof', '{', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 461:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 461:31 mismatched input '->' expecting {'instanceof', '{', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 462:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 462:28 mismatched input '->' expecting {'instanceof', '{', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 463:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 463:28 mismatched input '->' expecting {'instanceof', '{', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 464:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 464:31 mismatched input '->' expecting {'instanceof', '{', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 465:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 465:31 mismatched input '->' expecting {'instanceof', '{', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 466:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 466:28 mismatched input '->' expecting {'instanceof', '{', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 467:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 467:27 mismatched input '->' expecting {'instanceof', '{', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 468:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 468:28 mismatched input '->' expecting {'instanceof', '{', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 469:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 469:26 mismatched input '->' expecting {'instanceof', ')', '[', ',', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 470:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 470:30 mismatched input '->' expecting {'instanceof', '{', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 471:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 471:27 mismatched input '->' expecting {'instanceof', '{', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 472:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 472:28 mismatched input '->' expecting {'instanceof', '{', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 473:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 473:27 mismatched input '->' expecting {'instanceof', '{', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 474:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 474:31 mismatched input '->' expecting {'instanceof', '{', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 475:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 475:33 mismatched input '->' expecting {'instanceof', '{', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 476:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 476:28 mismatched input '->' expecting {'instanceof', ')', '[', ',', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 477:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 477:27 mismatched input '->' expecting {'instanceof', '{', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 478:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 478:30 mismatched input '->' expecting {'instanceof', '{', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 479:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 479:50 mismatched input '->' expecting {'instanceof', '{', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 480:12 extraneous input 'default' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\layout\LayoutFormatter.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\layout\LayoutFormatterBasedFormatter.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\layout\LayoutFormatterPreferences.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\layout\LayoutHelper.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\layout\ParamLayoutFormatter.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\layout\StringInt.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\layout\TextBasedPreviewLayout.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\logging\LogMessages.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\msbib\BibTeXConverter.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\msbib\MsBibAuthor.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\msbib\MSBibConverter.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\msbib\MSBibDatabase.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\msbib\MSBibEntry.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\msbib\MSBibEntryType.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\msbib\MSBibMapping.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\msbib\PageNumbers.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\net\ProgressInputStream.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\net\ProxyAuthenticator.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\net\ProxyPreferences.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\net\ProxyRegisterer.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\net\ssl\SSLCertificate.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\net\ssl\SSLPreferences.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\net\ssl\TrustStoreManager.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\net\URLDownload.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\openoffice\action\EditInsert.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\openoffice\action\EditMerge.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\openoffice\action\EditSeparate.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\openoffice\action\ExportCited.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\openoffice\action\ManageCitations.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\openoffice\action\Update.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\openoffice\backend\Backend52.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\openoffice\backend\Codec52.java...
line 59:15 extraneous input 'switch' expecting {'boolean', 'byte', 'char', 'double', 'float', 'int', 'long', 'new', 'short', 'super', 'this', 'void', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 59:29 missing ';' at '{'
line 60:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 60:19 mismatched input '->' expecting {'instanceof', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 61:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 61:19 mismatched input '->' expecting {'instanceof', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 62:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 62:19 mismatched input '->' expecting {'instanceof', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 63:12 extraneous input 'default' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 68:15 extraneous input 'switch' expecting {'boolean', 'byte', 'char', 'double', 'float', 'int', 'long', 'new', 'short', 'super', 'this', 'void', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 68:29 missing ';' at '{'
line 69:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 70:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 71:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\openoffice\backend\GetContext.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\openoffice\backend\NamedRangeManagerReferenceMark.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\openoffice\backend\NamedRangeReferenceMark.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\openoffice\frontend\OOFrontend.java...
line 391:20 extraneous input 'switch' expecting {'boolean', 'byte', 'char', 'double', 'float', 'int', 'long', 'new', 'short', 'super', 'this', 'void', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', ')', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 391:42 mismatched input '{' expecting {'instanceof', ')', '[', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 392:24 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 393:24 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 394:24 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 395:21 extraneous input ')' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\openoffice\frontend\RangeForOverlapCheck.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\openoffice\frontend\UpdateBibliography.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\openoffice\frontend\UpdateCitationMarkers.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\openoffice\NoDocumentFoundException.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\openoffice\OpenOfficeFileSearch.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\openoffice\OpenOfficePreferences.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\openoffice\style\OOBibStyle.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\openoffice\style\OOBibStyleGetCitationMarker.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\openoffice\style\OOBibStyleGetNumCitationMarker.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\openoffice\style\OOFormatBibliography.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\openoffice\style\OOPreFormatter.java...
line 151:25 no viable alternative at input 'case "textit",'
line 151:25 mismatched input ',' expecting {'instanceof', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 151:31 mismatched input ',' expecting {'instanceof', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 151:39 mismatched input ',' expecting {'instanceof', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 151:46 mismatched input '->' expecting {'instanceof', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 152:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 152:25 mismatched input ',' expecting {'instanceof', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 152:32 mismatched input '->' expecting {'instanceof', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 153:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 153:26 mismatched input '->' expecting {'instanceof', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 155:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 155:29 mismatched input '->' expecting {'instanceof', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 156:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 156:24 mismatched input '->' expecting {'instanceof', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 158:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 158:26 mismatched input '->' expecting {'instanceof', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 159:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 159:35 mismatched input '->' expecting {'instanceof', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 160:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 160:33 mismatched input '->' expecting {'instanceof', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 162:8 extraneous input 'return' expecting {'abstract', 'boolean', 'byte', 'char', 'class', 'double', 'enum', 'final', 'float', 'int', 'interface', 'long', 'native', 'private', 'protected', 'public', 'short', 'static', 'strictfp', 'synchronized', 'transient', 'void', 'volatile', '{', '}', ';', '<', '@', IDENTIFIER}
line 164:0 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\openoffice\style\OOProcess.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\openoffice\style\OOProcessAuthorYearMarkers.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\openoffice\style\OOProcessCitationKeyMarkers.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\openoffice\style\OOProcessNumericMarkers.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\openoffice\style\StyleLoader.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\pdf\AnnotationImporter.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\pdf\EntryAnnotationImporter.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\pdf\FileAnnotationCache.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\pdf\PdfAnnotationImporter.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\pdf\search\indexing\DocumentReader.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\pdf\search\indexing\IndexingTaskManager.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\pdf\search\indexing\PdfIndexer.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\pdf\search\retrieval\PdfSearcher.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\pdf\TextExtractor.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\preferences\DOIPreferences.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\preferences\FetcherApiKey.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\preferences\OwnerPreferences.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\preferences\TimestampPreferences.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\preview\PreviewLayout.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\protectedterms\ProtectedTermsList.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\protectedterms\ProtectedTermsLoader.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\protectedterms\ProtectedTermsParser.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\protectedterms\ProtectedTermsPreferences.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\remote\client\RemoteClient.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\remote\Protocol.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\remote\RemoteMessage.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\remote\RemotePreferences.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\remote\RemoteUtil.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\remote\server\RemoteListenerServer.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\remote\server\RemoteListenerServerManager.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\remote\server\RemoteListenerServerThread.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\remote\server\RemoteMessageHandler.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\search\DatabaseSearcher.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\search\SearchQuery.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\shared\DatabaseConnection.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\shared\DatabaseConnectionProperties.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\shared\DatabaseLocation.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\shared\DatabaseNotSupportedException.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\shared\DatabaseSynchronizer.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\shared\DBMSConnection.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\shared\DBMSConnectionProperties.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\shared\DBMSConnectionPropertiesBuilder.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\shared\DBMSProcessor.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\shared\DBMSSynchronizer.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\shared\DBMSType.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\shared\event\ConnectionLostEvent.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\shared\event\SharedEntriesNotPresentEvent.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\shared\event\UpdateRefusedEvent.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\shared\exception\InvalidDBMSConnectionPropertiesException.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\shared\exception\NotASharedDatabaseException.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\shared\exception\OfflineLockException.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\shared\exception\SharedEntryNotPresentException.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\shared\listener\OracleNotificationListener.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\shared\listener\PostgresSQLNotificationListener.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\shared\MySQLProcessor.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\shared\OracleProcessor.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\shared\PostgreSQLProcessor.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\shared\prefs\SharedDatabasePreferences.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\shared\security\Password.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\texparser\DefaultLatexParser.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\texparser\LatexParser.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\texparser\TexBibEntriesResolver.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\TypedBibEntry.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\undo\AddUndoableActionEvent.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\undo\UndoChangeEvent.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\undo\UndoRedoEvent.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\util\BackupFileType.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\util\BuildInfo.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\util\CoarseChangeFilter.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\util\DelayTaskThrottler.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\util\ExternalLinkCreator.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\util\FileType.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\util\io\AutoLinkPreferences.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\util\io\BackupFileUtil.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\util\io\CitationKeyBasedFileFinder.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\util\io\DatabaseFileLookup.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\util\io\FileFinder.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\util\io\FileFinders.java...
line 8:15 extraneous input 'switch' expecting {'boolean', 'byte', 'char', 'double', 'float', 'int', 'long', 'new', 'short', 'super', 'this', 'void', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 8:71 missing ';' at '{'
line 9:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 11:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 13:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\util\io\FileHistory.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\util\io\FileNameCleaner.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\util\io\FileNameUniqueness.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\util\io\FileUtil.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\util\io\RegExpBasedFileFinder.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\util\io\XMLUtil.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\util\MetadataSerializationConfiguration.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\util\OS.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\util\StandardFileType.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\util\strings\HTMLUnicodeConversionMaps.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\util\strings\QuotedStringTokenizer.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\util\strings\RtfCharMap.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\util\strings\StringLengthComparator.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\util\strings\StringManipulator.java...
line 44:24 extraneous input 'switch' expecting {'boolean', 'byte', 'char', 'double', 'float', 'int', 'long', 'new', 'short', 'super', 'this', 'void', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 44:44 missing ';' at '{'
line 45:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 46:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 47:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 69:15 extraneous input 'switch' expecting {'boolean', 'byte', 'char', 'double', 'float', 'int', 'long', 'new', 'short', 'super', 'this', 'void', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 69:34 missing ';' at '{'
line 70:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 73:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\util\strings\StringSimilarity.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\util\strings\UnicodeLigaturesMap.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\util\strings\XmlCharsMap.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\util\TestEntry.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\util\UnknownFileType.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\util\UpdateField.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\util\Version.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\util\WebViewStore.java...
line 82:15 extraneous input 'int' expecting {'abstract', 'class', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 82:48 missing ';' at '('
line 82:51 missing '->' at '{'
line 89:8 missing ';' at 'public'
line 89:15 extraneous input 'int' expecting {'abstract', 'class', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 89:46 missing ';' at '('
line 89:49 missing '->' at '{'
line 92:4 missing ';' at '}'
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\WatchServiceUnavailableException.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\xmp\DocumentInformationExtractor.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\xmp\DublinCoreExtractor.java...
line 434:47 extraneous input 'standardField' expecting ')'
line 437:55 no viable alternative at input 'case EDITOR ->\n                            this.fillContributor(value);'
line 438:20 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 440:20 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 442:20 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 444:20 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 446:20 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 448:20 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 450:20 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 452:20 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 454:20 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 457:20 mismatched input 'case' expecting {'instanceof', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 463:20 mismatched input 'default' expecting {'instanceof', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 466:14 extraneous input 'else' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 479:26 no viable alternative at input 'dcSchema.setFormat('
line 479:27 extraneous input '"application/pdf"' expecting {'boolean', 'byte', 'char', 'double', 'final', 'float', 'int', 'long', 'short', ')', '@', IDENTIFIER}
line 479:45 mismatched input ';' expecting {'throws', '{'}
line 480:18 mismatched input ';' expecting {'throws', '{'}
line 482:0 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\xmp\EncryptedPdfsNotSupportedException.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\xmp\XmpPreferences.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\xmp\XmpUtilReader.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\xmp\XmpUtilShared.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\logic\xmp\XmpUtilWriter.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\migrations\ConvertLegacyExplicitGroups.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\migrations\ConvertMarkingToGroups.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\migrations\CustomEntryTypePreferenceMigration.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\migrations\MergeReviewIntoCommentMigration.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\migrations\PostOpenMigration.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\migrations\PreferencesMigrations.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\migrations\SpecialFieldsToSeparateFields.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\model\ChainNode.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\model\database\BibDatabase.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\model\database\BibDatabaseContext.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\model\database\BibDatabaseMode.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\model\database\BibDatabaseModeDetection.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\model\database\BibDatabases.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\model\database\event\AutosaveEvent.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\model\database\event\BibDatabaseContextChangedEvent.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\model\database\event\ChangePropagation.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\model\database\event\EntriesAddedEvent.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\model\database\event\EntriesRemovedEvent.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\model\database\KeyChangeListener.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\model\database\KeyCollisionException.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\model\entry\Author.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\model\entry\AuthorList.java...
line 154:15 extraneous input 'switch' expecting {'boolean', 'byte', 'char', 'double', 'float', 'int', 'long', 'new', 'short', 'super', 'this', 'void', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 154:39 missing ';' at '{'
line 155:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 155:19 mismatched input '->' expecting {'instanceof', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 156:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 156:19 mismatched input '->' expecting {'instanceof', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 157:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 157:19 mismatched input '->' expecting {'instanceof', ')', '[', ',', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 158:12 extraneous input 'default' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 318:15 extraneous input 'switch' expecting {'boolean', 'byte', 'char', 'double', 'float', 'int', 'long', 'new', 'short', 'super', 'this', 'void', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 318:39 missing ';' at '{'
line 319:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 319:19 mismatched input '->' expecting {'instanceof', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 320:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 320:19 mismatched input '->' expecting {'instanceof', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 321:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 321:19 mismatched input '->' expecting {'instanceof', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 322:12 extraneous input 'default' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 397:15 extraneous input 'switch' expecting {'boolean', 'byte', 'char', 'double', 'float', 'int', 'long', 'new', 'short', 'super', 'this', 'void', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 397:39 missing ';' at '{'
line 398:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 398:19 mismatched input '->' expecting {'instanceof', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 399:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 399:19 mismatched input '->' expecting {'instanceof', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 400:12 extraneous input 'default' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\model\entry\BibEntry.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\model\entry\BibEntryType.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\model\entry\BibEntryTypeBuilder.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\model\entry\BibEntryTypesManager.java...
line 35:15 extraneous input 'switch' expecting {'boolean', 'byte', 'char', 'double', 'float', 'int', 'long', 'new', 'short', 'super', 'this', 'void', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 35:29 missing ';' at '{'
line 36:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 37:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\model\entry\BibtexString.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\model\entry\CanonicalBibEntry.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\model\entry\Date.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\model\entry\EntryConverter.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\model\entry\EntryLinkList.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\model\entry\event\EntriesEvent.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\model\entry\event\EntriesEventSource.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\model\entry\event\EntryChangedEvent.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\model\entry\event\FieldAddedOrRemovedEvent.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\model\entry\event\FieldChangedEvent.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\model\entry\field\AMSField.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\model\entry\field\BibField.java...
line 5:7 extraneous input 'record' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 8:11 extraneous input 'boolean' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 11:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 14:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 16:8 extraneous input 'return' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 17:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 20:11 extraneous input 'int' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 22:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 25:11 extraneous input 'String' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 30:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 33:11 extraneous input 'int' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 35:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\model\entry\field\BiblatexApaField.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\model\entry\field\BiblatexSoftwareField.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\model\entry\field\Field.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\model\entry\field\FieldFactory.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\model\entry\field\FieldPriority.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\model\entry\field\FieldProperty.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\model\entry\field\IEEEField.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\model\entry\field\InternalField.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\model\entry\field\OrFields.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\model\entry\field\SpecialField.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\model\entry\field\SpecialFieldValue.java...
line 41:15 extraneous input 'switch' expecting {'boolean', 'byte', 'char', 'double', 'float', 'int', 'long', 'new', 'short', 'super', 'this', 'void', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 41:32 missing ';' at '{'
line 42:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 42:19 mismatched input '->' expecting {'instanceof', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 43:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 43:19 mismatched input '->' expecting {'instanceof', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 44:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 44:19 mismatched input '->' expecting {'instanceof', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 45:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 45:19 mismatched input '->' expecting {'instanceof', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 46:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 46:19 mismatched input '->' expecting {'instanceof', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 47:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 47:19 mismatched input '->' expecting {'instanceof', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 48:12 extraneous input 'default' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 61:15 extraneous input 'switch' expecting {'boolean', 'byte', 'char', 'double', 'float', 'int', 'long', 'new', 'short', 'super', 'this', 'void', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 61:29 missing ';' at '{'
line 62:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 63:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 64:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 65:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 66:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 67:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 68:12 extraneous input 'default' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\model\entry\field\StandardField.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\model\entry\field\UnknownField.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\model\entry\identifier\ARK.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\model\entry\identifier\ArXivIdentifier.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\model\entry\identifier\DOI.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\model\entry\identifier\EprintIdentifier.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\model\entry\identifier\IacrEprint.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\model\entry\identifier\Identifier.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\model\entry\identifier\ISBN.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\model\entry\identifier\ISSN.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\model\entry\identifier\MathSciNetId.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\model\entry\IdGenerator.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\model\entry\Keyword.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\model\entry\KeywordList.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\model\entry\LinkedFile.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\model\entry\Month.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\model\entry\ParsedEntryLink.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\model\entry\SharedBibEntryData.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\model\entry\types\BiblatexApaEntryType.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\model\entry\types\BiblatexAPAEntryTypeDefinitions.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\model\entry\types\BiblatexEntryTypeDefinitions.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\model\entry\types\BiblatexSoftwareEntryType.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\model\entry\types\BiblatexSoftwareEntryTypeDefinitions.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\model\entry\types\BibtexEntryTypeDefinitions.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\model\entry\types\EntryType.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\model\entry\types\EntryTypeFactory.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\model\entry\types\IEEETranEntryType.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\model\entry\types\IEEETranEntryTypeDefinitions.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\model\entry\types\StandardEntryType.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\model\entry\types\SystematicLiteratureReviewStudyEntryType.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\model\entry\types\SystematicLiteratureReviewStudyEntryTypeDefinitions.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\model\entry\types\UnknownEntryType.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\model\FieldChange.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\model\groups\AbstractGroup.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\model\groups\AllEntriesGroup.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\model\groups\AutomaticGroup.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\model\groups\AutomaticKeywordGroup.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\model\groups\AutomaticPersonsGroup.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\model\groups\event\GroupUpdatedEvent.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\model\groups\ExplicitGroup.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\model\groups\GroupEntryChanger.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\model\groups\GroupHierarchyType.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\model\groups\GroupTreeNode.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\model\groups\KeywordGroup.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\model\groups\LastNameGroup.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\model\groups\RegexKeywordGroup.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\model\groups\SearchGroup.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\model\groups\TexGroup.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\model\groups\WordKeywordGroup.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\model\metadata\ContentSelector.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\model\metadata\ContentSelectors.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\model\metadata\event\MetaDataChangedEvent.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\model\metadata\MetaData.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\model\metadata\SaveOrder.java...
line 109:35 extraneous input 'that' expecting ')'
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\model\openoffice\backend\NamedRange.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\model\openoffice\backend\NamedRangeManager.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\model\openoffice\CitationEntry.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\model\openoffice\ootext\OOFormat.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\model\openoffice\ootext\OOText.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\model\openoffice\ootext\OOTextIntoOO.java...
line 234:42 no viable alternative at input 'case "target" ->'
line 234:42 mismatched input '->' expecting {'instanceof', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 235:28 extraneous input 'default' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 238:20 extraneous input 'break' expecting {'abstract', 'boolean', 'byte', 'char', 'class', 'double', 'enum', 'final', 'float', 'int', 'interface', 'long', 'native', 'private', 'protected', 'public', 'short', 'static', 'strictfp', 'synchronized', 'transient', 'void', 'volatile', '{', '}', ';', '<', '@', IDENTIFIER}
line 239:16 extraneous input 'case' expecting {'abstract', 'boolean', 'byte', 'char', 'class', 'double', 'enum', 'final', 'float', 'int', 'interface', 'long', 'native', 'private', 'protected', 'public', 'short', 'static', 'strictfp', 'synchronized', 'transient', 'void', 'volatile', '{', '}', ';', '<', '@', IDENTIFIER}
line 241:58 no viable alternative at input 'setCharStyleName('
line 241:69 extraneous input ')' expecting ';'
line 244:16 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 244:27 mismatched input ':' expecting {'instanceof', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 250:52 no viable alternative at input 'case "oo:CharStyleName" ->'
line 250:52 mismatched input '->' expecting {'instanceof', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 253:28 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 253:40 mismatched input '->' expecting {'instanceof', ')', '[', ',', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 257:28 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 257:41 mismatched input '->' expecting {'instanceof', ')', '[', ',', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 266:28 extraneous input 'default' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 269:41 no viable alternative at input 'formatStack.pushLayer('
line 269:50 no viable alternative at input 'settings)'
line 269:51 mismatched input ';' expecting {'throws', '{'}
line 270:34 no viable alternative at input 'expectEnd.push('
line 270:35 mismatched input '"/"' expecting {'boolean', 'byte', 'char', 'double', 'final', 'float', 'int', 'long', 'short', ')', '@', IDENTIFIER}
line 272:16 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 272:25 mismatched input ':' expecting {'instanceof', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 273:25 mismatched input ':' expecting {'instanceof', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 274:26 mismatched input ':' expecting {'instanceof', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 275:26 mismatched input ':' expecting {'instanceof', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 276:33 mismatched input ':' expecting {'instanceof', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 277:27 mismatched input ':' expecting {'instanceof', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 278:27 mismatched input ':' expecting {'instanceof', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 279:25 mismatched input ':' expecting {'instanceof', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 280:25 mismatched input ':' expecting {'instanceof', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 281:28 mismatched input ':' expecting {'instanceof', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 291:16 extraneous input 'default' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 296:16 no viable alternative at input 'piv ='
line 296:34 mismatched input ';' expecting {'throws', '{'}
line 299:8 extraneous input 'if' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 301:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 303:8 extraneous input 'cursor' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 305:8 extraneous input 'if' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 307:12 extraneous input 'for' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 309:12 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 311:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 319:18 extraneous input 'void' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 320:75 extraneous input ',' expecting IDENTIFIER
line 320:83 mismatched input ')' expecting {'extends', 'implements', '{', '<'}
line 322:8 extraneous input 'XPropertySet' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 322:66 extraneous input ',' expecting IDENTIFIER
line 322:74 mismatched input ')' expecting {'extends', 'implements', '{', '<'}
line 323:8 extraneous input 'XPropertyState' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 323:73 extraneous input ',' expecting IDENTIFIER
line 323:81 mismatched input ')' expecting {'extends', 'implements', '{', '<'}
line 325:8 extraneous input 'try' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 328:12 extraneous input 'xPropertyState' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 329:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 333:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 345:14 extraneous input 'Set' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 356:8 extraneous input 'propertySet' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 356:53 extraneous input ',' expecting IDENTIFIER
line 356:61 mismatched input ')' expecting {'extends', 'implements', '{', '<'}
line 357:8 extraneous input 'XPropertySetInfo' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 360:8 extraneous input 'for' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 363:12 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 367:16 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 370:12 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 373:12 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 375:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 583:19 extraneous input 'List' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 585:8 extraneous input 'if' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 587:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 589:8 extraneous input 'while' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 591:12 extraneous input 'String' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 592:12 extraneous input 'res' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 593:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 595:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 600:19 extraneous input 'boolean' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 603:73 extraneous input ',' expecting IDENTIFIER
line 603:81 mismatched input ')' expecting {'extends', 'implements', '{', '<'}
line 604:8 extraneous input 'PropertyState' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 605:8 extraneous input 'if' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 608:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 610:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 616:19 extraneous input 'List' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 618:8 extraneous input 'settings' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 619:8 extraneous input 'return' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 620:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 622:19 extraneous input 'List' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 624:8 extraneous input 'settings' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 625:8 extraneous input 'return' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 626:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 628:19 extraneous input 'List' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 630:8 extraneous input 'settings' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 631:8 extraneous input 'return' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 632:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 635:19 extraneous input 'List' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 637:8 extraneous input 'settings' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 638:8 extraneous input 'return' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 639:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 642:19 extraneous input 'List' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 644:8 extraneous input 'settings' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 645:8 extraneous input 'return' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 646:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 649:19 extraneous input 'List' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 651:8 extraneous input 'if' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 653:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 655:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 657:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 660:19 extraneous input 'List' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 662:8 extraneous input 'settings' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 663:8 extraneous input 'return' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 664:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 669:19 extraneous input 'List' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 672:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 674:8 extraneous input 'String' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 675:8 extraneous input 'String' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 676:8 extraneous input 'String' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 677:8 extraneous input 'return' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 678:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 686:19 extraneous input 'List' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 691:8 extraneous input 'Optional' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 695:8 extraneous input 'Optional' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 699:8 extraneous input 'if' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 701:12 extraneous input 'double' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 702:12 extraneous input 'double' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 703:12 extraneous input 'double' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 704:12 extraneous input 'byte' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 705:12 extraneous input 'short' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 706:12 extraneous input 'if' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 708:12 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 711:12 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 715:12 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 718:12 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 721:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 723:19 extraneous input 'List' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 728:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 730:19 extraneous input 'List' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 735:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 740:18 extraneous input 'boolean' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 741:14 extraneous input 'boolean' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 742:14 extraneous input 'boolean' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 744:8 extraneous input 'XParagraphCursor' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 744:78 extraneous input ',' expecting IDENTIFIER
line 744:86 mismatched input ')' expecting {'extends', 'implements', '{', '<'}
line 745:8 extraneous input 'XPropertySet' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 745:66 extraneous input ',' expecting IDENTIFIER
line 745:83 mismatched input ')' expecting {'extends', 'implements', '{', '<'}
line 746:8 extraneous input 'try' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 748:12 extraneous input 'return' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 749:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 754:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 757:19 extraneous input 'void' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 760:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 765:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\model\openoffice\rangesort\FunctionalTextViewCursor.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\model\openoffice\rangesort\RangeHolder.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\model\openoffice\rangesort\RangeOverlap.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\model\openoffice\rangesort\RangeOverlapBetween.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\model\openoffice\rangesort\RangeOverlapKind.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\model\openoffice\rangesort\RangeOverlapWithin.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\model\openoffice\rangesort\RangeSort.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\model\openoffice\rangesort\RangeSortable.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\model\openoffice\rangesort\RangeSortEntry.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\model\openoffice\rangesort\RangeSortVisual.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\model\openoffice\style\Citation.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\model\openoffice\style\CitationGroup.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\model\openoffice\style\CitationGroupId.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\model\openoffice\style\CitationGroups.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\model\openoffice\style\CitationLookupResult.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\model\openoffice\style\CitationMarkerEntry.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\model\openoffice\style\CitationMarkerNormEntry.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\model\openoffice\style\CitationMarkerNumericBibEntry.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\model\openoffice\style\CitationMarkerNumericEntry.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\model\openoffice\style\CitationPath.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\model\openoffice\style\CitationType.java...
line 13:15 extraneous input 'switch' expecting {'boolean', 'byte', 'char', 'double', 'float', 'int', 'long', 'new', 'short', 'super', 'this', 'void', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 13:29 missing ';' at '{'
line 14:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 14:31 no viable alternative at input 'AUTHORYEAR_PAR,'
line 15:12 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\model\openoffice\style\CitedKey.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\model\openoffice\style\CitedKeys.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\model\openoffice\style\ComparableCitation.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\model\openoffice\style\ComparableCitedKey.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\model\openoffice\style\CompareCitation.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\model\openoffice\style\CompareCitedKey.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\model\openoffice\style\NonUniqueCitationMarker.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\model\openoffice\style\OODataModel.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\model\openoffice\style\PageInfo.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\model\openoffice\uno\CreationException.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\model\openoffice\uno\NoDocumentException.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\model\openoffice\uno\UnoBookmark.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\model\openoffice\uno\UnoCast.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\model\openoffice\uno\UnoCrossRef.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\model\openoffice\uno\UnoCursor.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\model\openoffice\uno\UnoNameAccess.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\model\openoffice\uno\UnoNamed.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\model\openoffice\uno\UnoProperties.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\model\openoffice\uno\UnoRedlines.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\model\openoffice\uno\UnoReferenceMark.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\model\openoffice\uno\UnoScreenRefresh.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\model\openoffice\uno\UnoSelection.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\model\openoffice\uno\UnoStyle.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\model\openoffice\uno\UnoTextDocument.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\model\openoffice\uno\UnoTextRange.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\model\openoffice\uno\UnoTextSection.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\model\openoffice\uno\UnoUndo.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\model\openoffice\uno\UnoUserDefinedProperty.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\model\openoffice\util\OOListUtil.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\model\openoffice\util\OOPair.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\model\openoffice\util\OOResult.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\model\openoffice\util\OOTuple3.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\model\openoffice\util\OOVoidResult.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\model\paging\Page.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\model\pdf\FileAnnotation.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\model\pdf\FileAnnotationType.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\model\pdf\search\EnglishStemAnalyzer.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\model\pdf\search\PdfSearchResults.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\model\pdf\search\SearchFieldConstants.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\model\pdf\search\SearchResult.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\model\schema\DublinCoreSchemaCustom.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\model\search\GroupSearchQuery.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\model\search\matchers\AndMatcher.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\model\search\matchers\MatcherSet.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\model\search\matchers\MatcherSets.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\model\search\matchers\NotMatcher.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\model\search\matchers\OrMatcher.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\model\search\rules\ContainsBasedSearchRule.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\model\search\rules\FullTextSearchRule.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\model\search\rules\GrammarBasedSearchRule.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\model\search\rules\RegexBasedSearchRule.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\model\search\rules\SearchRule.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\model\search\rules\SearchRules.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\model\search\rules\SentenceAnalyzer.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\model\search\SearchMatcher.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\model\strings\LatexToUnicodeAdapter.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\model\strings\StringUtil.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\model\strings\UnicodeToReadableCharMap.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\model\study\FetchResult.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\model\study\QueryResult.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\model\study\Study.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\model\study\StudyDatabase.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\model\study\StudyQuery.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\model\texparser\Citation.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\model\texparser\LatexBibEntriesResolverResult.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\model\texparser\LatexParserResult.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\model\TreeNode.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\model\util\DummyFileUpdateMonitor.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\model\util\FileUpdateListener.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\model\util\FileUpdateMonitor.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\model\util\ListUtil.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\model\util\MultiKeyMap.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\model\util\OptionalUtil.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\model\util\ResultingStringState.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\model\util\TreeCollector.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\preferences\AppearancePreferences.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\preferences\BibEntryPreferences.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\preferences\CleanupPreferences.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\preferences\ExternalApplicationsPreferences.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\preferences\FilePreferences.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\preferences\GeneralPreferences.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\preferences\GuiPreferences.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\preferences\ImportExportPreferences.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\preferences\InternalPreferences.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\preferences\JabRefPreferences.java...
line 1694:24 no viable alternative at input 'case ALWAYS -> {\n                            putBoolean(KEY_GEN_ALWAYS_ADD_LETTER, true);\n                            putBoolean(KEY_GEN_FIRST_LETTER_A, false);\n                        }\n                        case'
line 1694:24 mismatched input 'case' expecting {'instanceof', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 1698:24 mismatched input 'case' expecting {'instanceof', '[', ';', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 1702:20 missing ';' at '}'
line 1703:16 extraneous input '}' expecting ')'
line 1747:54 no viable alternative at input '.forEach((key, value) -> {\n                    switch (key) {\n                        case PushToApplications.EMACS ->'
line 1747:54 no viable alternative at input 'case PushToApplications.EMACS ->'
line 1747:54 mismatched input '->' expecting {'instanceof', ')', '[', ',', '.', '=', '>', '<', '?', '==', '<=', '>=', '!=', '&&', '||', '++', '--', '+', '-', '*', '/', '&', '|', '^', '%', '+=', '-=', '*=', '/=', '&=', '|=', '^=', '%=', '<<=', '>>=', '>>>=', '::'}
line 1749:24 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 1751:24 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 1753:24 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 1755:24 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 1757:24 extraneous input 'case' expecting {'abstract', 'assert', 'boolean', 'break', 'byte', 'char', 'class', 'continue', 'do', 'double', 'final', 'float', 'for', 'if', 'int', 'interface', 'long', 'new', 'private', 'protected', 'public', 'return', 'short', 'static', 'strictfp', 'super', 'switch', 'synchronized', 'this', 'throw', 'try', 'void', 'while', DECIMAL_LITERAL, HEX_LITERAL, OCT_LITERAL, BINARY_LITERAL, FLOAT_LITERAL, HEX_FLOAT_LITERAL, BOOL_LITERAL, CHAR_LITERAL, STRING_LITERAL, 'null', '(', '{', '}', ';', '<', '!', '~', '++', '--', '+', '-', '@', IDENTIFIER}
line 1760:17 extraneous input ')' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1762:8 extraneous input 'EasyBind' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1763:8 extraneous input 'EasyBind' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1765:8 extraneous input 'return' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1766:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1769:11 extraneous input 'ExternalApplicationsPreferences' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 1772:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1783:8 extraneous input 'EasyBind' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1785:8 extraneous input 'EasyBind' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1787:8 extraneous input 'EasyBind' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1789:8 extraneous input 'EasyBind' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1791:8 extraneous input 'EasyBind' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1793:8 extraneous input 'EasyBind' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1795:8 extraneous input 'EasyBind' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1798:8 extraneous input 'return' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1799:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1806:11 extraneous input 'MainTablePreferences' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 1809:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1816:8 extraneous input 'EasyBind' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1818:8 extraneous input 'EasyBind' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1821:8 extraneous input 'return' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1822:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1825:11 extraneous input 'ColumnPreferences' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 1828:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1831:8 extraneous input 'List' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1832:8 extraneous input 'mainTableColumnPreferences' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1834:8 extraneous input 'mainTableColumnPreferences' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1836:12 extraneous input 'putStringList' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1837:12 extraneous input 'putStringList' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1838:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1839:8 extraneous input 'mainTableColumnPreferences' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1842:8 extraneous input 'return' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1843:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1846:11 extraneous input 'ColumnPreferences' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 1849:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1852:8 extraneous input 'List' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1853:8 extraneous input 'searchDialogColumnPreferences' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1855:8 extraneous input 'searchDialogColumnPreferences' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1859:12 extraneous input 'putStringList' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1860:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1861:8 extraneous input 'searchDialogColumnPreferences' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1864:8 extraneous input 'return' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1865:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1869:12 extraneous input 'List' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 1871:8 extraneous input 'List' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1876:20 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1879:24 extraneous input 'return' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1880:20 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1883:8 extraneous input 'List' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1887:8 extraneous input 'List' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1888:8 extraneous input 'for' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1888:24 extraneous input 'i' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1888:48 extraneous input 'i' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1891:12 extraneous input 'if' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1893:12 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1897:12 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1900:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1902:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1904:12 extraneous input 'List' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 1906:8 extraneous input 'getStringList' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1910:8 extraneous input 'return' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1911:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1913:19 extraneous input 'List' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 1917:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1919:19 extraneous input 'List' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 1923:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1925:19 extraneous input 'List' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 1929:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1931:19 extraneous input 'List' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 1935:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1942:11 extraneous input 'NameDisplayPreferences' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 1945:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1948:8 extraneous input 'if' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1950:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1952:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1954:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1957:8 extraneous input 'if' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1959:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1961:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1967:8 extraneous input 'EasyBind' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1969:12 extraneous input 'putBoolean' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1970:12 extraneous input 'putBoolean' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1971:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1972:8 extraneous input 'EasyBind' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1974:12 extraneous input 'putBoolean' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1975:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1977:8 extraneous input 'return' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1978:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1985:11 extraneous input 'BibEntryPreferences' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 1988:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1994:8 extraneous input 'EasyBind' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1996:8 extraneous input 'return' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 1997:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2004:11 extraneous input 'InternalPreferences' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 2007:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2015:8 extraneous input 'EasyBind' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2017:8 extraneous input 'EasyBind' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2021:8 extraneous input 'return' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2022:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2024:12 extraneous input 'String' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 2027:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2031:12 extraneous input 'return' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2032:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2034:12 extraneous input 'return' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2035:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2043:11 extraneous input 'AppearancePreferences' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 2046:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2055:8 extraneous input 'EasyBind' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2056:8 extraneous input 'EasyBind' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2057:8 extraneous input 'EasyBind' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2059:8 extraneous input 'return' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2060:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2067:11 extraneous input 'ImportFormatPreferences' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 2075:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2078:11 extraneous input 'FieldPreferences' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 2081:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2092:8 extraneous input 'EasyBind' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2093:8 extraneous input 'fieldPreferences' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2095:8 extraneous input 'fieldPreferences' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2098:8 extraneous input 'return' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2099:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2102:11 extraneous input 'FilePreferences' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 2105:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2119:8 extraneous input 'EasyBind' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2120:8 extraneous input 'EasyBind' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2121:8 extraneous input 'EasyBind' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2122:8 extraneous input 'EasyBind' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2123:8 extraneous input 'EasyBind' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2124:8 extraneous input 'EasyBind' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2125:8 extraneous input 'EasyBind' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2126:8 extraneous input 'filePreferences' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2129:8 extraneous input 'return' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2130:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2133:11 extraneous input 'AutoLinkPreferences' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 2136:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2140:8 extraneous input 'if' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2142:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2144:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2152:8 extraneous input 'EasyBind' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2157:20 extraneous input 'putBoolean' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2158:16 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2161:20 extraneous input 'putBoolean' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2162:16 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2165:20 extraneous input 'putBoolean' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2166:16 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2169:8 extraneous input 'EasyBind' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2170:8 extraneous input 'EasyBind' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2172:8 extraneous input 'return' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2173:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2180:11 extraneous input 'ImportExportPreferences' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 2183:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2193:8 extraneous input 'EasyBind' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2194:8 extraneous input 'EasyBind' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2195:8 extraneous input 'EasyBind' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2196:8 extraneous input 'EasyBind' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2197:8 extraneous input 'EasyBind' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2198:8 extraneous input 'EasyBind' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2199:8 extraneous input 'EasyBind' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2201:8 extraneous input 'return' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2202:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2204:11 extraneous input 'SaveOrder' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 2211:8 extraneous input 'return' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2215:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2217:11 extraneous input 'void' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 2219:8 extraneous input 'putBoolean' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2221:8 extraneous input 'put' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2222:8 extraneous input 'put' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2223:8 extraneous input 'put' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2224:8 extraneous input 'putBoolean' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2225:8 extraneous input 'putBoolean' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2226:8 extraneous input 'putBoolean' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2227:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2229:12 extraneous input 'SaveOrder' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 2231:8 extraneous input 'List' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2233:8 extraneous input 'for' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2235:12 extraneous input 'criteria' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2238:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2241:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2244:11 extraneous input 'SaveConfiguration' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 2248:8 extraneous input 'SaveOrder' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2250:12 extraneous input 'case' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2251:12 extraneous input 'case' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2252:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2254:8 extraneous input 'return' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2258:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2261:11 extraneous input 'List' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 2263:8 extraneous input 'SaveConfiguration' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2264:8 extraneous input 'List' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2266:8 extraneous input 'for' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2268:12 extraneous input 'TemplateExporter' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2274:12 extraneous input 'format' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2275:12 extraneous input 'formats' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2276:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2278:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2281:11 extraneous input 'void' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 2284:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2285:28 extraneous input 'i' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2285:50 extraneous input 'i' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2287:16 extraneous input 'exporterData' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2288:16 extraneous input 'exporterData' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2290:16 extraneous input 'exporterData' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2291:16 extraneous input 'putStringList' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2292:12 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2294:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2302:11 extraneous input 'PreviewPreferences' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 2305:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2308:8 extraneous input 'List' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2310:8 extraneous input 'this' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2317:8 extraneous input 'previewPreferences' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2322:67 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2324:67 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2326:8 extraneous input 'EasyBind' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2327:8 extraneous input 'EasyBind' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2328:8 extraneous input 'EasyBind' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2330:8 extraneous input 'return' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2331:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2333:12 extraneous input 'List' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 2337:8 extraneous input 'if' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2339:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2347:24 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2349:24 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2353:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2355:12 extraneous input 'int' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 2357:8 extraneous input 'if' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2359:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2361:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2369:11 extraneous input 'SidePanePreferences' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 2372:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2379:8 extraneous input 'sidePanePreferences' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2381:8 extraneous input 'sidePanePreferences' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2383:8 extraneous input 'EasyBind' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2385:8 extraneous input 'return' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2386:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2388:12 extraneous input 'Set' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 2390:8 extraneous input 'if' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2392:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2395:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2398:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2400:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2402:12 extraneous input 'void' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 2404:8 extraneous input 'putBoolean' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2405:8 extraneous input 'putBoolean' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2406:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2408:12 extraneous input 'Map' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 2411:8 extraneous input 'List' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2412:8 extraneous input 'List' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2414:8 extraneous input 'for' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2414:24 extraneous input 'i' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2414:51 extraneous input '++' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2416:12 extraneous input 'try' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2417:67 extraneous input ',' expecting IDENTIFIER
line 2417:73 mismatched input ')' expecting {'extends', 'implements', '{', '<'}
line 2418:16 extraneous input 'preferredPositions' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2419:12 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2421:12 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2423:12 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2427:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2429:12 extraneous input 'void' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 2435:8 extraneous input 'List' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2439:8 extraneous input 'putStringList' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2440:8 extraneous input 'putStringList' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2441:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2448:11 extraneous input 'CleanupPreferences' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 2451:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2460:8 extraneous input 'cleanupPreferences' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2463:8 extraneous input 'EasyBind' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2465:12 extraneous input 'put' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2466:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2468:8 extraneous input 'return' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2469:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2472:11 extraneous input 'CleanupPreferences' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 2478:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2480:19 extraneous input 'EnumSet' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 2481:111 mismatched input ')' expecting IDENTIFIER
line 2482:8 extraneous input 'activeJobs' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2488:8 extraneous input 'return' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2489:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2496:11 extraneous input 'GuiPreferences' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 2499:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2518:8 extraneous input 'EasyBind' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2519:8 extraneous input 'EasyBind' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2520:8 extraneous input 'EasyBind' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2521:8 extraneous input 'EasyBind' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2522:8 extraneous input 'EasyBind' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2523:8 extraneous input 'guiPreferences' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2526:12 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2528:12 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2530:8 extraneous input 'EasyBind' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2533:12 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2535:12 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2537:8 extraneous input 'guiPreferences' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2538:8 extraneous input 'EasyBind' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2539:8 extraneous input 'EasyBind' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2540:8 extraneous input 'EasyBind' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2541:8 extraneous input 'EasyBind' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2542:8 extraneous input 'EasyBind' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2543:8 extraneous input 'EasyBind' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2544:8 extraneous input 'EasyBind' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2546:8 extraneous input 'return' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2547:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2549:12 extraneous input 'FileHistory' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 2553:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2555:12 extraneous input 'void' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 2560:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2567:11 extraneous input 'SearchPreferences' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 2570:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2573:8 extraneous input 'try' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2575:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2578:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2590:8 extraneous input 'EasyBind' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2591:8 extraneous input 'searchPreferences' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2593:12 extraneous input 'putBoolean' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2594:12 extraneous input 'putBoolean' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2595:12 extraneous input 'putBoolean' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2596:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2598:8 extraneous input 'EasyBind' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2599:8 extraneous input 'EasyBind' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2600:8 extraneous input 'EasyBind' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2602:8 extraneous input 'return' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2603:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2610:11 extraneous input 'XmpPreferences' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 2613:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2620:8 extraneous input 'EasyBind' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2622:8 extraneous input 'xmpPreferences' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2627:8 extraneous input 'return' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2628:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2631:11 extraneous input 'NameFormatterPreferences' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 2634:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2640:8 extraneous input 'nameFormatterPreferences' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2642:8 extraneous input 'nameFormatterPreferences' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2645:8 extraneous input 'return' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2646:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2649:11 extraneous input 'AutoCompletePreferences' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 2652:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2655:8 extraneous input 'if' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2657:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2659:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2668:8 extraneous input 'EasyBind' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2669:8 extraneous input 'EasyBind' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2670:8 extraneous input 'autoCompletePreferences' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2674:8 extraneous input 'EasyBind' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2677:16 extraneous input 'putBoolean' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2678:12 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2680:16 extraneous input 'putBoolean' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2681:12 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2683:16 extraneous input 'putBoolean' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2684:12 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2687:8 extraneous input 'return' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2688:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2691:11 extraneous input 'SpecialFieldsPreferences' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 2694:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2698:8 extraneous input 'EasyBind' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2700:8 extraneous input 'return' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2701:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2704:11 extraneous input 'MrDlibPreferences' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 2707:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2715:8 extraneous input 'EasyBind' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2716:8 extraneous input 'EasyBind' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2717:8 extraneous input 'EasyBind' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2718:8 extraneous input 'EasyBind' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2720:8 extraneous input 'return' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2721:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2724:11 extraneous input 'ProtectedTermsPreferences' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 2727:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2736:8 extraneous input 'protectedTermsPreferences' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2738:8 extraneous input 'protectedTermsPreferences' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2740:8 extraneous input 'protectedTermsPreferences' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2742:8 extraneous input 'protectedTermsPreferences' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2745:8 extraneous input 'return' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2746:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2753:11 extraneous input 'ImporterPreferences' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 2756:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2764:8 extraneous input 'EasyBind' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2765:8 extraneous input 'importerPreferences' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2766:8 extraneous input 'importerPreferences' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2768:8 extraneous input 'return' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2769:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2771:12 extraneous input 'Set' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 2774:8 extraneous input 'for' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2776:12 extraneous input 'try' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2780:16 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2783:16 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2786:12 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2790:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2792:11 extraneous input 'void' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 2794:8 extraneous input 'CustomImporter' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2795:8 extraneous input 'for' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2795:24 extraneous input 'i' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2795:51 extraneous input 'i' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2797:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2800:12 extraneous input 'Set' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 2803:8 extraneous input 'List' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2804:8 extraneous input 'List' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2805:8 extraneous input 'List' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2807:8 extraneous input 'for' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2807:24 extraneous input 'i' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2807:42 extraneous input 'i' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2813:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2816:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2818:12 extraneous input 'void' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 2820:8 extraneous input 'List' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2821:8 extraneous input 'List' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2823:8 extraneous input 'for' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2825:12 extraneous input 'uses' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2826:12 extraneous input 'keys' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2827:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2830:8 extraneous input 'putStringList' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2831:8 extraneous input 'putStringList' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2832:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2835:11 extraneous input 'GrobidPreferences' expecting {'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', '@'}
line 2838:8 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2845:8 extraneous input 'EasyBind' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2846:8 extraneous input 'EasyBind' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2847:8 extraneous input 'EasyBind' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2849:8 extraneous input 'return' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
line 2850:4 extraneous input '}' expecting {<EOF>, 'abstract', 'class', 'enum', 'final', 'interface', 'private', 'protected', 'public', 'static', 'strictfp', ';', '@'}
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\preferences\MrDlibPreferences.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\preferences\PreferencesFilter.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\preferences\PreferencesService.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\preferences\PreviewPreferences.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\preferences\PushToApplicationPreferences.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\preferences\SearchPreferences.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\preferences\SidePanePreferences.java...
parsing D:\lda_demoGPT\local\data\jabref\src\main\java\org\jabref\preferences\TelemetryPreferences.java...
all files procceed successfully...
Resolve types and bindings of variables, methods and expressions....
Resolve type bindings....
PdfMergeMetadataImporter expected a type, but actually it is FunctionEntity
Dependency analaysing....
types and bindings resolved successfully...
Dependency done....
dependencie data generating...
Start create dependencies matrix....
Finish create dependencies matrix....
reorder dependency matrix...
Dependencies data generating done successfully...
Consumed time: 59.217 s,  or 0.98695 min.
